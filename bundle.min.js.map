{"version":3,"file":"bundle.min.js","sources":["node_modules/tslib/tslib.es6.js","node_modules/javasetmap.ts/src/JavaMap.ts","node_modules/ts3dutils/src/Vector.ts","node_modules/ts3dutils/src/Matrix.ts","node_modules/ts3dutils/src/NLA.ts","node_modules/ts3dutils/src/V3.ts","node_modules/ts3dutils/src/Transformable.ts","node_modules/ts3dutils/src/M4.ts","node_modules/ts3dutils/src/toSource.ts","node_modules/ts3dutils/src/AABB.ts","node_modules/chroma.ts/src/index.ts","node_modules/tsgl/src/Buffer.ts","node_modules/tsgl/src/Mesh.ts","node_modules/tsgl/src/Shader.ts","node_modules/tsgl/src/Texture.ts","node_modules/tsgl/src/KhronosGroupWebGLDebug.ts","node_modules/tsgl/src/shaders/posCoordVS.glslx","node_modules/tsgl/src/TSGLContext.ts","node_modules/tsgl/src/shaders/sdfRenderFS.glslx","node_modules/lodash.memoize/index.js","node_modules/tsgl/src/shaders/posVS.glslx","node_modules/tsgl/src/shaders/colorFS.glslx","src/interpolationVS.glslx","node_modules/tsgl/src/shaders/varyingColorFS.glslx","node_modules/classnames/index.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {Equalable, int} from './Equalable'\n\n/**\n * Java style map.\n */\nexport class JavaMap<K extends Equalable & {hashCodes?(): int[], like?(x: any): boolean }, V> implements Map<K, V> {\n    [Symbol.toStringTag]: 'Map' = 'Map'\n\n    toString() {\n        return '{' + Array.from(this.entries2()).map(({key, value}) => key + ':' + value).join(', ') + '}'\n    }\n\n    forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                callbackfn.call(thisArg, value, key, this)\n            }\n        }\n    }\n\n    * keys(): IterableIterator<K> {\n        for (const bucket of this._map.values()) {\n            for (const {key} of bucket) {\n                yield key\n            }\n        }\n    }\n\n    * values(): IterableIterator<V> {\n        for (const bucket of this._map.values()) {\n            for (const {value} of bucket) {\n                yield value\n            }\n        }\n    }\n\n    protected _map: Map<int, { key: K, value: V }[]>\n    protected _size: int\n\n    constructor() {\n        this._map = new Map()\n        this._size = 0\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    set(key: K, value: V): this {\n        this.set2(key, value)\n        return this\n    }\n\n    /**\n     * Like {@link #set} except it returns true if key was new and false if the value was only updated.\n     *\n     */\n    set2(key: K, val: V): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        if (bucket) {\n            const pairIndex = bucket.findIndex(pair => pair.key.equals(key))\n            if (-1 == pairIndex) {\n                bucket.push({key: key, value: val})\n            } else {\n                bucket[pairIndex].value = val\n                return false\n            }\n        } else {\n            this._map.set(hashCode, [{key: key, value: val}])\n        }\n        this._size++\n        return true\n    }\n\n    has(key: K): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        return undefined !== bucket && bucket.some(pair => pair.key.equals(key))\n    }\n\n    get(key: K): V | undefined {\n        const\n                hashCode = key.hashCode(),\n                bucket = this._map.get(hashCode),\n                pair = bucket && bucket.find(pair => pair.key.equals(key))\n        return pair && pair.value\n    }\n\n    getLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            const canonVal = bucket && bucket.find(x => x.key.like!(key))\n            if (canonVal) return canonVal\n        }\n    }\n\n    setLike(key: K, val: V) {\n        return !this.getLike(key) && this.set(key, val)\n    }\n\n    'delete'(key: K) {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        if (bucket) {\n            const index = bucket.findIndex(x => x.key.equals(key))\n            if (-1 != index) {\n                if (1 == bucket.length) {\n                    this._map.delete(hashCode)\n                } else {\n                    bucket.splice(index, 1)\n                }\n                this._size--\n                return true\n            }\n        }\n        return false\n    }\n\n    deleteLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            if (bucket) {\n                const index = bucket.findIndex(x => x.key.like!(key))\n                if (-1 != index) {\n                    const deleted = bucket[index]\n                    if (1 == bucket.length) {\n                        this._map.delete(hashCode)\n                    } else {\n                        bucket.splice(index, 1)\n                    }\n                    this._size--\n                    return deleted\n                }\n            }\n        }\n    }\n\n    * entries2(): IterableIterator<{ key: K, value: V }> {\n        for (const bucket of this._map.values()) {\n            yield* bucket\n        }\n    }\n\n    * entries(): IterableIterator<[K, V]> {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                yield [key, value]\n            }\n        }\n    }\n\n    clear() {\n        this._map.clear()\n        this._size = 0\n    }\n\n    get size() {\n        return this._size\n    }\n}\n","import { Matrix } from './Matrix'\nimport { ArrayLikeWriteAble, assert, assertInst, assertNumbers, callsce, clamp, eq, eq0, FloatArray, int } from './NLA'\nimport { V3 } from './V3'\n\nexport class Vector {\n\tconstructor(readonly v: Float64Array) {\n\t\tassertInst(Float64Array, v)\n\t}\n\n\tstatic fromFunction(dims: int, f: (dim: int) => number): Vector {\n\t\tassertNumbers(dims)\n\t\tconst e = new Float64Array(dims)\n\t\tlet i = dims\n\t\twhile (i--) {\n\t\t\te[i] = f(i)\n\t\t}\n\t\treturn new Vector(e)\n\t}\n\n\tstatic random(dims: int): Vector {\n\t\treturn Vector.fromFunction(dims, i => Math.random())\n\t}\n\n\tstatic from(f64a: Float64Array): Vector\n\tstatic from(...args: number[]): Vector\n\tstatic from(...args: any[]): Vector {\n\t\tassert(\n\t\t\targs[0] instanceof Float64Array || args.every(a => 'number' == typeof a),\n\t\t\t'args[0] instanceof Float64Array || args.every(a => \"number\" == typeof a)',\n\t\t)\n\t\treturn new Vector(args[0] instanceof Float64Array ? args[0] : Float64Array.from(args))\n\t}\n\n\tstatic Zero(dims: int): Vector {\n\t\tassertNumbers(dims)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tstatic Unit(dims: int, dir: int): Vector {\n\t\tassertNumbers(dims, dir)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = +(i == dir) // +true === 1, +false === 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\t/**\n\t * Pack an array of Vectors into an array of numbers (Float32Array by default).\n\t *\n\t * @param vectors source array\n\t * @param dest destination array. If provided, must be large enough to fit v3count items.\n\t * @param srcStart starting index in source array\n\t * @param destStart starting index in destination array\n\t * @param vectorCount Number of V3s to copy.\n\t * @returns Packed array.\n\t */\n\tstatic pack<T extends FloatArray = Float32Array>(\n\t\tvectors: ReadonlyArray<Vector>,\n\t\tdest?: T,\n\t\tsrcStart: number = 0,\n\t\tdestStart: number = 0,\n\t\tvectorCount: number = vectors.length - srcStart,\n\t): T {\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\n\t\tconst dim = vectors[0].dim()\n\t\tconst result = dest || (new Float32Array(dim * vectorCount) as any) // TODO\n\t\tassert(\n\t\t\tresult.length - destStart >= vectorCount * dim,\n\t\t\t'dest.length - destStart >= v3count * 3',\n\t\t\tresult.length,\n\t\t\tdestStart,\n\t\t\tvectorCount * 3,\n\t\t)\n\n\t\tlet i = vectorCount,\n\t\t\tsrcIndex = srcStart,\n\t\t\tdestIndex = destStart\n\t\twhile (i--) {\n\t\t\tconst v = vectors[srcIndex++]\n\t\t\tfor (let d = 0; d < dim; d++) {\n\t\t\t\tresult[destIndex++] = v.v[d]\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic lerp(a: Vector, b: Vector, t: number) {\n\t\tassert(a.dim() == b.dim())\n\t\tconst n = new Float64Array(a.v.length)\n\t\tlet i = a.v.length\n\t\twhile (i--) {\n\t\t\tn[i] = a.v[i] * (1 - t) + b.v[i] * t\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tstatic add(...vs: Vector[]): Vector {\n\t\tconst dim = vs[0].v.length\n\t\tconst result = new Float64Array(dim)\n\t\tlet i = vs.length\n\t\twhile (i--) {\n\t\t\tlet d = dim\n\t\t\twhile (d--) {\n\t\t\t\tresult[d] += vs[i].v[d]\n\t\t\t}\n\t\t}\n\t\treturn new Vector(result)\n\t}\n\n\t/**\n\t * Create a new 4D Vector from a V3 and a weight.\n\t * @param v3\n\t * @param weight\n\t */\n\tstatic fromV3AndWeight(v3: V3, weight: number) {\n\t\treturn new Vector(new Float64Array([v3.x * weight, v3.y * weight, v3.z * weight, weight]))\n\t}\n\n\tget x() {\n\t\treturn this.v[0]\n\t}\n\tget y() {\n\t\treturn this.v[1]\n\t}\n\tget z() {\n\t\treturn this.v[2]\n\t}\n\tget w() {\n\t\treturn this.v[3]\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.v[Symbol.iterator]()\n\t}\n\n\tdim(): int {\n\t\treturn this.v.length\n\t}\n\n\te(index: int): number {\n\t\tif (0 > index || index >= this.v.length) {\n\t\t\tthrow new Error('array index out of bounds')\n\t\t}\n\t\treturn this.v[index]\n\t}\n\n\tplus(vector: Vector): Vector {\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] + v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tminus(vector: Vector): Vector {\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] - v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\ttimes(factor: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * factor\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdiv(val: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] / val\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdot(vector: Vector): number {\n\t\tassert(this.dim == vector.dim, 'passed vector must have the same dim')\n\t\tlet result = 0\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * v[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tcross(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst n = new Float64Array(3)\n\t\tn[0] = this.v[1] * vector.v[2] - this.v[2] * vector.v[1]\n\t\tn[1] = this.v[2] * vector.v[0] - this.v[0] * vector.v[2]\n\t\tn[2] = this.v[0] * vector.v[1] - this.v[1] * vector.v[0]\n\n\t\treturn new Vector(n)\n\t}\n\n\tschur(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj === this) return true\n\t\tif (obj.constructor !== Vector) return false\n\t\tif (this.v.length != obj.v.length) return false\n\t\tlet i = this.v.length\n\t\twhile (i--) {\n\t\t\tif (this.v[i] !== obj.v[i]) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tlike(obj: any): boolean {\n\t\tif (obj === this) return true\n\t\tif (obj.constructor !== Vector) return false\n\t\tif (this.v.length != obj.v.length) return false\n\t\tlet i = this.v.length\n\t\twhile (i--) {\n\t\t\tif (!eq(this.v[i], obj.v[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tmap(f: (el: number, dim: number) => number): Vector {\n\t\treturn new Vector(this.v.map(f))\n\t}\n\n\ttoString(roundFunction?: (x: number) => any): string {\n\t\troundFunction = roundFunction || (v => +v.toFixed(6))\n\t\treturn 'Vector(' + this.v.map(roundFunction).join(', ') + ')'\n\t}\n\n\ttoSource() {\n\t\treturn callsce('VV', ...this.v)\n\t}\n\n\tangleTo(vector: Vector): number {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn Math.acos(clamp(this.dot(vector) / this.length() / vector.length(), -1, 1))\n\t}\n\n\t/**\n\t * Returns true iff this is parallel to vector, using eq\n\t * Throw a DebugError\n\t * - if vector is not a Vector or\n\t * - if this has a length of 0 or\n\t * - if vector has a length of 0\n\t */\n\tisParallelTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\n\t\t// in both cases the vectors are paralle, so check if abs(a . b) == |a|*|b|\n\t\treturn eq(Math.sqrt(this.lengthSquared() * vector.lengthSquared()), Math.abs(this.dot(vector)))\n\t}\n\n\tisPerpendicularTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn eq0(this.dot(vector))\n\t}\n\n\t/**\n\t * Returns true iff the length of this vector is 0, as returned by NLA.isZero.\n\t * Definition: Vector.prototype.isZero = () => NLA.isZero(this.length())\n\t */\n\tisZero(): boolean {\n\t\treturn eq0(this.length())\n\t}\n\n\t/*/ Returns the length of this Vector, i.e. the euclidian norm.*/\n\tlength(): number {\n\t\treturn Math.hypot.apply(undefined, this.v)\n\t\t//return Math.sqrt(this.lengthSquared())\n\t}\n\n\tlengthSquared(): number {\n\t\tlet result = 0\n\t\tconst u = this.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * u[i]\n\t\t}\n\t\treturn result\n\t}\n\n\t/**\n\t * Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\n\t */\n\tunit(): Vector {\n\t\tconst length = this.length()\n\t\tif (eq0(length)) {\n\t\t\tthrow new Error('cannot normalize zero vector')\n\t\t}\n\t\treturn this.div(this.length())\n\t}\n\n\t/**\n\t * Documentation stub. You want {@link unit}\n\t */\n\tnormalized(): V3 {\n\t\tthrow new Error('documentation stub. use .unit()')\n\t}\n\n\tasRowMatrix(): Matrix {\n\t\treturn new Matrix(this.v.length, 1, this.v)\n\t}\n\n\tasColMatrix(): Matrix {\n\t\treturn new Matrix(1, this.v.length, this.v)\n\t}\n\n\t/**\n\t * Returns a new Vector which is the projection of this vector onto the passed vector.\n\t * @example\n\t * VV(3, 4).projectedOn(VV(1, 0)) // returns VV(3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(2, 0)) // returns VV(3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(-1, 0)) // returns VV(-3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(0, 1)) // returns VV(0, 4)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(1, 1)) // returns\n\t */\n\tprojectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn b.times(this.dot(b) / b.dot(b))\n\t}\n\n\trejectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\n\t}\n\n\tto(a: Vector): Vector {\n\t\treturn a.minus(this)\n\t}\n\n\t/**\n\t * Returns true iff the length() of this vector is equal to 'length', using equals\n\t * E.g. NLA.V(3, 4).hasLength(5) === true\n\t * NLA.V(1, 1).hasLength(1) === false\n\t */\n\thasLength(length: number): boolean {\n\t\tassertNumbers(length)\n\t\treturn eq(length, this.length())\n\t}\n\n\tV3(): V3 {\n\t\t//assert(this.dim() == 3)\n\t\treturn new V3(this.v[0], this.v[1], this.v[2])\n\t}\n\n\t/**\n\t * Project into 3 dimensions.\n\t */\n\tp3(): V3 {\n\t\tassert(this.v.length == 4)\n\t\tconst w = this.v[3]\n\t\treturn new V3(this.v[0] / w, this.v[1] / w, this.v[2] / w)\n\t}\n\n\ttransposed() {\n\t\treturn new Matrix(this.v.length, 1, this.v)\n\t}\n}\n\nexport function VV(...values: number[]) {\n\treturn new Vector(new Float64Array(values))\n}\n\nexport function vArrGet(vArr: ArrayLike<number>, dim: int, i: int) {\n\tassert(vArr.length % dim == 0)\n\treturn new Vector(Float64Array.prototype.slice.call(vArr, i * dim, (i + 1) * dim))\n}\n\nexport function vArrSet(vArr: ArrayLikeWriteAble<number>, i: int, vector: Vector) {\n\tconst dim = vector.dim()\n\tassert(vArr.length % dim == 0)\n\tlet d = dim\n\twhile (d--) {\n\t\tvArr[i * dim + d] = vector.v[d]\n\t}\n}\n","import { Equalable } from 'javasetmap.ts'\n\nimport {\n\tarrayCopy,\n\tarrayCopyBlocks,\n\tarrayCopyStep,\n\tarrayFromFunction,\n\tarraySwap,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertInts,\n\tassertNumbers,\n\tassertVectors,\n\teq,\n\teq0,\n\tFloatArray,\n\tfloatHashCode,\n\tint,\n\tNLA_PRECISION,\n} from './NLA'\nimport { Vector } from './Vector'\n\nexport class Matrix implements Equalable {\n\tconstructor(public width: int, public height: int, public readonly m: Float64Array) {\n\t\tassertInts(width, height)\n\t\tassertf(() => 0 < width)\n\t\tassertf(() => 0 < height)\n\t\tassert(width * height == m.length, 'width * height == m.length', width, height, m.length)\n\t}\n\n\tstatic random(width: int, height: int): Matrix {\n\t\treturn Matrix.fromFunction(width, height, () => Math.random())\n\t}\n\n\tstatic fromFunction(width: int, height: int, f: (row: int, col: int, elIndex: int) => number): Matrix {\n\t\tconst m = new Float64Array(height * width)\n\t\tlet elIndex = height * width\n\t\twhile (elIndex--) {\n\t\t\tm[elIndex] = f(Math.floor(elIndex / width), elIndex % width, elIndex)\n\t\t}\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tstatic identityN(dim: int): Matrix {\n\t\tassertInts(dim)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Arrays are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= dim + 1\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\t/**\n\t * Create new dim x dim matrix equal to an identity matrix with rows/colums i and k swapped. Note that i and k\n\t * are 0-indexed.\n\t */\n\tstatic permutation(dim: int, i: int, k: int): Matrix {\n\t\tassertInts(dim, i, k)\n\t\tassertf(() => 0 <= i && i < dim)\n\t\tassertf(() => 0 <= k && k < dim)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Array are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= dim + 1\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\tm[i * dim + i] = 0\n\t\tm[k * dim + k] = 0\n\t\tm[i * dim + k] = 1\n\t\tm[k * dim + i] = 1\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\tstatic fromRowArrays(...rowArrays: ArrayLike<number>[]): Matrix {\n\t\tif (0 == rowArrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst height = rowArrays.length\n\t\tconst width = rowArrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopy(rowArrays[0], 0, m, 0, width)\n\t\tfor (let rowIndex = 1; rowIndex < height; rowIndex++) {\n\t\t\tif (rowArrays[rowIndex].length != width) {\n\t\t\t\tthrow new Error('all row arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopy(rowArrays[rowIndex], 0, m, rowIndex * width, width)\n\t\t}\n\t\treturn this.new(width, height, m)\n\t}\n\n\tstatic fromColVectors(colVectors: Vector[]): Matrix {\n\t\treturn Matrix.fromColArrays(...colVectors.map(v => v.v))\n\t}\n\n\tstatic forWidthHeight(width: int, height: int): Matrix {\n\t\treturn new Matrix(width, height, new Float64Array(width * height))\n\t}\n\n\tstatic fromColArrays(...colArrays: ArrayLike<number>[]): Matrix {\n\t\tif (0 == colArrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst width = colArrays.length\n\t\tconst height = colArrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopyStep(colArrays[0], 0, 1, m, 0, width, height)\n\t\tfor (let colIndex = 1; colIndex < width; colIndex++) {\n\t\t\tif (colArrays[colIndex].length != height) {\n\t\t\t\tthrow new Error('all col arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopyStep(colArrays[colIndex], 0, 1, m, colIndex, width, height)\n\t\t}\n\t\treturn this.new(width, height, m)\n\t}\n\n\tstatic product(...m4s: Matrix[]): Matrix\n\tstatic product(ms: Matrix[], result?: Matrix): Matrix\n\tstatic product(...args: any[]): Matrix {\n\t\tconst [ms, result]: [Matrix[], Matrix | undefined] = Array.isArray(args[0])\n\t\t\t? [args[0], args[1]]\n\t\t\t: [args, undefined]\n\t\tif (0 == ms.length) throw new Error(\"Can't guess matrix size.\")\n\t\tif (1 == ms.length) return Matrix.copy(ms[0], result)\n\t\treturn Matrix.copy(ms.reduce((a, b) => a.times(b)), result)\n\t}\n\n\t/**\n\t * Numerically calculate all the partial derivatives of f at x0.\n\t *\n\t * @param f\n\t * @param x0\n\t * @param fx0 f(x0), pass it if you have it already\n\t * @param EPSILON\n\t */\n\tstatic jacobi(\n\t\tf: (x: FloatArray) => ArrayLike<number>,\n\t\tx0: FloatArray,\n\t\tfx0: ArrayLike<number> = f(x0),\n\t\tEPSILON: number = 1e-6,\n\t): Matrix {\n\t\tconst jacobi = Matrix.forWidthHeight(x0.length, fx0.length)\n\t\tfor (let colIndex = 0; colIndex < x0.length; colIndex++) {\n\t\t\tx0[colIndex] += EPSILON\n\t\t\tconst fx = f(x0)\n\t\t\tfor (let rowIndex = 0; rowIndex < fx0.length; rowIndex++) {\n\t\t\t\tconst value = (fx[rowIndex] - fx0[rowIndex]) / EPSILON\n\t\t\t\tjacobi.setEl(rowIndex, colIndex, value)\n\t\t\t}\n\t\t\tx0[colIndex] -= EPSILON\n\t\t}\n\t\treturn jacobi\n\t}\n\n\tstatic copy<T extends Matrix>(src: T, result: T = src.new()): T {\n\t\tassertInst(Matrix, src, result)\n\t\tassert(src.width == result.width)\n\t\tassert(src.height == result.height)\n\t\tassert(result != src, 'result != src')\n\t\tconst s = src.m,\n\t\t\td = result.m\n\t\tlet i = s.length\n\t\twhile (i--) {\n\t\t\td[i] = s[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tprotected static new(width: int, height: int, m: Float64Array) {\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tcopy(): this {\n\t\treturn Matrix.copy<this>(this)\n\t}\n\n\te(rowIndex: number, colIndex: number): number {\n\t\tassertInts(rowIndex, colIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\treturn this.m[rowIndex * this.width + colIndex]\n\t}\n\n\tsetEl(rowIndex: number, colIndex: number, val: number): void {\n\t\tassertInts(rowIndex, colIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\tassertNumbers(val)\n\t\tthis.m[rowIndex * this.width + colIndex] = val\n\t}\n\n\tplus(m: this): this {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] + m.m[i]\n\t\treturn r\n\t}\n\n\tminus(m: Matrix): Matrix {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] - m.m[i]\n\t\treturn r\n\t}\n\n\tmulScalar(scalar: number): this {\n\t\tassertNumbers(scalar)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] * scalar\n\t\treturn r\n\t}\n\n\tdivScalar(scalar: number): this {\n\t\tassertNumbers(scalar)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] / scalar\n\t\treturn r\n\t}\n\n\tnew(): this {\n\t\treturn new Matrix(this.width, this.height, new Float64Array(this.width * this.height)) as this\n\t}\n\n\ttoString(f?: (el: number) => string, colNames?: ReadonlyArray<string>, rowNames?: ReadonlyArray<string>): string {\n\t\tf = f || (v => v.toFixed(6))\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\n\t\tassert(!colNames || colNames.length == this.width)\n\t\tassert(!rowNames || rowNames.length == this.height)\n\t\tconst rounded: string[] = Array.from(this.m).map(f)\n\t\tconst rows = arrayFromFunction(this.height, rowIndex =>\n\t\t\trounded.slice(rowIndex * this.width, (rowIndex + 1) * this.width),\n\t\t) // select matrix row\n\t\tif (colNames) {\n\t\t\trows.unshift(Array.from(colNames))\n\t\t}\n\t\tif (rowNames) {\n\t\t\trows.forEach((row, rowIndex) => row.unshift(rowNames[rowIndex - (colNames ? 1 : 0)] || ''))\n\t\t}\n\t\tconst colWidths = arrayFromFunction(this.width, colIndex => rows.map(row => row[colIndex].length).max())\n\t\treturn rows\n\t\t\t.map((row, rowIndex) =>\n\t\t\t\trow\n\t\t\t\t\t.map((x, colIndex) => {\n\t\t\t\t\t\t// pad numbers with spaces to col width\n\t\t\t\t\t\tconst padder =\n\t\t\t\t\t\t\t(rowIndex == 0 && colNames) || (colIndex == 0 && rowNames)\n\t\t\t\t\t\t\t\t? String.prototype.padEnd\n\t\t\t\t\t\t\t\t: String.prototype.padStart\n\t\t\t\t\t\treturn padder.call(x, colWidths[colIndex])\n\t\t\t\t\t})\n\t\t\t\t\t.join('  '),\n\t\t\t)\n\t\t\t.map(x => x + '\\n')\n\t\t\t.join('') // join rows\n\t}\n\n\trow(rowIndex: int): Vector {\n\t\tassertInts(rowIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tconst v = new Float64Array(this.width)\n\t\tarrayCopy(this.m, rowIndex * this.width, v, 0, this.width)\n\t\treturn new Vector(v)\n\t}\n\n\tcol(colIndex: int): Vector {\n\t\tassertInts(colIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\tconst v = new Float64Array(this.height)\n\t\tarrayCopyStep(this.m, colIndex, this.width, v, 0, 1, this.height)\n\t\treturn new Vector(v)\n\t}\n\n\tdim(): { width: int; height: int } {\n\t\treturn { width: this.width, height: this.height }\n\t}\n\n\tdimString(): string {\n\t\treturn this.width + 'x' + this.height\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj.constructor != this.constructor) return false\n\t\tif (this.width != obj.width || this.height != obj.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (this.m[elIndex] != obj.m[elIndex]) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tequalsMatrix(matrix: Matrix, precision: number = NLA_PRECISION): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\tif (this.width != matrix.width || this.height != matrix.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (Math.abs(this.m[elIndex] - matrix.m[elIndex]) >= precision) return false\n\t\t}\n\t\treturn true\n\t}\n\n\thashCode(): int {\n\t\tlet result = 0\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tresult = result * 31 + floatHashCode(this.m[elIndex])\n\t\t}\n\t\treturn result\n\t}\n\n\t// todo rename\n\tisZero(): boolean {\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (!eq0(this.m[elIndex])) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisOrthogonal(): boolean {\n\t\treturn (\n\t\t\tthis.isSquare() &&\n\t\t\tthis.transposed()\n\t\t\t\t.times(this)\n\t\t\t\t.equalsMatrix(Matrix.identityN(this.width))\n\t\t)\n\t}\n\n\t/**\n\t * Returns L, U, P such that L * U == P * this\n\t */\n\tluDecomposition(): { L: Matrix; U: Matrix; P: Matrix } {\n\t\tassertf(() => this.isSquare(), this.dim().toSource())\n\t\tconst dim = this.width\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(dim, row => new Float64Array(dim))\n\t\tconst pRowArrays = Matrix.identityN(dim).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < dim; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0,\n\t\t\t\tpivotRowIndex = -1,\n\t\t\t\tnumberOfNonZeroRows = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < dim; rowIndex++) {\n\t\t\t\tconst el = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[colIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < dim; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < dim; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays(...lRowArrays),\n\t\t\tU: Matrix.fromRowArrays(...uRowArrays),\n\t\t\tP: Matrix.fromRowArrays(...pRowArrays),\n\t\t}\n\t}\n\n\tgauss(): { L: Matrix; U: Matrix; P: Matrix } {\n\t\tconst width = this.width,\n\t\t\theight = this.height\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(height, row => new Float64Array(width))\n\t\tconst pRowArrays = Matrix.identityN(height).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < width; colIndex++) {\n\t\t\t// console.log('currentRowIndex', currentRowIndex)\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0,\n\t\t\t\tpivotRowIndex = -1,\n\t\t\t\tnumberOfNonZeroRows = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < height; rowIndex++) {\n\t\t\t\tconst el = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[currentRowIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < height; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < width; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays(...lRowArrays),\n\t\t\tU: Matrix.fromRowArrays(...uRowArrays),\n\t\t\tP: Matrix.fromRowArrays(...pRowArrays),\n\t\t}\n\t}\n\n\tqrDecompositionGivensRotation(): { Q: Matrix; R: Matrix } {\n\t\t// function sigma(c: number, s: number) {\n\t\t// \tif (0 == c) {\n\t\t// \t\treturn 1\n\t\t// \t}\n\t\t// \tif (Math.abs(s) < Math.abs(c)) {\n\t\t// \t\treturn 0.5 * Math.sign(c) * s\n\t\t// \t}\n\t\t// \treturn (2 * Math.sign(s)) / c\n\t\t// }\n\t\tconst R = this.copy()\n\n\t\tfunction matrixForCS(dim: int, i: int, k: int, c: number, s: number) {\n\t\t\tconst m = Matrix.identityN(dim)\n\t\t\tm.setEl(i, i, c)\n\t\t\tm.setEl(k, k, c)\n\t\t\tm.setEl(i, k, s)\n\t\t\tm.setEl(k, i, -s)\n\t\t\treturn m\n\t\t}\n\n\t\tlet qTransposed = Matrix.identityN(this.height)\n\t\tfor (let colIndex = 0; colIndex < this.width; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tfor (let rowIndex = colIndex + 1; rowIndex < this.height; rowIndex++) {\n\t\t\t\t//console.log('row ', rowIndex, 'col ', colIndex)\n\t\t\t\tconst xi = R.e(colIndex, colIndex)\n\t\t\t\tconst xk = R.e(rowIndex, colIndex)\n\t\t\t\tif (xk == 0) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tconst r = Math.hypot(xi, xk)\n\t\t\t\tconst c = xi / r\n\t\t\t\tconst s = xk / r\n\n\t\t\t\t// apply transformation on every column:\n\t\t\t\tfor (let col2 = colIndex; col2 < this.width; col2++) {\n\t\t\t\t\tconst x1 = R.e(colIndex, col2) * c + R.e(rowIndex, col2) * s\n\t\t\t\t\tconst x2 = R.e(rowIndex, col2) * c - R.e(colIndex, col2) * s\n\t\t\t\t\tR.setEl(colIndex, col2, x1)\n\t\t\t\t\tR.setEl(rowIndex, col2, x2)\n\t\t\t\t}\n\t\t\t\t//console.log('r ', r, 'c ', c, 's ', s, 'sigma', sigma(c, s))\n\t\t\t\t//console.log(this.toString(),'cs\\n', matrixForCS(this.height, colIndex, rowIndex, c, s).toString())\n\t\t\t\tqTransposed = matrixForCS(this.height, colIndex, rowIndex, c, s).times(qTransposed)\n\t\t\t}\n\t\t}\n\t\t//console.log(qTransposed.transposed().toString(), this.toString(),\n\t\t// qTransposed.transposed().times(this).toString())\n\t\treturn { Q: qTransposed.transposed(), R }\n\t}\n\n\tisPermutation(): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tif (this.m.some(value => !eq0(value) && !eq(1, value))) return false\n\n\t\tconst rows = this.asRowArrays(Array)\n\t\tif (rows.some(row => (row as number[]).filter(value => eq(1, value)).length != 1)) return false\n\n\t\tconst cols = this.asColArrays(Array)\n\t\tif (cols.some(col => (col as number[]).filter(value => eq(1, value)).length != 1)) return false\n\n\t\treturn true\n\t}\n\n\tisDiagonal(precision?: number): boolean {\n\t\tlet i = this.m.length\n\t\twhile (i--) {\n\t\t\tif (0 !== i % (this.width + 1) && !eq0(this.m[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tisIdentity(precision?: number): boolean {\n\t\treturn this.isLowerUnitriangular(precision) && this.isUpperTriangular(precision)\n\t}\n\n\tisUpperTriangular(precision: number = NLA_PRECISION) {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 1; rowIndex < this.height; rowIndex++) {\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex], precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisSymmetric(precision = NLA_PRECISION) {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\tconst a = this.m[rowIndex * this.width + colIndex]\n\t\t\t\tconst b = this.m[colIndex * this.width + rowIndex]\n\t\t\t\tif (!eq(a, b, precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\t/**\n\t * Returns x, so that this * x = b\n\t * More efficient than calculating the inverse for few (~ <= this.height) values\n\t */\n\tsolveLinearSystem(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\tconst { L, U, P } = this.luDecomposition()\n\t\tconst y = L.solveForwards(P.timesVector(b))\n\t\tconst x = U.solveBackwards(y)\n\t\treturn x\n\t}\n\n\tisLowerUnitriangular(precision: number = NLA_PRECISION): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex; colIndex < this.width; colIndex++) {\n\t\t\t\tconst el = this.m[rowIndex * this.width + colIndex]\n\t\t\t\tif (rowIndex == colIndex ? !eq(1, el, precision) : !eq0(el, precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisLowerTriangular(precision: number = NLA_PRECISION): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex], precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tsolveBackwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassert(this.isUpperTriangular(), 'this.isUpperTriangular()\\n' + this.str)\n\t\tconst v = new Float64Array(this.width)\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tsolveBackwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveBackwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveForwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassertf(() => this.isLowerTriangular(), this.toString())\n\t\tconst v = new Float64Array(this.width)\n\t\tfor (let rowIndex = 0; rowIndex < this.height; rowIndex++) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\t/**\n\t * Calculates rank of matrix.\n\t * Number of linearly independant row/column vectors.\n\t * Is equal to the unmber of dimensions the image of the affine transformation represented this matrix has.\n\t */\n\trank(): int {\n\t\tconst U = this.gauss().U\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex-- && U.row(rowIndex).isZero()) {}\n\t\treturn rowIndex + 1\n\t}\n\n\trowsIndependent(): boolean {\n\t\treturn this.height == this.rank()\n\t}\n\n\tcolsIndependent(): boolean {\n\t\treturn this.width == this.rank()\n\t}\n\n\tasRowArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T = Float64Array as any): T[] {\n\t\treturn arrayFromFunction(this.height, rowIndex => this.rowArray(rowIndex, arrayConstructor))\n\t}\n\n\tasColArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T = Float64Array as any): T[] {\n\t\treturn arrayFromFunction(this.width, colIndex => this.colArray(colIndex, arrayConstructor))\n\t}\n\n\trowArray<T extends FloatArray>(rowIndex: int, arrayConstructor: new (length: int) => T = Float64Array as any): T {\n\t\tconst result = new arrayConstructor(this.width)\n\t\treturn arrayCopy(this.m, rowIndex * this.width, result, 0, this.width)\n\t\treturn result\n\t}\n\n\tcolArray<T extends FloatArray>(colIndex: int, arrayConstructor: new (length: int) => T = Float64Array as any): T {\n\t\tconst result = new arrayConstructor(this.width)\n\t\tarrayCopyStep(this.m, colIndex, this.height, result, 0, 1, this.height)\n\t\treturn result\n\t}\n\n\tsubMatrix(firstColIndex: int, subWidth: int, firstRowIndex: int, subHeight: int): Matrix {\n\t\tassert(0 < firstColIndex && 0 < subWidth && 0 < firstRowIndex && 0 < subHeight)\n\t\tassert(firstColIndex + subWidth <= this.width && firstRowIndex + subHeight <= this.height)\n\t\tconst m = new Float64Array(subWidth * subHeight)\n\t\tarrayCopyBlocks(this.m, firstColIndex, this.width, m, 0, subWidth, subHeight, subWidth)\n\t\treturn new Matrix(subWidth, subHeight, m)\n\t}\n\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): Matrix {\n\t\treturn new Matrix(this.width, this.height, this.m.map(fn))\n\t}\n\n\tdimEquals(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.width && this.height == matrix.height\n\t}\n\n\tinversed(): Matrix {\n\t\tif (this.isSquare()) {\n\t\t\tif (2 == this.width) return this.inversed2()\n\t\t\tif (3 == this.width) return this.inversed3()\n\t\t\tif (4 == this.width) return this.inversed4()\n\t\t}\n\t\tconst { L, U, P } = this.luDecomposition()\n\t\tconst y = L.solveForwardsMatrix(P)\n\t\tconst inverse = U.solveBackwardsMatrix(y)\n\t\treturn inverse\n\t}\n\n\tinversed2(): Matrix {\n\t\tassertf(() => 2 == this.width && 2 == this.height)\n\t\tconst result = Matrix.forWidthHeight(2, 2),\n\t\t\tm = this.m,\n\t\t\tr = result.m\n\n\t\tconst det = m[0] * m[3] - m[1] * r[2]\n\n\t\tr[0] = m[3] / det\n\t\tr[1] = -m[2] / det\n\n\t\tr[2] = -m[1] / det\n\t\tr[3] = m[0] / det\n\n\t\treturn result\n\t}\n\n\tinversed3(result = Matrix.forWidthHeight(3, 3)): Matrix {\n\t\tassertInst(Matrix, result)\n\t\tassertf(() => 3 == this.width && 3 == this.height)\n\t\tassertf(() => 3 == result.width && 3 == result.height)\n\t\tassert(() => this != result)\n\t\tconst m = this.m,\n\t\t\tr = result.m\n\n\t\tr[0] = m[4] * m[8] - m[5] * m[7]\n\t\tr[1] = -m[1] * m[8] + m[2] * m[7]\n\t\tr[2] = m[1] * m[5] - m[2] * m[4]\n\n\t\tr[3] = -m[3] * m[8] + m[5] * m[6]\n\t\tr[4] = m[0] * m[8] - m[2] * m[6]\n\t\tr[5] = -m[0] * m[5] + m[2] * m[3]\n\n\t\tr[6] = m[3] * m[7] - m[4] * m[6]\n\t\tr[7] = -m[0] * m[7] + m[1] * m[6]\n\t\tr[8] = m[0] * m[4] - m[1] * m[3]\n\n\t\tconst det = m[0] * r[0] + m[1] * r[3] + m[2] * r[6]\n\t\tlet i = 9\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\n\t\treturn result\n\t}\n\n\t// prettier-ignore\n\tinversed4(result: Matrix = Matrix.forWidthHeight(4, 4)): Matrix {\n\t\tassertInst(Matrix, result)\n\t\tassertf(() => 4 == this.width && 4 == this.height)\n\t\tassertf(() => 4 == result.width && 4 == result.height)\n\t\tassert(() => this != result)\n\t\tconst m = this.m,\n\t\t\tr = result.m\n\n\t\t// first compute transposed cofactor matrix:\n\t\t// cofactor of an element is the determinant of the 3x3 matrix gained by removing the column and row belonging\n\t\t// to the element\n\t\tr[0] = m[5] * m[10] * m[15] - m[5] * m[14] * m[11] - m[6] * m[9] * m[15]\n\t\t\t+ m[6] * m[13] * m[11] + m[7] * m[9] * m[14] - m[7] * m[13] * m[10]\n\t\tr[1] = -m[1] * m[10] * m[15] + m[1] * m[14] * m[11] + m[2] * m[9] * m[15]\n\t\t\t- m[2] * m[13] * m[11] - m[3] * m[9] * m[14] + m[3] * m[13] * m[10]\n\t\tr[2] = m[1] * m[6] * m[15] - m[1] * m[14] * m[7] - m[2] * m[5] * m[15]\n\t\t\t+ m[2] * m[13] * m[7] + m[3] * m[5] * m[14] - m[3] * m[13] * m[6]\n\t\tr[3] = -m[1] * m[6] * m[11] + m[1] * m[10] * m[7] + m[2] * m[5] * m[11]\n\t\t\t- m[2] * m[9] * m[7] - m[3] * m[5] * m[10] + m[3] * m[9] * m[6]\n\n\n\t\tr[4] = -m[4] * m[10] * m[15] + m[4] * m[14] * m[11] + m[6] * m[8] * m[15]\n\t\t\t- m[6] * m[12] * m[11] - m[7] * m[8] * m[14] + m[7] * m[12] * m[10]\n\t\tr[5] = m[0] * m[10] * m[15] - m[0] * m[14] * m[11] - m[2] * m[8] * m[15]\n\t\t\t+ m[2] * m[12] * m[11] + m[3] * m[8] * m[14] - m[3] * m[12] * m[10]\n\t\tr[6] = -m[0] * m[6] * m[15] + m[0] * m[14] * m[7] + m[2] * m[4] * m[15]\n\t\t\t- m[2] * m[12] * m[7] - m[3] * m[4] * m[14] + m[3] * m[12] * m[6]\n\t\tr[7] = m[0] * m[6] * m[11] - m[0] * m[10] * m[7] - m[2] * m[4] * m[11]\n\t\t\t+ m[2] * m[8] * m[7] + m[3] * m[4] * m[10] - m[3] * m[8] * m[6]\n\n\n\t\tr[8] = m[4] * m[9] * m[15] - m[4] * m[13] * m[11] - m[5] * m[8] * m[15]\n\t\t\t+ m[5] * m[12] * m[11] + m[7] * m[8] * m[13] - m[7] * m[12] * m[9]\n\t\tr[9] = -m[0] * m[9] * m[15] + m[0] * m[13] * m[11] + m[1] * m[8] * m[15]\n\t\t\t- m[1] * m[12] * m[11] - m[3] * m[8] * m[13] + m[3] * m[12] * m[9]\n\t\tr[10] = m[0] * m[5] * m[15] - m[0] * m[13] * m[7] - m[1] * m[4] * m[15]\n\t\t\t+ m[1] * m[12] * m[7] + m[3] * m[4] * m[13] - m[3] * m[12] * m[5]\n\t\tr[11] = -m[0] * m[5] * m[11] + m[0] * m[9] * m[7] + m[1] * m[4] * m[11]\n\t\t\t- m[1] * m[8] * m[7] - m[3] * m[4] * m[9] + m[3] * m[8] * m[5]\n\n\n\t\tr[12] = -m[4] * m[9] * m[14] + m[4] * m[13] * m[10] + m[5] * m[8] * m[14]\n\t\t\t- m[5] * m[12] * m[10] - m[6] * m[8] * m[13] + m[6] * m[12] * m[9]\n\t\tr[13] = m[0] * m[9] * m[14] - m[0] * m[13] * m[10] - m[1] * m[8] * m[14]\n\t\t\t+ m[1] * m[12] * m[10] + m[2] * m[8] * m[13] - m[2] * m[12] * m[9]\n\t\tr[14] = -m[0] * m[5] * m[14] + m[0] * m[13] * m[6] + m[1] * m[4] * m[14]\n\t\t\t- m[1] * m[12] * m[6] - m[2] * m[4] * m[13] + m[2] * m[12] * m[5]\n\t\tr[15] = m[0] * m[5] * m[10] - m[0] * m[9] * m[6] - m[1] * m[4] * m[10]\n\t\t\t+ m[1] * m[8] * m[6] + m[2] * m[4] * m[9] - m[2] * m[8] * m[5]\n\n\t\t// calculate determinant using laplace expansion (cf https://en.wikipedia.org/wiki/Laplace_expansion),\n\t\t// as we already have the cofactors. We multiply a column by a row as the cofactor matrix is transposed.\n\t\tconst det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12]\n\t\t// assert(!isZero(det), 'det may not be zero, i.e. the matrix is not invertible')\n\t\tlet i = 16\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\t\treturn result\n\t}\n\n\tcanMultiply(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.height\n\t}\n\n\ttimes(matrix: Matrix): Matrix {\n\t\tassertInst(Matrix, matrix)\n\t\tassert(this.canMultiply(matrix), `Cannot multiply this {this.dimString()} by matrix {matrix.dimString()}`)\n\t\tconst nWidth = matrix.width,\n\t\t\tnHeight = this.height,\n\t\t\tn = this.width\n\t\tconst nM = new Float64Array(nWidth * nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet nColIndex = nWidth\n\t\t\twhile (nColIndex--) {\n\t\t\t\tlet result = 0\n\t\t\t\tlet i = n\n\t\t\t\twhile (i--) {\n\t\t\t\t\tresult += this.m[nRowIndex * n + i] * matrix.m[i * nWidth + nColIndex]\n\t\t\t\t}\n\t\t\t\tnM[nRowIndex * nWidth + nColIndex] = result\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(nWidth, nHeight, nM)\n\t}\n\n\ttimesVector(v: Vector): Vector {\n\t\tassertVectors(v)\n\t\tassert(this.width == v.dim())\n\t\tconst nHeight = this.height,\n\t\t\tn = this.width\n\t\tconst nM = new Float64Array(nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet result = 0\n\t\t\tlet i = n\n\t\t\twhile (i--) {\n\t\t\t\tresult += this.m[nRowIndex * n + i] * v.v[i]\n\t\t\t}\n\t\t\tnM[nRowIndex] = result\n\t\t}\n\t\treturn new Vector(nM)\n\t}\n\n\ttransposed(): Matrix {\n\t\tconst tWidth = this.height,\n\t\t\ttHeight = this.width\n\t\tconst tM = new Float64Array(tWidth * tHeight)\n\t\tlet tRowIndex = tHeight\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = tWidth\n\t\t\twhile (tColIndex--) {\n\t\t\t\ttM[tRowIndex * tWidth + tColIndex] = this.m[tColIndex * tHeight + tRowIndex]\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(tWidth, tHeight, tM)\n\t}\n\n\t/**\n\t * In-place transpose.\n\t */\n\ttranspose(): void {\n\t\tconst h = this.height,\n\t\t\tw = this.width,\n\t\t\ttM = this.m\n\t\tlet tRowIndex = h\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = Math.min(tRowIndex, w)\n\t\t\twhile (tColIndex--) {\n\t\t\t\tconst temp = tM[tRowIndex * w + tColIndex]\n\t\t\t\ttM[tRowIndex * w + tColIndex] = tM[tColIndex * h + tRowIndex]\n\t\t\t\ttM[tColIndex * h + tRowIndex] = temp\n\t\t\t}\n\t\t}\n\t\tthis.width = h\n\t\tthis.height = w\n\t}\n\n\tisSquare(): boolean {\n\t\treturn this.height == this.width\n\t}\n\n\tdiagonal(): Vector {\n\t\tif (!this.isSquare()) {\n\t\t\tthrow new Error('!!')\n\t\t}\n\t\tconst v = new Float64Array(this.width)\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\tlet vIndex = this.width\n\t\twhile (vIndex--) {\n\t\t\telIndex -= this.width + 1\n\t\t\tv[vIndex] = this.m[elIndex]\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tmaxEl(): number {\n\t\treturn Math.max.apply(undefined, this.m)\n\t}\n\n\tminEl(): number {\n\t\treturn Math.min.apply(undefined, this.m)\n\t}\n\n\tmaxAbsColSum(): number {\n\t\tlet result = 0\n\t\tlet colIndex = this.width\n\t\twhile (colIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet rowIndex = this.height\n\t\t\twhile (rowIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tmaxAbsRowSum(): number {\n\t\tlet result = 0\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet colIndex = this.width\n\t\t\twhile (colIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tgetTriangularDeterminant(): number {\n\t\tassert(this.isUpperTriangular() || this.isLowerTriangular(), 'not a triangular matrix')\n\n\t\tlet product = 1\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= this.width + 1\n\t\t\tproduct *= this.m[elIndex]\n\t\t}\n\t\treturn product\n\t}\n\n\t/**\n\t * Calculates the determinant by first calculating the LU decomposition. If you already have that, use\n\t * U.getTriangularDeterminant()\n\t */\n\tgetDeterminant(): number {\n\t\t// PA = LU\n\t\t// det(A) * det(B) = det(A * B)\n\t\t// det(P) == 1 (permutation matrix)\n\t\t// det(L) == 1 (main diagonal is 1s\n\t\t// =>  det(A) == det(U)\n\t\treturn this.luDecomposition().U.getTriangularDeterminant()\n\t}\n\n\thasFullRank(): boolean {\n\t\treturn Math.min(this.width, this.height) == this.rank()\n\t}\n\n\tpermutationAsIndexMap(): int[] {\n\t\tassertf(() => this.isPermutation())\n\t\tconst result = new Array(this.height)\n\t\tlet i = this.height\n\t\twhile (i--) {\n\t\t\tconst searchIndexStart = i * this.width\n\t\t\tlet searchIndex = searchIndexStart\n\t\t\twhile (this.m[searchIndex] < 0.5) searchIndex++\n\t\t\tresult[i] = searchIndex - searchIndexStart\n\t\t}\n\t\treturn result\n\t}\n\n\tgetDependentRowIndexes(gauss: { L: Matrix; U: Matrix; P: Matrix } = this.gauss()): int[] {\n\t\tconst { L, U, P } = gauss\n\t\t// rows which end up as zero vectors in U are not linearly independent\n\t\tconst dependents = new Array(this.height)\n\t\tlet uRowIndex = this.height\n\t\twhile (uRowIndex--) {\n\t\t\tconst uRow = U.row(uRowIndex)\n\t\t\tif (uRow.length() < NLA_PRECISION) {\n\t\t\t\tdependents[uRowIndex] = true\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// figure out from which other rows the rows which end up as zero vectors are created by\n\t\tlet lRowIndex = this.height\n\t\twhile (lRowIndex--) {\n\t\t\tif (dependents[lRowIndex]) {\n\t\t\t\tlet lColIndex = Math.min(lRowIndex, this.width)\n\t\t\t\twhile (lColIndex--) {\n\t\t\t\t\tif (0 !== L.e(lRowIndex, lColIndex)) {\n\t\t\t\t\t\tdependents[lColIndex] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconsole.log('m\\n', this.toString(x => '' + x))\n\t\tconsole.log('L\\n', L.toString(x => '' + x))\n\t\tconsole.log('U\\n', U.toString(x => '' + x))\n\t\tconsole.log('P\\n', P.toString(x => '' + x))\n\t\t// gauss algorithm permutes the order of the rows, so map our results back to the original indices\n\t\tconst indexMap = P.permutationAsIndexMap()\n\t\tconst dependentRowIndexes = dependents.map((b, index) => b && indexMap[index]).filter(x => x != undefined)\n\t\treturn dependentRowIndexes\n\t}\n\n\tlerp(b: Matrix, t: number, result = this.new()): this {\n\t\tassertInst(Matrix, b, result)\n\t\tassertNumbers(t)\n\t\tassert(this.width == b.width && this.height == b.height)\n\t\tconst s = 1 - t\n\t\tlet i = this.m.length\n\t\twhile (i--) {\n\t\t\tresult.m[i] = s * this.m[i] + t * b.m[i]\n\t\t}\n\t\treturn result\n\t}\n}\n","import 'tosource'\n\nimport { Matrix } from './Matrix'\nimport { V, V3 } from './V3'\nimport { Vector } from './Vector'\n\nconst { abs, sign } = Math\nexport const PI = Math.PI\nexport const TAU = 2 * PI\nexport type int = number\nexport type colorstr = string // e.g. '#abcdef\nexport type raddd = number\nexport type FloatArray = Float32Array | Float64Array | number[]\n\n/** @define {boolean} */\nexport const NLA_DEBUG = process.env.NODE_ENV != 'production'\nexport const NLA_PRECISION = 1 / (1 << 26)\nconsole.log('NLA_PRECISION', NLA_PRECISION)\nconsole.log('NLA_DEBUG', NLA_DEBUG)\n\nlet oldConsole: any = undefined\nexport function disableConsole() {\n\toldConsole = console.log\n\tconsole.log = function() {}\n}\nexport function enableConsole() {\n\tif (oldConsole) {\n\t\tconsole.log = oldConsole\n\t}\n}\nexport function hasConstructor<T>(instance: any, cons: { new (...args: any[]): T }): instance is T {\n\treturn instance.constructor == cons\n}\n\nexport function getIntervals(ts: number[], min: number, max: number): [number, number][] {\n\tts.sort((a, b) => a - b)\n\tif (!eq(ts[0], min)) {\n\t\tts.splice(0, 0, min)\n\t}\n\tif (!eq(ts.last, max)) {\n\t\tts.push(max)\n\t}\n\treturn arrayFromFunction(ts.length - 1, i => [ts[i], ts[i + 1]] as [number, number])\n}\n\nexport function assertVectors(...vectors: (Vector | V3)[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\tif (!(arguments[i] instanceof V3 || arguments[i] instanceof Vector)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'assertVectors arguments[' +\n\t\t\t\t\t\ti +\n\t\t\t\t\t\t'] is not a vector. ' +\n\t\t\t\t\t\ttypeof arguments[i] +\n\t\t\t\t\t\t' == typeof ' +\n\t\t\t\t\t\targuments[i],\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertInst<T>(what: Function & { prototype: T }, ...objs: T[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < objs.length; i++) {\n\t\t\tif (!(objs[i] instanceof what)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'assertInst objs[' +\n\t\t\t\t\t\ti +\n\t\t\t\t\t\t'] is not a ' +\n\t\t\t\t\t\twhat.prototype.name +\n\t\t\t\t\t\t'. ' +\n\t\t\t\t\t\tobjs[i].constructor.name +\n\t\t\t\t\t\tobjs[i],\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertNumbers(...numbers: number[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < numbers.length; i++) {\n\t\t\tif ('number' !== typeof numbers[i]) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertInts(...numbers: number[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < numbers.length; i++) {\n\t\t\tif ('number' !== typeof numbers[i] || numbers[i] % 1 !== 0) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`assertNumbers arguments[${i}] is not an int. ${typeof numbers[i]} == typeof ${numbers[i]}`,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assert(value: any, ...messages: (any | (() => string))[]): value is true {\n\tif (NLA_DEBUG && !value) {\n\t\tthrow new Error(\n\t\t\t'assert failed: ' +\n\t\t\t\tmessages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'),\n\t\t)\n\t}\n\treturn true\n}\nexport function assertNever(value?: never): never {\n\tthrow new Error()\n}\nexport function assertf(f: () => any, ...messages: (any | (() => any))[]) {\n\tif (NLA_DEBUG && !f()) {\n\t\tthrow new Error(\n\t\t\t'assertf failed: ' +\n\t\t\t\tf.toString() +\n\t\t\t\tmessages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'),\n\t\t)\n\t}\n}\n\nexport function lerp(a: number, b: number, t: number) {\n\treturn a * (1 - t) + b * t\n}\nexport function lerpInv(a: number, b: number, t: number) {\n\treturn (t - a) / (b - a)\n}\nconst originalNumberToString = Number.prototype.toString\nNumber.prototype.toString = function(radix) {\n\tif (PI == this) {\n\t\treturn 'PI'\n\t}\n\treturn originalNumberToString.call(this, radix)\n}\n\nexport const eq0 = (x: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x) <= EPS\nexport const eq = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x - y) <= EPS\nexport const lt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y < -EPS\nexport const gt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x < -EPS\nexport const le = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y <= EPS\nexport const ge = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x <= EPS\n\nexport const eqAngle = (x: number, y: number): boolean => zeroAngle(x - y)\nexport const zeroAngle = (x: number): boolean =>\n\t((x % (2 * Math.PI)) + 2 * Math.PI + NLA_PRECISION) % (2 * Math.PI) < 2 * NLA_PRECISION\nexport const snap = (x: number, to: number): number => (Math.abs(x - to) <= NLA_PRECISION ? to : x)\nexport const snap2 = (x: number, ...to: number[]): number =>\n\tto.reduce((x, to) => (Math.abs(x - to) <= NLA_PRECISION ? to : x), x)\nexport const snapEPS = (x: number, EPS: number, ...to: number[]): number =>\n\tto.reduce((x, to) => (Math.abs(x - to) <= EPS ? to : x), x)\nexport const snap0 = (x: number, EPS = NLA_PRECISION): number => (Math.abs(x) <= EPS ? 0 : x)\nexport const canonAngle = (x: number): number => ((x % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI)\n\n/** @deprecated */ export const eq02 = eq0\n/** @deprecated */ export const eq2 = eq\n\n/**\n * Decimal adjustment of a number.\n *\n * @param f  The type of adjustment.\n * @param value The number.\n * @param exp The exponent (the 10 logarithm of the adjustment base).\n * @returns The adjusted value.\n */\nfunction decimalAdjust(f: (x: number) => number, value: number, exp: number): number {\n\t// If the exp is undefined or zero...\n\tif (typeof exp === 'undefined' || +exp === 0) {\n\t\treturn f(value)\n\t}\n\tvalue = +value\n\texp = +exp\n\t// If the value is not a number or the exp is not an integer...\n\tif (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n\t\treturn NaN\n\t}\n\t// Shift\n\tlet vs = value.toString().split('e')\n\tvalue = f(+(vs[0] + 'e' + (vs[1] ? +vs[1] - exp : -exp)))\n\t// Shift back\n\tvs = value.toString().split('e')\n\treturn +(vs[0] + 'e' + (vs[1] ? +vs[1] + exp : exp))\n}\n\nexport const round10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.round)\nexport const floor10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.floor)\nexport const ceil10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.ceil)\n\nexport const GOLDEN_RATIO = (1 + Math.sqrt(5)) / 2\n\nexport function mod(a: number, b: number) {\n\treturn ((a % b) + b) % b\n}\nexport function arraySwap(arr: any[], i: int, j: int) {\n\tconst temp = arr[i]\n\tarr[i] = arr[j]\n\tarr[j] = temp\n}\nexport type ArrayLikeWriteAble<T> = {\n\treadonly length: int\n\t[index: number]: T\n}\nexport function arrayCopy<T, A extends ArrayLikeWriteAble<T>>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tdst: A,\n\tdstart: int,\n\tlength: int,\n): A {\n\tassertInts(sstart, dstart, length)\n\tdstart += length\n\tlength += sstart\n\twhile (length-- > sstart) {\n\t\tdst[--dstart] = src[length]\n\t}\n\treturn dst\n}\nexport function clamp(val: number, min: number, max: number) {\n\tassertNumbers(val, min, max)\n\treturn Math.max(min, Math.min(max, val))\n}\n\nexport function between(val: number, min: number, max: number) {\n\tassertNumbers(val, min, max)\n\treturn min <= val && val <= max\n}\nexport function fuzzyBetween(val: number, min: number, max: number) {\n\treturn le(min, val) && le(val, max)\n}\n\nexport function mapPush<T, U>(map: Map<T, U[]>, key: T, val: U) {\n\tconst array = map.get(key)\n\tif (array) {\n\t\tarray.push(val)\n\t} else {\n\t\tmap.set(key, [val])\n\t}\n}\n\n/**\n * Copies a number of items from one array to another, with a definable step size between items in the source and\n * destination array.\n *\n * @param src The source array.\n * @param sstart The location of the first item in the source array.\n * @param sstep The offset between items in the source array.\n * @param dst The destination array.\n * @param dstart The location of the first item in the destination array.\n * @param dstep The offset between items in the destination array.\n * @param count The number of items to copy.\n */\nexport function arrayCopyStep<T>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tsstep: int,\n\tdst: ArrayLikeWriteAble<T>,\n\tdstart: int,\n\tdstep: int,\n\tcount: int,\n): void {\n\tlet srcIndex = sstart + count * sstep\n\tlet dIndex = dstart + count * dstep\n\twhile (srcIndex > sstart) {\n\t\tdst[(dIndex -= dstep)] = src[(srcIndex -= sstep)]\n\t}\n}\n\n/**\n * Copies a number of contiguous, evenly-spaced blocks from one array to another.\n *\n * @param src The source array.\n * @param sstart The start of the first block in the source array.\n * @param sstep The offset from the start of one block to the start of the next block in the source array.\n * @param dst The destination array.\n * @param dstart The start of the first block in the destination array.\n * @param dstep The offset from the start of one block to the start of the next block in the destination array.\n * @param blockSize The length of one block.\n * @param blockCount The number of blocks to copy.\n */\nexport function arrayCopyBlocks<T>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tsstep: int,\n\tdst: ArrayLikeWriteAble<T>,\n\tdstart: int,\n\tdstep: int,\n\tblockSize: int,\n\tblockCount: int,\n): void {\n\tfor (let i = 0; i < blockCount; i++) {\n\t\tarrayCopy(src, sstart + sstep * i, dst, dstart + dstep * i, blockSize)\n\t}\n}\nexport function arrayRange(startInclusive: int, endExclusive: int, step: int = 1) {\n\tassertNumbers(startInclusive, step)\n\t//console.log(Math.ceil((endExclusive - startInclusive) / step))\n\tconst arrLength = Math.ceil((endExclusive - startInclusive) / step)\n\tconst result = new Array(arrLength) // '- startInclusive' so that chunk in the last row will also be selected, even\n\t// if the row is not complete\n\tfor (let i = startInclusive, index = 0; index < arrLength; i += step, index++) {\n\t\tresult[index] = i\n\t}\n\treturn result\n}\n\n/**\n * Returns a number of evenly-spaced values between t0 and t1 (inclusive).\n * @param t0 First value.\n * @param t1 Last value.\n * @param count Total number of values.\n */\nexport function arraySamples(t0: number, t1: number, count: int = 64) {\n\treturn arrayFromFunction(count, i => lerp(t0, t1, i / (count - 1)))\n}\n\nexport function arrayFromFunction<T>(length: 1, f: (i: int, total: int) => T): [T]\nexport function arrayFromFunction<T>(length: 2, f: (i: int, total: int) => T): [T, T]\nexport function arrayFromFunction<T>(length: 3, f: (i: int, total: int) => T): [T, T, T]\nexport function arrayFromFunction<T>(length: 4, f: (i: int, total: int) => T): [T, T, T, T]\nexport function arrayFromFunction<T>(length: 5, f: (i: int, total: int) => T): [T, T, T, T, T]\nexport function arrayFromFunction<T>(length: int, f: (i: int, total: int) => T): T[]\nexport function arrayFromFunction<T>(length: int, f: (i: int, total: int) => T): T[] {\n\tassertNumbers(length)\n\tassert('function' == typeof f)\n\tconst a = new Array(length)\n\tlet elIndex = length\n\twhile (elIndex--) {\n\t\ta[elIndex] = f(elIndex, length)\n\t}\n\treturn a\n}\n\nexport function fuzzyUniques(vals: number[]): number[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i],\n\t\t\troundVal = round(val)\n\t\tlet key\n\t\tif (\n\t\t\t!map.has(roundVal) &&\n\t\t\t!((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, val)) &&\n\t\t\t!((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, val))\n\t\t) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\nexport function fuzzyUniquesF<T>(vals: T[], f: (o: T) => number): T[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i],\n\t\t\troundVal = round(f(val))\n\t\tlet key\n\t\tif (\n\t\t\t!map.has(roundVal) &&\n\t\t\t!((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, f(val))) &&\n\t\t\t!((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, f(val)))\n\t\t) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\nexport function addOwnProperties(target: any, props: any, ...exclude: string[]) {\n\tObject.getOwnPropertyNames(props).forEach(key => {\n\t\t//console.log(props, key)\n\t\tif (!exclude.includes(key)) {\n\t\t\tif (target.hasOwnProperty(key)) {\n\t\t\t\tconsole.warn('target ', target, ' already has property ', key, target[key])\n\t\t\t}\n\t\t\tObject.defineProperty(target, key, Object.getOwnPropertyDescriptor(props, key)!)\n\t\t}\n\t})\n}\n\nexport let defaultRoundFunction = (x: number) => x // Math.round10(x, -4)\n\nexport function forceFinite(val: string): number {\n\tconst valNum = parseFloat(val.replace(',', '.').replace(/^[^0-9,\\.\\-]/, ''))\n\treturn Number.isFinite(valNum) ? valNum : 0\n}\n\nexport const MINUS = (a: number, b: number) => a - b\n\nexport function floatHashCode(f: number) {\n\treturn ~~(f * (1 << 28))\n}\n\n/**\n * combinations(2) will generate\n * [0,0] [0,1] [1,1] [0,2] [1,2] [2,2]\n */\nexport function* combinations(n: int): IterableIterator<{ i: number; j: number }> {\n\tfor (let i = 0; i < n; i++) {\n\t\tfor (let j = i; j < n; j++) {\n\t\t\tyield { i: i, j: j }\n\t\t}\n\t}\n}\n\n/* The arithmetic-geometric mean of two non-negative numbers */\nexport function arithmeticGeometricMean(x: number, y: number): number {\n\tassertf(() => lt(0, x))\n\tassertf(() => lt(0, y))\n\tlet a = x,\n\t\tg = y\n\tlet i = 30\n\twhile (i-- && a != g) {\n\t\t;[a, g] = [(a + g) / 2, Math.sqrt(a * g)]\n\t}\n\tassert(i != -1)\n\n\treturn a\n}\n\n/**\n * incomplete elliptic integral of the first kind\n * EllipticF(phi, k2) = INT[0; phi] 1 / sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticF(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, -0.5), 0, phi)\n}\n\n/**\n * incomplete elliptic integral of the second kind\n * EllipticE(phi, k2) = INT[0; phi] sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticE(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, 0.5), 0, phi)\n}\n\n/**\n * One degree in radians. Use like Math.sin(30 * DEG).\n */\nexport const DEG = 0.017453292519943295\nexport function rad2deg(rad: number): number {\n\t//  discuss at: http://phpjs.org/functions/deg2rad/\n\t// original by: Enrique Gonzalez\n\t// improved by: Thomas Grainger (http://graingert.co.uk)\n\t//   example 1: deg2rad(45)\n\t//   returns 1: 0.7853981633974483\n\n\treturn rad / DEG\n}\n\n/**\n * numberToStr(2/3) == '0.6p'\n * numberToStr(7/12) == '0.583p'\n * numberToStr(2/7) == '0.285714pppppp'\n * numberToStr(NLA_PRECISION) == '0+'\n * numberToStr(-NLA_PRECISION) == '0-'\n * numberToStr(2-NLA_PRECISION) == '2-'\n * numberToStr(0) == '0='\n *\n */\nexport function numberToStr(value: number, length: int) {\n\tlet minAbsDiff = Infinity,\n\t\tclosestValue: number | undefined = undefined,\n\t\tclosestValueStr: string | undefined = undefined\n\tfunction test(testValue: number, testValueStr: string) {\n\t\tconst absDiff = Math.abs(testValue - value)\n\t\tconsole.log(testValue, testValueStr, absDiff)\n\t\tif (absDiff < minAbsDiff) {\n\t\t\tminAbsDiff = absDiff\n\t\t\tclosestValue = testValue\n\t\t\tclosestValueStr = testValueStr\n\t\t}\n\t\treturn 0 == absDiff\n\t}\n\n\tfunction overline(str: string) {\n\t\treturn str\n\t\t\t.split('')\n\t\t\t.map(c => c + '\\u0304')\n\t\t\t.join('')\n\t}\n\n\tif (test(parseFloat(value.toFixed(length)), value.toFixed(length))) return closestValueStr + '='\n\n\tconst valueStr = '' + value\n\tconst toDecimal = valueStr.substr(0, valueStr.indexOf('.') + 1)\n\tconst decimals = valueStr.substr(valueStr.indexOf('.') + 1)\n\n\tfor (let startPos = 0; startPos < length; startPos++) {\n\t\tfor (let endPos = startPos + 1; endPos <= length; endPos++) {\n\t\t\tconst prefixDecimals = decimals.substr(0, startPos)\n\t\t\tconst period = decimals.substr(startPos, endPos)\n\t\t\tconst testValue = parseFloat(\n\t\t\t\ttoDecimal + prefixDecimals + period.repeat(Math.ceil((17 - startPos) / period.length)),\n\t\t\t)\n\t\t\tif (test(testValue, toDecimal + prefixDecimals + overline(period))) return closestValueStr + '='\n\t\t}\n\t}\n\n\treturn closestValueStr + (closestValue! < value ? '-' : '+')\n}\n\nexport function time(f: () => void) {\n\tconst start = performance.now()\n\tf()\n\treturn performance.now() - start\n}\n\nexport type Tuple2<T> = [T, T]\nexport type Tuple3<T> = [T, T, T]\nexport type Tuple4<T> = [T, T, T, T]\nexport type Tuple5<T> = [T, T, T, T, T]\nexport type Tuple6<T> = [T, T, T, T, T, T]\nexport type Tuple7<T> = [T, T, T, T, T, T, T]\nexport type Tuple8<T> = [T, T, T, T, T, T, T, T]\n//console.log(numberToStr(29 / 99, 4))\n//console.log(numberToStr(77 / 99, 4))\n\n// interface Object {\n//    cw(f: (x: any) => any): any\n// }\n//Object.prototype.cw = function (f) {\n//    return f(this)\n//}\n//Object.construct = function <T>(cons: {new(...args: any[]): T}, args: any[]) {\n//    return f(this)\n//}\ndeclare global {\n\tinterface Object {\n\t\tsce: string\n\t\tstr: string\n\t\ttoSource(): string\n\t}\n\tinterface ObjectConstructor {\n\t\tconstruct<T>(cons: { new (...args: any[]): T }, args: any[]): T\n\t\tmap<T, S, K extends string>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: undefined, v: T, key: string, o: { [k in K]: T }) => S,\n\t\t): { [k in K]: S }\n\t\tmap<T, S, K extends string, C>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: C, v: T, key: string, o: { [k in K]: T }) => S,\n\t\t\tcontext: C,\n\t\t): { [k in K]: S }\n\t}\n\t// tslint:disable-next-line:class-name\n\tinterface __NLAReadonlyArray<T> {\n\t\t/**\n\t\t * this[this.length - 1]\n\t\t */\n\t\treadonly last: T\n\n\t\tbinaryIndexOf<S>(searchElement: S, cmp?: (a: T, b: S) => number): int\n\n\t\tconcatenated(): T\n\n\t\tflatMap<U>(f: (el: T, elIndex: int, arr: this) => U | ReadonlyArray<U>): U[]\n\n\t\t/**\n\t\t * this.length == 0\n\t\t */\n\t\tisEmpty(): boolean\n\n\t\t/**\n\t\t * this[index % this.length]\n\t\t */\n\t\temod(index: int): T\n\n\t\t/**\n\t\t * this.map(f).filter(v => v)\n\t\t */\n\t\tmapFilter<U>(f: (el: T, elIndex: int, arr: this) => U | undefined | false | null): U[]\n\n\t\t/**\n\t\t * Math.max.apply(undefined, this)\n\t\t */\n\t\tmax(this: number[]): number\n\n\t\t/**\n\t\t * Math.min.apply(undefined, this)\n\t\t */\n\t\tmin(this: number[]): number\n\n\t\t/**\n\t\t * There is no indexWithMin, use indexWithMax(-f) instead\n\t\t * @param f\n\t\t */\n\t\tindexWithMax(f: (el: T, elIndex: int, arr: this) => number): int\n\n\t\tsum(this: number[]): number\n\n\t\tabsSum(): number\n\n\t\tsliceStep(start: int, end: int, step: int, chunkSize?: int): T[]\n\n\t\tunique(): T[]\n\n\t\t/**\n\t\t * Return the element in the array for which f(el) is highest. There is no `withMin`, call withMax(x => -f(x))\n\t\t * instead.\n\t\t * @param f\n\t\t */\n\t\twithMax(f: (el: T, elIndex: int, arr: this) => number): T\n\n\t\tequals(this: { equals(obj: any): boolean }[], obj: any): boolean\n\n\t\thashCode(this: { hashCode(): int }[]): int\n\n\t\t/**\n\t\t * Like .splice(), but returns a new array.\n\t\t * @param start\n\t\t * @param end\n\t\t * @param items\n\t\t */\n\t\tsplicePure(start: int, end: int, ...items: T[]): T[]\n\n\t\t/**\n\t\t * If this array is not sorted according to comparator, returns the first unsorted index, i.e. the index of the\n\t\t * first element which is \"smaller\" than the previous one. Otherwise, returns -1\n\t\t * @example [1, 2, 3].firstUnsorted() // -1\n\t\t * @example [1, 3, 2].firstUnsorted() // 2, as [2] < [3]\n\t\t * @param comparator\n\t\t */\n\t\tfirstUnsorted(comparator: (a: T, b: T) => number): int\n\t}\n\tinterface Array<T> extends __NLAReadonlyArray<T> {\n\t\t/**\n\t\t * this[this.length - 1]\n\t\t */\n\t\tlast: T\n\t\tbinaryInsert(this: number[], newEl: number, cmp?: (a: number, b: number) => number): void\n\n\t\tbinaryInsert(newEl: T, cmp: (a: T, b: T) => number): void\n\n\t\t/**\n\t\t * this.length == 0\n\t\t */\n\t\tisEmpty(): boolean\n\n\t\tremove(el: T): boolean\n\n\t\tbagRemove(el: T): boolean\n\t\tbagRemoveIndex(el: T): boolean\n\t\tbagToggle(el: T): boolean\n\n\t\tremoveIndex(index: int): T\n\n\t\tremoveMatch(matcher: (el: T) => boolean): T | undefined\n\n\t\tremoveAll(els: T[]): void\n\n\t\tsumInPlaceTree(): number\n\n\t\ttoggle(el: T): void\n\n\t\tclear(...newItems: T[]): void\n\n\t\t//filter<U extends T>(pred: (a: T) => a is U): U[]\n\n\t\tmap<U>(this: [T], callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): [U]\n\t\tmap<U>(this: Tuple2<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple2<U>\n\t\tmap<U>(this: Tuple3<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple3<U>\n\t\tmap<U>(this: Tuple4<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple4<U>\n\t\tmap<U>(this: Tuple5<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple5<U>\n\t\tmap<U>(this: Tuple6<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple6<U>\n\t\tmap<U>(this: Tuple7<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple7<U>\n\t\tmap<U>(this: Tuple8<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple8<U>\n\t}\n\tinterface ReadonlyArray<T> extends __NLAReadonlyArray<T> {}\n\n\tinterface String {\n\t\tcapitalizeFirstLetter(): string\n\t\tequals(x: any): boolean\n\t}\n}\nObject.map = function<T, S, K extends string>(\n\to: { [k in K]: T },\n\tf: (v: T, key: string, o: { [k in K]: T }) => S,\n\tcontext: any = undefined,\n): { [k in K]: S } {\n\tconst result = {} as { [k in K]: S }\n\tfor (const key in o) {\n\t\tresult[key] = f.call(context, o[key], key, o)\n\t}\n\treturn result\n}\nArray.prototype.emod = function(i) {\n\treturn this[i % this.length]\n}\nArray.prototype.sliceStep = function(start, end, step, chunkSize = 1) {\n\tassertNumbers(start, step)\n\tstart < 0 && (start = this.length + start)\n\tend <= 0 && (end = this.length + end)\n\tconst resultLength = Math.ceil((end - start) / step)\n\tconst result = new Array(resultLength) // '- start' so that chunk in the last row\n\t// will also be selected, even if the row is\n\t// not complete\n\tlet index = 0\n\tfor (let i = start; i < end; i += step) {\n\t\tfor (let j = i; j < Math.min(i + chunkSize, end); j++) {\n\t\t\tresult[index++] = this[j]\n\t\t}\n\t}\n\tassert(resultLength == index)\n\treturn result\n}\nArray.prototype.splicePure = function(start = 0, deleteCount = 0, ...items) {\n\tconst arrayLength = this.length\n\tconst _deleteCount = deleteCount < 0 ? 0 : deleteCount\n\tlet _start\n\tif (start < 0) {\n\t\tif (Math.abs(start) > arrayLength) {\n\t\t\t_start = 0\n\t\t} else {\n\t\t\t_start = arrayLength + start\n\t\t}\n\t} else if (start > arrayLength) {\n\t\t_start = arrayLength\n\t} else {\n\t\t_start = start\n\t}\n\tconst newLength = this.length - _deleteCount + items.length\n\tconst result = new Array(newLength)\n\tlet dst = newLength\n\tlet src = this.length\n\twhile (src-- > _start + _deleteCount) {\n\t\tresult[--dst] = this[src]\n\t}\n\tsrc = items.length\n\twhile (src--) {\n\t\tresult[--dst] = items[src]\n\t}\n\tsrc = _start\n\twhile (src--) {\n\t\tresult[--dst] = items[src]\n\t}\n\treturn result\n}\nArray.prototype.equals = function(obj: any): boolean {\n\tif (this === obj) return true\n\tif (Object.getPrototypeOf(obj) !== Array.prototype) return false\n\tif (this.length !== obj.length) return false\n\tfor (let i = 0; i < this.length; i++) {\n\t\tif (!equals(this[i], obj[i])) return false\n\t}\n\treturn true\n}\nexport function equals(a: any, b: any) {\n\treturn 'object' === typeof a ? a.equals(b) : a === b\n}\nArray.prototype.hashCode = function(): int {\n\tlet result = 0\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult = (result * 31 + hashCode(this[i])) | 0\n\t}\n\treturn result | 0\n}\nexport function hashCode(o: any) {\n\tif ('number' === typeof o || undefined === o) {\n\t\treturn o | 0\n\t} else {\n\t\treturn null === o ? 0 : o.hashCode()\n\t}\n}\nArray.prototype.mapFilter = function(f) {\n\tconst length = this.length,\n\t\tresult = []\n\tfor (let i = 0; i < length; i++) {\n\t\tif (i in this) {\n\t\t\tconst val = f(this[i], i, this)\n\t\t\tif (val) {\n\t\t\t\tresult.push(val)\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.flatMap = function(f) {\n\treturn Array.prototype.concat.apply([], this.map(f))\n}\nArray.prototype.clear = function(...newItems) {\n\treturn this.splice(0, this.length, ...newItems)\n}\n/**\n *\n * @returns Array.prototype.concat.apply([], this)\n */\nArray.prototype.concatenated = function() {\n\treturn Array.prototype.concat.apply([], this)\n}\nArray.prototype.min = function() {\n\tlet i = this.length,\n\t\tmax = Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max > val) max = val\n\t}\n\treturn max\n}\nArray.prototype.max = function() {\n\t// faster and no limit on array size, see https://jsperf.com/math-max-apply-vs-loop/2\n\tlet i = this.length,\n\t\tmax = -Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max < val) max = val\n\t}\n\treturn max\n}\nArray.prototype.indexWithMax = function(f) {\n\tif (this.length == 0) {\n\t\treturn -1\n\t}\n\tlet i = this.length,\n\t\tresult = -1,\n\t\tmaxVal = -Infinity\n\twhile (i--) {\n\t\tconst val = f(this[i], i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = i\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.withMax = function(f) {\n\tlet i = this.length,\n\t\tresult = undefined,\n\t\tmaxVal = -Infinity\n\twhile (i--) {\n\t\tconst el = this[i],\n\t\t\tval = f(el, i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = el\n\t\t}\n\t}\n\treturn result\n}\n\n/**\n * Returns the sum of the absolute values of the components of this vector.\n * E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\n */\nArray.prototype.absSum = function() {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += Math.abs(this[i])\n\t}\n\treturn result\n}\n\nArray.prototype.sum = function() {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += this[i]\n\t}\n\treturn result\n}\n\nArray.prototype.sumInPlaceTree = function() {\n\tif (0 == this.length) return 0\n\tlet l = this.length\n\twhile (l != 1) {\n\t\tconst lHalfFloor = Math.floor(l / 2)\n\t\tconst lHalfCeil = Math.ceil(l / 2)\n\t\tfor (let i = 0; i < lHalfFloor; i++) {\n\t\t\tthis[i] += this[i + lHalfCeil]\n\t\t}\n\t\tl = lHalfCeil\n\t}\n\treturn this[0]\n}\n\nArray.prototype.isEmpty = function() {\n\treturn 0 == this.length\n}\n\nArray.prototype.unique = function() {\n\tconst uniqueSet = new Set(this)\n\treturn Array.from(uniqueSet)\n}\n\nArray.prototype.remove = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn true\n\t}\n\treturn false\n}\n\nArray.prototype.removeIndex = function(i) {\n\tconst result = this[i]\n\tthis.splice(i, 1)\n\treturn result\n}\nArray.prototype.bagRemoveIndex = function(i) {\n\tconst result = this[i]\n\tif (i == this.length - 1) {\n\t\tthis.pop()\n\t} else {\n\t\tthis[i] = this.pop()\n\t}\n\treturn result\n}\n\nArray.prototype.removeMatch = function<T>(matcher: (el: T) => boolean) {\n\tconst index = this.findIndex(matcher)\n\tif (-1 != index) {\n\t\treturn this.removeIndex(index)\n\t}\n}\n\nArray.prototype.removeAll = function(o) {\n\tlet i = o.length\n\twhile (i--) {\n\t\tthis.remove(o[i])\n\t}\n}\n\nArray.prototype.toggle = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\nArray.prototype.bagToggle = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.bagRemoveIndex(index)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\n\nArray.prototype.binaryIndexOf = function(searchElement, cmp = (a: any, b: any) => a - b) {\n\tlet minIndex = 0\n\tlet maxIndex = this.length - 1\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex <= maxIndex) {\n\t\tcurrentIndex = ((minIndex + maxIndex) / 2) | 0\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, searchElement) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t} else if (cmp(currentElement, searchElement) > 0) {\n\t\t\tmaxIndex = currentIndex - 1\n\t\t} else {\n\t\t\treturn currentIndex\n\t\t}\n\t}\n\n\treturn -minIndex - 1\n}\n\nArray.prototype.binaryInsert = function(el: any, cmp = MINUS) {\n\tlet minIndex = 0\n\tlet maxIndex = this.length\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex < maxIndex) {\n\t\tcurrentIndex = ~~((minIndex + maxIndex) / 2)\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, el) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t} else {\n\t\t\tmaxIndex = currentIndex\n\t\t}\n\t}\n\n\tthis.splice(minIndex, 0, el)\n}\n\nArray.prototype.firstUnsorted = function(c) {\n\tfor (let i = 1; i < this.length; i++) {\n\t\tif (c(this[i - 1], this[i]) > 0) return i\n\t}\n\treturn -1\n}\nObject.defineProperty(Array.prototype, 'last', {\n\tget() {\n\t\treturn this[this.length - 1]\n\t},\n\tset(val) {\n\t\tthis[this.length - 1] = val\n\t},\n})\n\nString.prototype.capitalizeFirstLetter = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1)\n}\nString.prototype.equals = function(x: any) {\n\treturn this == x\n}\n\nexport function SCE(o: any) {\n\tswitch (typeof o) {\n\t\tcase 'undefined':\n\t\t\treturn 'undefined'\n\t\tcase 'function':\n\t\t\treturn o.toString()\n\t\tcase 'number':\n\t\t\treturn '' + o\n\t\tcase 'string':\n\t\t\treturn JSON.stringify(o)\n\t\tcase 'object':\n\t\t\tif (null == o) {\n\t\t\t\treturn 'null'\n\t\t\t} else {\n\t\t\t\treturn o.sce\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new Error()\n\t}\n}\nexport function STR(o: any) {\n\treturn o.str\n}\nObject.defineProperty(Object.prototype, 'sce', {\n\tget: function() {\n\t\treturn this.toSource()\n\t},\n})\nObject.defineProperty(Object.prototype, 'str', {\n\tget: function() {\n\t\treturn this.toString()\n\t},\n})\n\n//const NLA = {}\n//for (let key in ARRAY_UTILITIES) {\n//    const nlaName = 'array' + key.capitalizeFirstLetter()\n//    assert(!NLA[nlaName])\n//    NLA[nlaName] = (arr, ...rest) => ARRAY_UTILITIES[key].apply(arr, rest)\n//}\n\nexport function isCCW(vertices: V3[], normal: V3) {\n\tconst dsa = doubleSignedArea(vertices, normal)\n\tassert(0 != dsa)\n\treturn dsa < 0\n}\nexport function doubleSignedArea(vertices: V3[], normal: V3) {\n\tassert(!normal.likeO(), '!normal.likeO()')\n\tconst absMaxDim = normal.maxAbsDim()\n\t// order is important, coord0 and coord1 must be set so that coord0, coord1 and maxDim span a right-hand coordinate\n\t// system var [coord0, coord1] = [['y', 'z'], ['z', 'x'], ['x', 'y']][maxAbsDim]\n\tconst doubleSignedArea = vertices\n\t\t.map((v0, i, vertices) => {\n\t\t\tconst v1 = vertices[(i + 1) % vertices.length]\n\t\t\t//return (v1[coord0] - v0[coord0]) * (v1[coord1] + v0[coord1])\n\t\t\tswitch (absMaxDim) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn (v1.y - v0.y) * (v1.z + v0.z)\n\t\t\t\tcase 1:\n\t\t\t\t\treturn (v1.z - v0.z) * (v1.x + v0.x)\n\t\t\t\tcase 2:\n\t\t\t\t\treturn (v1.x - v0.x) * (v1.y + v0.y)\n\t\t\t}\n\t\t})\n\t\t.reduce((a, b) => a + b)\n\treturn snap(doubleSignedArea * Math.sign(normal.e(absMaxDim)), 0)\n}\n\n/**\n * solves x² + px + q = 0\n */\nexport function pqFormula(p: number, q: number): number[] {\n\t// 4 times the discriminant:in\n\tconst discriminantX4 = (p * p) / 4 - q\n\tif (discriminantX4 < -NLA_PRECISION) {\n\t\treturn []\n\t} else if (discriminantX4 <= NLA_PRECISION) {\n\t\treturn [-p / 2]\n\t} else {\n\t\tconst root = Math.sqrt(discriminantX4)\n\t\treturn [-p / 2 - root, -p / 2 + root]\n\t}\n}\n\n/**\n * from pomax' library\n * solves ax³ + bx² + cx + d = 0\n * This function from pomax' utils\n * @returns 0-3 roots\n */\nexport function solveCubicReal2(a: number, b: number, c: number, d: number): number[] {\n\tif (eq0(a)) {\n\t\tif (eq0(b)) {\n\t\t\treturn [-d / c]\n\t\t} else {\n\t\t\treturn pqFormula(c / b, d / b)\n\t\t}\n\t}\n\tconst divisor = a\n\ta = b / divisor\n\tb = c / divisor\n\tc = d / divisor\n\tconst p = (3 * b - a * a) / 3,\n\t\tpDiv3 = p / 3,\n\t\tpDiv3Pow3 = pDiv3 * pDiv3 * pDiv3,\n\t\tq = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n\t\tqDiv2 = q / 2,\n\t\tdiscriminant = qDiv2 * qDiv2 + pDiv3Pow3\n\t// 18abcd - 4b³d + b²c² - 4ac³ - 27a²d²\n\tif (discriminant < -NLA_PRECISION / 8) {\n\t\tconst r = Math.sqrt(-pDiv3Pow3),\n\t\t\tt = -q / (2 * r),\n\t\t\tcosphi = t < -1 ? -1 : t > 1 ? 1 : t, // clamp t to [-1;1]\n\t\t\tphi = Math.acos(cosphi),\n\t\t\tt1 = 2 * Math.cbrt(r)\n\t\tconst x1 = t1 * Math.cos(phi / 3) - a / 3\n\t\tconst x2 = t1 * Math.cos((phi + 2 * Math.PI) / 3) - a / 3\n\t\tconst x3 = t1 * Math.cos((phi + 4 * Math.PI) / 3) - a / 3\n\t\treturn [x1, x2, x3]\n\t} else if (discriminant <= NLA_PRECISION / 8) {\n\t\tif (0 == qDiv2) {\n\t\t\t// TODO: compare with likeO?\n\t\t\treturn [-a / 3]\n\t\t}\n\t\tconst u1 = qDiv2 < 0 ? Math.cbrt(-qDiv2) : -Math.cbrt(qDiv2)\n\t\tconst x1 = 2 * u1 - a / 3\n\t\tconst x2 = -u1 - a / 3\n\t\treturn [x1, x2]\n\t} else {\n\t\tconst sd = Math.sqrt(discriminant)\n\t\tconst u1 = Math.cbrt(-qDiv2 + sd)\n\t\tconst v1 = Math.cbrt(qDiv2 + sd)\n\t\treturn [u1 - v1 - a / 3]\n\t}\n}\nexport function checkDerivate(\n\tf: (x: number) => number,\n\tdf: (x: number) => number,\n\ta: number,\n\tb: number,\n\tmaxFaults: int = 0,\n) {\n\tconst eps = 1e-4\n\tlet faults = 0\n\tfor (let t = a; t < b; t += (b - a) / 100) {\n\t\tconst dfdt = df(t)\n\t\tconst df2 = (f(t + eps) - f(t)) / eps\n\t\tassert((faults += +!eq2(df2, dfdt, 0.1)) <= maxFaults, `df2 == ${df2} != ${df(t)} = df(t)`)\n\t}\n}\nexport function getRoots(\n\tf: (x: number) => number,\n\ta: number,\n\tb: number,\n\tstepSize: number,\n\tdf: (x: number) => number,\n): number[] {\n\tconst results: number[] = []\n\tfor (let startT = a; startT <= b; startT += stepSize) {\n\t\tconst dt = stepSize * abs(df(startT))\n\t\tif (abs(f(startT)) <= dt) {\n\t\t\t//const t = newtonIterate1d(f, startT, 16)\n\t\t\tlet t = newtonIterateWithDerivative(f, startT, 16, df)\n\t\t\tif (!eq0(f(t)) || eq0(df(t))) {\n\t\t\t\tt = newtonIterate1d(df, startT, 16)\n\t\t\t\t// const a = startT - dt,\n\t\t\t\t// \tb = startT + dt\n\t\t\t\t//if (f(a) * f(b) < 0) {\n\t\t\t\t//    t = bisect(f, a, b, 16)\n\t\t\t\t//} else if (df(a) * df(b) < 0) {\n\t\t\t\t//    t = bisect(df, a, b, 16)\n\t\t\t\t//}\n\t\t\t}\n\t\t\tif (eq0(f(t)) && !results.some(r => eq(r, t))) {\n\t\t\t\tresults.push(t)\n\t\t\t}\n\t\t}\n\t}\n\treturn results\n}\n\nexport function bisect(f: (x: number) => number, a: number, b: number, steps: int) {\n\tassert(a < b)\n\tlet fA = f(a),\n\t\tfB = f(b)\n\tassert(fA * fB < 0)\n\twhile (steps--) {\n\t\tconst c = (b + a) / 2\n\t\tconst fC = f(c)\n\t\tif (sign(fA) == sign(fC)) {\n\t\t\ta = c\n\t\t\tfA = fC\n\t\t} else {\n\t\t\tb = c\n\t\t\tfB = fC\n\t\t}\n\t}\n\tassert(a <= (b + a) / 2)\n\tassert(b >= (b + a) / 2)\n\treturn lerp(a, b, 0.5)\n}\nexport function newtonIterate(\n\tf: (x: number[]) => number[],\n\tx: number[],\n\tsteps: int = 4,\n\tEPSILON?: number,\n\tstepize = 1,\n) {\n\tEPSILON = EPSILON || 1e-8\n\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = Matrix.jacobi(f, x, fx, EPSILON)\n\t\tassert(!dfdx.isZero())\n\t\tconst dx = dfdx.solveLinearSystem(new Vector(new Float64Array(fx))).v\n\t\tassert(!isNaN(dx[0]))\n\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\tfor (let j = 0; j < x.length; j++) x[j] -= dx[j] * stepize\n\t}\n\treturn x\n}\n\nexport function newtonIterate1d(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number | undefined,\n\tdf: (x: number) => number,\n): number\nexport function newtonIterate1d(f: (x: number) => number, xStart: number, steps: number, EPSILON?: number): number\nexport function newtonIterate1d(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 8,\n\tepsOrDf: number | ((x: number) => number) = 1e-8,\n): number {\n\tif ('number' === typeof epsOrDf) {\n\t\tlet x = xStart\n\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\tconst fx = f(x)\n\t\t\tconst dfdx = (f(x + epsOrDf) - fx) / epsOrDf\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t\tx = x - fx / dfdx\n\t\t}\n\t\treturn x\n\t} else {\n\t\treturn newtonIterateWithDerivative(f, xStart, steps, epsOrDf)\n\t}\n}\nexport function newtonIterateWithDerivative(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 4,\n\tdf: (x: number) => number,\n) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterateWithDerivative2(\n\tfAndDf: (x: number) => [number, number],\n\txStart: number,\n\tsteps: number = 8,\n\txMin = -Infinity,\n\txMax = Infinity,\n) {\n\tassert(steps % 1 == 0)\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst [fx, dfdx] = fAndDf(x)\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (0 == dfdx || x < xMin || xMax < x) {\n\t\t\treturn undefined\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterateSmart(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 4,\n\tdf: (x: number) => number,\n\tmindf = 1e-6,\n) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (abs(dfdx) < mindf && abs(fx) < mindf) {\n\t\t\treturn newtonIterate1d(df, x, steps, df)\n\t\t}\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterate2d(\n\tf1: (s: number, t: number) => number,\n\tf2: (s: number, t: number) => number,\n\tsStart: number,\n\ttStart: number,\n\tsteps?: number,\n): V3 | undefined {\n\tconst EPSILON = 1e-6\n\tsteps = steps || 4\n\tlet s = sStart,\n\t\tt = tStart,\n\t\tf1ts,\n\t\tf2ts\n\tdo {\n\t\t/*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f1(s, t)\n\t\tf2ts = f2(s, t)\n\t\t/*\n         let df1s = (f1(s + EPSILON, t) - f1ts) / EPSILON, df1t = (f1(s, t + EPSILON) - f1ts) / EPSILON,\n         df2s = (f2(s + EPSILON, t) - f2ts) / EPSILON, df2t = (f2(s, t + EPSILON) - f2ts) / EPSILON\n         let det = df1s * df2t - df1t * df2s\n         s = s - ( df2t * f1ts - df1t * f2ts) / det\n         t = t - (-df2s * f1ts + df1s * f2ts) / det\n         */\n\t\t// TODO: is this even more accurate?\n\t\tconst df1s = f1(s + EPSILON, t) - f1ts,\n\t\t\tdf1t = f1(s, t + EPSILON) - f1ts,\n\t\t\tdf2s = f2(s + EPSILON, t) - f2ts,\n\t\t\tdf2t = f2(s, t + EPSILON) - f2ts\n\t\tconst det = (df1s * df2t - df1t * df2s) / EPSILON\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts ** 2 + f2ts ** 2 > NLA_PRECISION)\n\tif (f1ts ** 2 + f2ts ** 2 > NLA_PRECISION) {\n\t\tconsole.log(f1ts ** 2 + f2ts ** 2)\n\t\treturn undefined\n\t}\n\treturn new V3(s, t, 0)\n}\nexport function newtonIterate2dWithDerivatives(\n\tf: (s: number, t: number) => number,\n\tg: (s: number, t: number) => number,\n\tsStart: number,\n\ttStart: number,\n\tsteps: int,\n\tdfds: (s: number, t: number) => number,\n\tdfdt: (s: number, t: number) => number,\n\tdgds: (s: number, t: number) => number,\n\tdgdt: (s: number, t: number) => number,\n): V3 | undefined {\n\tsteps = steps || 4\n\tlet s = sStart,\n\t\tt = tStart\n\tlet f1ts, f2ts\n\tdo {\n\t\t/*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f(s, t)\n\t\tf2ts = g(s, t)\n\t\tconst df1s = dfds(s, t),\n\t\t\tdf1t = dfdt(s, t),\n\t\t\tdf2s = dgds(s, t),\n\t\t\tdf2t = dgdt(s, t)\n\t\t// TODO: is this even more accurate?\n\t\tconst det = df1s * df2t - df1t * df2s\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts * f1ts + f2ts * f2ts > NLA_PRECISION / 32)\n\tif (!steps) {\n\t\t//console.log(f1ts * f1ts + f2ts * f2ts)\n\t\treturn undefined\n\t}\n\treturn V(s, t, 0)\n}\n\nexport const gaussLegendre24Xs: ReadonlyArray<number> = [\n\t-0.0640568928626056260850430826247450385909,\n\t0.0640568928626056260850430826247450385909,\n\t-0.1911188674736163091586398207570696318404,\n\t0.1911188674736163091586398207570696318404,\n\t-0.3150426796961633743867932913198102407864,\n\t0.3150426796961633743867932913198102407864,\n\t-0.4337935076260451384870842319133497124524,\n\t0.4337935076260451384870842319133497124524,\n\t-0.5454214713888395356583756172183723700107,\n\t0.5454214713888395356583756172183723700107,\n\t-0.6480936519369755692524957869107476266696,\n\t0.6480936519369755692524957869107476266696,\n\t-0.7401241915785543642438281030999784255232,\n\t0.7401241915785543642438281030999784255232,\n\t-0.8200019859739029219539498726697452080761,\n\t0.8200019859739029219539498726697452080761,\n\t-0.8864155270044010342131543419821967550873,\n\t0.8864155270044010342131543419821967550873,\n\t-0.9382745520027327585236490017087214496548,\n\t0.9382745520027327585236490017087214496548,\n\t-0.9747285559713094981983919930081690617411,\n\t0.9747285559713094981983919930081690617411,\n\t-0.9951872199970213601799974097007368118745,\n\t0.9951872199970213601799974097007368118745,\n]\nexport const gaussLegendre24Weights: ReadonlyArray<number> = [\n\t0.1279381953467521569740561652246953718517,\n\t0.1279381953467521569740561652246953718517,\n\t0.1258374563468282961213753825111836887264,\n\t0.1258374563468282961213753825111836887264,\n\t0.121670472927803391204463153476262425607,\n\t0.121670472927803391204463153476262425607,\n\t0.1155056680537256013533444839067835598622,\n\t0.1155056680537256013533444839067835598622,\n\t0.1074442701159656347825773424466062227946,\n\t0.1074442701159656347825773424466062227946,\n\t0.0976186521041138882698806644642471544279,\n\t0.0976186521041138882698806644642471544279,\n\t0.086190161531953275917185202983742667185,\n\t0.086190161531953275917185202983742667185,\n\t0.0733464814110803057340336152531165181193,\n\t0.0733464814110803057340336152531165181193,\n\t0.0592985849154367807463677585001085845412,\n\t0.0592985849154367807463677585001085845412,\n\t0.0442774388174198061686027482113382288593,\n\t0.0442774388174198061686027482113382288593,\n\t0.0285313886289336631813078159518782864491,\n\t0.0285313886289336631813078159518782864491,\n\t0.0123412297999871995468056670700372915759,\n\t0.0123412297999871995468056670700372915759,\n]\nexport function gaussLegendreQuadrature24(f: (x: number) => number, startT: number, endT: number): number {\n\t//let result = 0\n\t//for (let i = 0; i < gaussLegendre24Xs.length; i++) {\n\t//\t// gauss-legendre goes from -1 to 1, so we need to scale\n\t//\tlet t = startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT)\n\t//\tresult += gaussLegendre24Weights[i] * f(t)\n\t//}\n\t//const result = NLA\n\t//\t\t.arrayFromFunction(24, i => startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT))\n\t//\t\t.map((t, i) => gaussLegendre24Weights[i] * f(t))\n\t//\t\t.sumInPlaceTree()\n\t//99.54182500782605\n\t//99.54182500782602\n\t// again, [-1,1], so div by 2\n\t//return result // 2 * (endT - startT)\n\n\treturn (glq24_11(t => f(startT + ((t + 1) / 2) * (endT - startT))) / 2) * (endT - startT)\n}\n\n/**\n * Calculate the integral of f in the interval [-1;1].\n * @param f\n */\nexport function glq24_11(f: (x: number) => number): number {\n\treturn arrayFromFunction(24, i => gaussLegendre24Weights[i] * f(gaussLegendre24Xs[i])).sumInPlaceTree()\n}\nexport function glqInSteps(f: (x: number) => number, startT: number, endT: number, steps: int) {\n\tconst dt = (endT - startT) / steps\n\treturn (\n\t\t(arrayFromFunction(steps, i => glq24_11(t => f(startT + dt * i + ((t + 1) / 2) * dt))).sumInPlaceTree() / 2) *\n\t\tdt\n\t)\n}\n\nexport function midpointRuleQuadrature(\n\tf: (x: number) => number,\n\tstartT: number,\n\tendT: number,\n\tsteps: int = 32,\n): number {\n\tconst dt = (endT - startT) / steps\n\treturn (\n\t\tarrayFromFunction(steps, i => startT + dt / 2 + dt * i)\n\t\t\t.map(f)\n\t\t\t.sumInPlaceTree() * dt\n\t)\n}\n\nexport function callsce(name: string, ...params: any[]) {\n\treturn name + '(' + params.map(SCE).join(',') + ')'\n}\n","import { Equalable, JavaMap as CustomMap } from 'javasetmap.ts'\r\nimport {\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tdefaultRoundFunction,\r\n\teq,\r\n\teq0,\r\n\teq2,\r\n\tFloatArray,\r\n\tint,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n} from './NLA'\r\n\r\n/**\r\n * Immutable 3d-vector/point.\r\n */\r\nexport class V3 implements Equalable {\r\n\tstatic readonly O: V3 = new V3(0, 0, 0)\r\n\tstatic readonly X: V3 = new V3(1, 0, 0)\r\n\tstatic readonly Y: V3 = new V3(0, 1, 0)\r\n\tstatic readonly Z: V3 = new V3(0, 0, 1)\r\n\tstatic readonly XY: V3 = new V3(1, 1, 0)\r\n\tstatic readonly XYZ: V3 = new V3(1, 1, 1)\r\n\tstatic readonly INF: V3 = new V3(Infinity, Infinity, Infinity)\r\n\tstatic readonly UNITS: V3[] = [V3.X, V3.Y, V3.Z]\r\n\tstatic readonly NAMEMAP = new CustomMap<V3, string>()\r\n\t\t.set(V3.O, 'V3.O')\r\n\t\t.set(V3.X, 'V3.X')\r\n\t\t.set(V3.Y, 'V3.Y')\r\n\t\t.set(V3.Z, 'V3.Z')\r\n\t\t.set(V3.XYZ, 'V3.XYZ')\r\n\t\t.set(V3.INF, 'V3.INF')\r\n\r\n\tconstructor(readonly x: number, readonly y: number, readonly z: number) {\r\n\t\tassertNumbers(x, y, z)\r\n\t}\r\n\r\n\tstatic random(): V3 {\r\n\t\treturn new V3(Math.random(), Math.random(), Math.random())\r\n\t}\r\n\r\n\tstatic parallel(a: V3, b: V3) {\r\n\t\treturn a.dot(b) - a.length() * b.length()\r\n\t}\r\n\r\n\t/**\r\n\t * See http://math.stackexchange.com/questions/44689/how-to-find-a-random-axis-or-unit-vector-in-3d\r\n\t * @returns A random point on the unit sphere with uniform distribution across the surface.\r\n\t */\r\n\tstatic randomUnit(): V3 {\r\n\t\tconst zRotation = Math.random() * 2 * Math.PI\r\n\t\tconst z = Math.random() * 2 - 1\r\n\t\tconst zRadius = Math.sqrt(1 - z ** 2)\r\n\t\treturn new V3(zRadius * Math.cos(zRotation), zRadius * Math.sin(zRotation), z)\r\n\t}\r\n\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Documentation stub. You want {@see V3#sphere}\r\n\t */\r\n\tstatic fromAngles(theta: number, phi: number): V3 {\r\n\t\tthrow new Error()\r\n\t}\r\n\r\n\tstatic fromFunction(f: (dim: number) => number) {\r\n\t\treturn new V3(f(0), f(1), f(2))\r\n\t}\r\n\r\n\tstatic min(a: V3, b: V3): V3 {\r\n\t\treturn new V3(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z))\r\n\t}\r\n\r\n\tstatic max(a: V3, b: V3): V3 {\r\n\t\treturn new V3(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z))\r\n\t}\r\n\r\n\tstatic lerp(a: V3, b: V3, t: number): V3 {\r\n\t\treturn new V3(a.x * (1 - t) + b.x * t, a.y * (1 - t) + b.y * t, a.z * (1 - t) + b.z * t)\r\n\t}\r\n\r\n\tstatic fromArray(a: number[]): V3 {\r\n\t\treturn new V3(a[0], a[1], a[2])\r\n\t}\r\n\r\n\tstatic angleBetween(a: V3, b: V3): number {\r\n\t\treturn a.angleTo(b)\r\n\t}\r\n\r\n\tstatic zip(f: (...args: number[]) => number, ...args: V3[]): V3 {\r\n\t\tassert(f instanceof Function)\r\n\t\treturn new V3(\r\n\t\t\tf.apply(undefined, args.map(x => x.x)),\r\n\t\t\tf.apply(undefined, args.map(x => x.y)),\r\n\t\t\tf.apply(undefined, args.map(x => x.z)),\r\n\t\t)\r\n\t}\r\n\r\n\tstatic normalOnPoints(a: V3, b: V3, c: V3): V3 {\r\n\t\tassertVectors(a, b, c)\r\n\t\treturn a.to(b).cross(a.to(c))\r\n\t}\r\n\r\n\tstatic add(...vs: V3[]): V3 {\r\n\t\tassertVectors(...vs)\r\n\t\tlet x = 0,\r\n\t\t\ty = 0,\r\n\t\t\tz = 0\r\n\t\tlet i = vs.length\r\n\t\twhile (i--) {\r\n\t\t\tx += vs[i].x\r\n\t\t\ty += vs[i].y\r\n\t\t\tz += vs[i].z\r\n\t\t}\r\n\t\treturn new V3(x, y, z)\r\n\t}\r\n\r\n\tstatic sub(...vs: V3[]): V3 {\r\n\t\tassertVectors(...vs)\r\n\t\tlet x = vs[0].x,\r\n\t\t\ty = vs[0].y,\r\n\t\t\tz = vs[0].z\r\n\t\tlet i = vs.length\r\n\t\twhile (i--) {\r\n\t\t\tx -= vs[i].x\r\n\t\t\ty -= vs[i].y\r\n\t\t\tz -= vs[i].z\r\n\t\t}\r\n\t\treturn new V3(x, y, z)\r\n\t}\r\n\r\n\t/**\r\n\t * Pack an array of V3s into an array of numbers (Float32Array by default).\r\n\t *\r\n\t * @param v3arr source array\r\n\t * @param dest destination array. If provided, must be large enough to fit v3count items.\r\n\t * @param srcStart starting index in source array\r\n\t * @param destStart starting index in destination array\r\n\t * @param v3count Number of V3s to copy.\r\n\t * @returns Packed array.\r\n\t */\r\n\tstatic pack<T extends FloatArray = Float32Array>(\r\n\t\tv3arr: ReadonlyArray<V3>,\r\n\t\tdest?: T,\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = v3arr.length - srcStart,\r\n\t): T {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tconst result = dest || (new Float32Array(3 * v3count) as any) // TODO\r\n\t\tassert(\r\n\t\t\tresult.length - destStart >= v3count * 3,\r\n\t\t\t'dest.length - destStart >= v3count * 3',\r\n\t\t\tresult.length,\r\n\t\t\tdestStart,\r\n\t\t\tv3count * 3,\r\n\t\t)\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tconst v = v3arr[srcIndex++]\r\n\t\t\tresult[destIndex++] = v.x\r\n\t\t\tresult[destIndex++] = v.y\r\n\t\t\tresult[destIndex++] = v.z\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic unpack(\r\n\t\tpackedArray: ArrayLike<number>,\r\n\t\tdest?: V3[],\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = (packedArray.length - srcStart) / 3,\r\n\t) {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tdest = dest || new Array(v3count)\r\n\t\tassert(dest.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tdest[destIndex++] = new V3(packedArray[srcIndex++], packedArray[srcIndex++], packedArray[srcIndex++])\r\n\t\t}\r\n\t\treturn dest\r\n\t}\r\n\r\n\tstatic packXY<T extends FloatArray = Float32Array>(\r\n\t\tv3arr: V3[],\r\n\t\tdest?: T,\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = v3arr.length - srcStart,\r\n\t): T {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tconst result = dest || (new Float32Array(2 * v3count) as any)\r\n\t\tassert(result.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tconst v = v3arr[srcIndex++]\r\n\t\t\tresult[destIndex++] = v.x\r\n\t\t\tresult[destIndex++] = v.y\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic unpackXY(\r\n\t\tsrc: FloatArray,\r\n\t\tdest?: V3[],\r\n\t\tsrcStart: int = 0,\r\n\t\tdestStart: int = 0,\r\n\t\tv3count: int = Math.min(src.length / 2, (dest && dest.length) || Infinity) - destStart,\r\n\t): V3[] {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tdest = dest || new Array(v3count)\r\n\t\tassert(dest.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\t\tassert(src.length - srcStart >= v3count * 2, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tdest[destIndex++] = new V3(src[srcIndex++], src[srcIndex++], 0)\r\n\t\t}\r\n\t\treturn dest\r\n\t}\r\n\r\n\tstatic perturbed(v: V3, delta?: number): V3 {\r\n\t\treturn v.perturbed(delta)\r\n\t}\r\n\r\n\tstatic polar(radius: number, phi: raddd, z: number = 0): V3 {\r\n\t\treturn new V3(radius * Math.cos(phi), radius * Math.sin(phi), z)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param longitude angle in XY plane\r\n\t * @param latitude \"height\"/z dir angle\r\n\t */\r\n\tstatic sphere(longitude: raddd, latitude: raddd, length = 1): V3 {\r\n\t\treturn new V3(\r\n\t\t\tlength * Math.cos(latitude) * Math.cos(longitude),\r\n\t\t\tlength * Math.cos(latitude) * Math.sin(longitude),\r\n\t\t\tlength * Math.sin(latitude),\r\n\t\t)\r\n\t}\r\n\r\n\tstatic inverseLerp(a: V3, b: V3, x: V3) {\r\n\t\tconst ab = a.to(b)\r\n\t\treturn a.to(x).dot(ab) / ab.squared()\r\n\t}\r\n\r\n\tget [0]() {\r\n\t\treturn this.x\r\n\t}\r\n\tget [1]() {\r\n\t\treturn this.y\r\n\t}\r\n\tget [2]() {\r\n\t\treturn this.z\r\n\t}\r\n\r\n\tget u() {\r\n\t\treturn this.x\r\n\t}\r\n\tget v() {\r\n\t\treturn this.y\r\n\t}\r\n\r\n\tperturbed(delta: number = NLA_PRECISION * 0.8): V3 {\r\n\t\treturn this.map(x => x + (Math.random() - 0.5) * delta)\r\n\t}\r\n\r\n\t*[Symbol.iterator]() {\r\n\t\tyield this.x\r\n\t\tyield this.y\r\n\t\tyield this.z\r\n\t}\r\n\r\n\te(index: int): number {\r\n\t\tassert(index >= 0 && index < 3)\r\n\t\treturn 0 == index ? this.x : 1 == index ? this.y : this.z\r\n\t}\r\n\r\n\tnegated(): V3 {\r\n\t\treturn new V3(-this.x, -this.y, -this.z)\r\n\t}\r\n\r\n\tabs(): V3 {\r\n\t\treturn new V3(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\r\n\t}\r\n\r\n\tplus(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn new V3(this.x + a.x, this.y + a.y, this.z + a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Hadarmard product (or Schur product)\r\n\t * Element-wise multiplication of two vectors.\r\n\t * @see https://en.wikipedia.org/wiki/Hadamard_product_(matrices)\r\n\t *\r\n\t */\r\n\tschur(a: V3): V3 {\r\n\t\treturn new V3(this.x * a.x, this.y * a.y, this.z * a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Element-wise division.\r\n\t */\r\n\tdivv(a: V3): V3 {\r\n\t\treturn new V3(this.x / a.x, this.y / a.y, this.z / a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * See also {@link to} which is a.minus(this)\r\n\t */\r\n\tminus(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn new V3(this.x - a.x, this.y - a.y, this.z - a.z)\r\n\t}\r\n\r\n\tto(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn a.minus(this)\r\n\t}\r\n\r\n\ttimes(factor: number): V3 {\r\n\t\tassertNumbers(factor)\r\n\t\treturn new V3(this.x * factor, this.y * factor, this.z * factor)\r\n\t}\r\n\r\n\tdiv(a: number): V3 {\r\n\t\tassertNumbers(a)\r\n\t\treturn new V3(this.x / a, this.y / a, this.z / a)\r\n\t}\r\n\r\n\t/**\r\n\t * Dot product.\r\n\t * @see https://en.wikipedia.org/wiki/Dot_product\r\n\t */\r\n\tdot(a: V3): number {\r\n\t\tassertInst(V3, a)\r\n\t\treturn this.x * a.x + this.y * a.y + this.z * a.z\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolate\r\n\t */\r\n\tlerp(b: V3, t: number): V3 {\r\n\t\tassertVectors(b)\r\n\t\tassertNumbers(t)\r\n\t\treturn V3.lerp(this, b, t)\r\n\t}\r\n\r\n\tsquared(): number {\r\n\t\treturn this.dot(this)\r\n\t}\r\n\r\n\tdistanceTo(a: V3): number {\r\n\t\tassertVectors(a)\r\n\t\t//return this.minus(a).length()\r\n\t\treturn Math.hypot(this.x - a.x, this.y - a.y, this.z - a.z)\r\n\t}\r\n\r\n\tdistanceToSquared(a: V3): number {\r\n\t\tassertVectors(a)\r\n\t\treturn this.minus(a).squared()\r\n\t}\r\n\r\n\t///**\r\n\t// * See also {@see #setTo} for the individual\r\n\t// *\r\n\t// * @param v\r\n\t// */\r\n\t//assign(v) {\r\n\t//\tassertVectors(v)\r\n\t//\tthis.x = v.x\r\n\t//\tthis.y = v.y\r\n\t//\tthis.z = v.z\r\n\t//}\r\n\t//\r\n\t///**\r\n\t// * See also {@see #assign} for the V3 version\r\n\t// *\r\n\t// * @param x\r\n\t// * @param y\r\n\t// * @param z\r\n\t// */\r\n\t//setTo(x, y, z = 0) {\r\n\t//\tthis.x = x\r\n\t//\tthis.y = y\r\n\t//\tthis.z = z\r\n\t//}\r\n\r\n\ttoSource(): string {\r\n\t\treturn V3.NAMEMAP.get(this) || this.toString()\r\n\t}\r\n\r\n\tnonParallelVector(): V3 {\r\n\t\tconst abs = this.abs()\r\n\t\tif (abs.x <= abs.y && abs.x <= abs.z) {\r\n\t\t\treturn V3.X\r\n\t\t} else if (abs.y <= abs.x && abs.y <= abs.z) {\r\n\t\t\treturn V3.Y\r\n\t\t} else {\r\n\t\t\treturn V3.Z\r\n\t\t}\r\n\t}\r\n\r\n\tslerp(b: V3, t: number): V3 {\r\n\t\tassertVectors(b)\r\n\t\tassertNumbers(t)\r\n\t\tconst sin = Math.sin\r\n\t\tconst omega = this.angleTo(b)\r\n\t\treturn this.times(sin((1 - t) * omega) / sin(omega)).plus(b.times(sin(t * omega) / sin(omega)))\r\n\t}\r\n\r\n\tmin(b: V3): V3 {\r\n\t\treturn new V3(Math.min(this.x, b.x), Math.min(this.y, b.y), Math.min(this.z, b.z))\r\n\t}\r\n\r\n\tmax(b: V3): V3 {\r\n\t\treturn new V3(Math.max(this.x, b.x), Math.max(this.y, b.y), Math.max(this.z, b.z))\r\n\t}\r\n\r\n\tequals(v: any): boolean {\r\n\t\treturn this == v || (this.x == v.x && this.y == v.y && this.z == v.z)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * The cross product is defined as:\r\n\t * a x b = |a| * |b| * sin(phi) * n\r\n\t * where |.| is the euclidean norm, phi is the angle between the vectors\r\n\t * and n is a unit vector perpendicular to both a and b.\r\n\t *\r\n\t * The cross product is zero for parallel vectors.\r\n\t * @see https://en.wikipedia.org/wiki/Cross_product\r\n\t */\r\n\tcross(v: V3): V3 {\r\n\t\treturn new V3(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x)\r\n\t}\r\n\r\n\tminElement(): number {\r\n\t\treturn Math.min(this.x, this.y, this.z)\r\n\t}\r\n\r\n\tmaxElement(): number {\r\n\t\treturn Math.max(this.x, this.y, this.z)\r\n\t}\r\n\r\n\ttoArray(n: int = 3): number[] {\r\n\t\treturn [this.x, this.y, this.z].slice(0, n)\r\n\t}\r\n\r\n\t/**\r\n\t * Get a perpendicular vector.\r\n\t * For vectors in the XY-Plane, returns vector rotated 90° CCW.\r\n\t */\r\n\tgetPerpendicular(): V3 {\r\n\t\tif (eq0(this.x) && eq0(this.y)) {\r\n\t\t\tif (eq0(this.z)) {\r\n\t\t\t\tthrow new Error('zero vector')\r\n\t\t\t}\r\n\t\t\t// v is Vector(0, 0, v.z)\r\n\t\t\treturn V3.Y\r\n\t\t}\r\n\t\treturn new V3(-this.y, this.x, 0)\r\n\t}\r\n\r\n\t//noinspection JSMethodCanBeStatic\r\n\tdim(): int {\r\n\t\treturn 3\r\n\t}\r\n\r\n\tels(): number[] {\r\n\t\treturn [this.x, this.y, this.z]\r\n\t}\r\n\r\n\tangleXY(): number {\r\n\t\treturn Math.atan2(this.y, this.x)\r\n\t}\r\n\r\n\tlengthXY(): number {\r\n\t\treturn Math.hypot(this.x, this.y)\r\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y)\r\n\t}\r\n\r\n\tsquaredXY(): number {\r\n\t\treturn this.x * this.x + this.y * this.y\r\n\t}\r\n\r\n\txy(): V3 {\r\n\t\treturn new V3(this.x, this.y, 0)\r\n\t}\r\n\r\n\t/**\r\n\t * Transform this vector element-wise by way of function f. Returns V3(f(x), f(y), f(z))\r\n\t * @param f function to apply to elements (number -> number)\r\n\t */\r\n\tmap(f: (el: number, dim: 'x' | 'y' | 'z') => number): V3 {\r\n\t\treturn new V3(f(this.x, 'x'), f(this.y, 'y'), f(this.z, 'z'))\r\n\t}\r\n\r\n\ttoString(roundFunction?: (x: number) => any): string {\r\n\t\troundFunction = roundFunction || defaultRoundFunction\r\n\t\treturn V3.NAMEMAP.get(this) || 'V(' + [this.x, this.y, this.z].map(roundFunction).join(', ') + ')' //+ this.id\r\n\t}\r\n\r\n\tangleTo(b: V3): number {\r\n\t\tassert(1 == arguments.length)\r\n\t\tassertVectors(b)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!b.likeO())\r\n\t\treturn Math.acos(Math.min(1, this.dot(b) / this.length() / b.length()))\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * phi = angle between A and B\r\n\t * alpha = angle between n and normal1\r\n\t *\r\n\t * A . B = ||A|| * ||B|| * cos(phi)\r\n\t * A x B = ||A|| * ||B|| * sin(phi) * n (n = unit vector perpendicular)\r\n\t * (A x B) . normal1 = ||A|| * ||B|| * sin(phi) * cos(alpha)\r\n\t */\r\n\tangleRelativeNormal(vector: V3, normal1: V3): number {\r\n\t\tassert(2 == arguments.length)\r\n\t\tassertVectors(vector, normal1)\r\n\t\tassertf(() => normal1.hasLength(1))\r\n\t\t//assert(vector.isPerpendicularTo(normal1), 'vector.isPerpendicularTo(normal1)' + vector.sce + normal1.sce)\r\n\t\t//assert(this.isPerpendicularTo(normal1), 'this.isPerpendicularTo(normal1)' + this.dot(vector)) //\r\n\t\t// -0.000053600770598683675\r\n\t\treturn Math.atan2(this.cross(vector).dot(normal1), this.dot(vector))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true iff this is parallel to vector, i.e. this * s == vector, where s is a positive or negative number,\r\n\t * using eq. Throw a DebugError\r\n\t * - if vector is not a Vector or\r\n\t * - if this has a length of 0 or\r\n\t * - if vector has a length of 0\r\n\t */\r\n\tisParallelTo(vector: V3): boolean {\r\n\t\tassertVectors(vector)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!vector.likeO())\r\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\r\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\r\n\t\tconst dot = this.dot(vector)\r\n\t\treturn eq(this.squared() * vector.squared(), dot * dot)\r\n\t}\r\n\r\n\tisPerpendicularTo(vector: V3): boolean {\r\n\t\tassertVectors(vector)\r\n\t\tassert(!this.likeO(), '!this.likeO()')\r\n\t\tassert(!vector.likeO(), '!vector.likeO()')\r\n\t\treturn eq0(this.dot(vector))\r\n\t}\r\n\r\n\tisReverseDirTo(other: V3): boolean {\r\n\t\tassertVectors(other)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!other.likeO())\r\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\r\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\r\n\t\tconst dot = this.dot(other)\r\n\t\treturn eq(Math.sqrt(this.squared() * other.squared()), dot)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this Vector, i.e. the euclidean norm.\r\n\t *\r\n\t * Note that the partial derivatives of the euclidean norm at point x are equal to the\r\n\t * components of the unit vector x.\r\n\t */\r\n\tlength(): number {\r\n\t\treturn Math.hypot(this.x, this.y, this.z)\r\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Definition: V3.likeO == V3.like(V3.O)\r\n\t */\r\n\tlikeO(): boolean {\r\n\t\treturn this.like(V3.O)\r\n\t}\r\n\r\n\t/**\r\n\t * eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\r\n\t * @param obj\r\n\t */\r\n\tlike(obj: any): boolean {\r\n\t\tif (obj === this) return true\r\n\t\tif (!(obj instanceof V3)) return false\r\n\t\treturn eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\r\n\t}\r\n\r\n\t/**\r\n\t * equivalent to this.like(v) || this.negated().like(v)\r\n\t */\r\n\tlikeOrReversed(v: V3): boolean {\r\n\t\treturn eq(Math.abs(this.dot(v)), Math.sqrt(this.squared() * v.squared()))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\r\n\t * DebugError if this has a length of 0.\r\n\t */\r\n\tunit(): V3 {\r\n\t\tassert(!this.likeO(), 'cannot normalize zero vector')\r\n\t\treturn this.div(this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Documentation stub. You want {@link unit}\r\n\t */\r\n\tnormalized(): V3 {\r\n\t\tthrow new Error('documentation stub. use .unit()')\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new V3 equal to this scaled so that its length is equal to newLength.\r\n\t *\r\n\t * Passing a negative newLength will flip the vector.\r\n\t */\r\n\ttoLength(newLength: number): V3 {\r\n\t\tassertNumbers(newLength)\r\n\t\treturn this.times(newLength / this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector which is the projection of this vector onto the passed vector.\r\n\t * Examples\r\n\t *\r\n\t * \tV(3, 4).projectedOn(V(1, 0)) // returns V(3, 0)\r\n\t * \tV(3, 4).projectedOn(V(2, 0)) // returns V(3, 0)\r\n\t * \tV(3, 4).projectedOn(V(-1, 0)) // returns V(-3, 0)\r\n\t * \tV(3, 4).projectedOn(V(0, 1)) // returns V(0, 4)\r\n\t * \tV(3, 4).projectedOn(V(1, 1)) // returns\r\n\t */\r\n\tprojectedOn(b: V3): V3 {\r\n\t\tassertVectors(b)\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn b.times(this.dot(b) / b.dot(b))\r\n\t}\r\n\r\n\trejectedFrom(b: V3): V3 {\r\n\t\tassertVectors(b)\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\r\n\t}\r\n\r\n\trejectedFrom1(b1: V3): V3 {\r\n\t\tassertVectors(b1)\r\n\t\tassert(b1.hasLength(1))\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn this.minus(b1.times(this.dot(b1)))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this vector rejected from the unit vector b.\r\n\t *\r\n\t *       /|\r\n\t * this / |    ^\r\n\t *     /__|    | b\r\n\t *      r\r\n\t *  Returns length of r (r === this.rejectedFrom(b))\r\n\t */\r\n\trejectedLength(b: V3): number {\r\n\t\tassertVectors(b)\r\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b) ** 2 / b.dot(b))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this vector rejected from the unit vector b1.\r\n\t *\r\n\t *       /|\r\n\t * this / |    ^\r\n\t *     /__|    | b1\r\n\t *      r\r\n\t *  Returns length of r (r === this.rejectedFrom(b1))\r\n\t */\r\n\trejected1Length(b1: V3): number {\r\n\t\tassertVectors(b1)\r\n\t\tassert(b1.hasLength(1))\r\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b1) ** 2)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true iff the length() of this vector is equal to 'length', using eq\r\n\t * @example\r\n\t * V(3, 4).hasLength(5) === true\r\n\t * @example\r\n\t * V(1, 1).hasLength(1) === false\r\n\t */\r\n\thasLength(length: number): boolean {\r\n\t\tassertNumbers(length)\r\n\t\treturn eq(length, this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the sum of the absolute values of the components of this vector.\r\n\t * E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\r\n\t */\r\n\tabsSum(): number {\r\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)\r\n\t}\r\n\r\n\t/**\r\n\t * returns min(|x|, |y|, |z|)\r\n\t */\r\n\tminAbsElement(): number {\r\n\t\treturn Math.min(Math.abs(this.x), Math.abs(this.y), Math.min(this.z))\r\n\t}\r\n\r\n\t/**\r\n\t * returns max(|x|, |y|, |z|)\r\n\t */\r\n\tmaxAbsElement(): number {\r\n\t\treturn Math.max(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\r\n\t}\r\n\r\n\tmaxAbsDim(): 0 | 1 | 2 {\r\n\t\tconst xAbs = Math.abs(this.x),\r\n\t\t\tyAbs = Math.abs(this.y),\r\n\t\t\tzAbs = Math.abs(this.z)\r\n\t\treturn xAbs >= yAbs ? (xAbs >= zAbs ? 0 : 2) : yAbs >= zAbs ? 1 : 2\r\n\t}\r\n\r\n\tminAbsDim(): 0 | 1 | 2 {\r\n\t\tconst xAbs = Math.abs(this.x),\r\n\t\t\tyAbs = Math.abs(this.y),\r\n\t\t\tzAbs = Math.abs(this.z)\r\n\t\treturn xAbs < yAbs ? (xAbs < zAbs ? 0 : 2) : yAbs < zAbs ? 1 : 2\r\n\t}\r\n\r\n\twithElement(dim: 'x' | 'y' | 'z', el: number) {\r\n\t\tassert(['x', 'y', 'z'].includes(dim), '' + dim)\r\n\t\tassertNumbers(el)\r\n\t\tif ('x' == dim) {\r\n\t\t\treturn new V3(el, this.y, this.z)\r\n\t\t}\r\n\t\tif ('y' == dim) {\r\n\t\t\treturn new V3(this.x, el, this.z)\r\n\t\t}\r\n\t\treturn new V3(this.x, this.y, el)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\tfunction floatHashCode(f: number) {\r\n\t\t\treturn ~~(f * (1 << 28))\r\n\t\t}\r\n\r\n\t\treturn ~~((floatHashCode(this.x) * 31 + floatHashCode(this.y)) * 31 + floatHashCode(this.z))\r\n\t}\r\n\r\n\t/**\r\n\t * as sadjkh akjhs djkahsd kjahs k skjhdakjh dkjash dkjahs kjdhas kj dhkjahsd kjahs dkjahs dkjhas kjdkajs\r\n\t * hdkljhfkjahdslfghal dasd\r\n\t *\r\n\t * * asdjklas dasds\r\n\t */\r\n\thashCodes() {\r\n\t\t//function floatHashCode(f) {\r\n\t\t//\treturn ~~(f * (1 << 28))\r\n\t\t//}\r\n\r\n\t\t// compare hashCode.floatHashCode\r\n\t\t// the following ops are equivalent to\r\n\t\t// floatHashCode((el - NLA_PRECISION) % (2 * NLA_PRECISION))\r\n\t\t// this results in the hashCode for the (out of 8 possible) cube with the lowest hashCode\r\n\t\t// the other 7 can be calculated by adding constants\r\n\t\tconst xHC = ~~(this.x * (1 << 28) - 0.5),\r\n\t\t\tyHC = ~~(this.y * (1 << 28) - 0.5),\r\n\t\t\tzHC = ~~(this.z * (1 << 28) - 0.5),\r\n\t\t\thc = ~~((xHC * 31 + yHC) * 31 + zHC)\r\n\t\treturn [\r\n\t\t\t~~hc,\r\n\t\t\t~~(hc + 961),\r\n\t\t\t~~(hc + 31),\r\n\t\t\t~~(hc + 31 + 961),\r\n\t\t\t~~(hc + 1),\r\n\t\t\t~~(hc + 1 + 961),\r\n\t\t\t~~(hc + 1 + 31),\r\n\t\t\t~~(hc + 1 + 31 + 961),\r\n\t\t]\r\n\t}\r\n\r\n\t//static areDisjoint(it: Iterable<V3>): boolean {\r\n\t//\tconst vSet = new CustomSet\r\n\t//\tfor (const v of it) {\r\n\t//\t\tif (!v.equals(vSet.canonicalizeLike(v))) {\r\n\t//\t\t\t// like value already in set\r\n\t//\t\t\treturn false\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\treturn true\r\n\t//}\r\n\r\n\tcompareTo(other: V3): number {\r\n\t\tif (this.x != other.x) {\r\n\t\t\treturn this.x - other.x\r\n\t\t} else if (this.y != other.y) {\r\n\t\t\treturn this.y - other.y\r\n\t\t} else {\r\n\t\t\treturn this.z - other.z\r\n\t\t}\r\n\t}\r\n\r\n\tcompareTo2(other: V3, eps: number = NLA_PRECISION): number {\r\n\t\tif (!eq2(this.x, other.x, eps)) {\r\n\t\t\treturn this.x - other.x\r\n\t\t} else if (!eq2(this.y, other.y, eps)) {\r\n\t\t\treturn this.y - other.y\r\n\t\t} else if (!eq2(this.z, other.z, eps)) {\r\n\t\t\treturn this.z - other.z\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\r\n\ttoAngles(): { theta: raddd; phi: raddd } {\r\n\t\treturn {\r\n\t\t\ttheta: Math.atan2(this.y, this.x),\r\n\t\t\tphi: Math.asin(this.z / this.length()),\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility method for creating V3s\r\n *\r\n * Example usage:\r\n *\r\n *     V(1, 2, 3)\r\n *     V([1, 2, 3])\r\n *     V({ x: 1, y: 2, z: 3 })\r\n *     V(1, 2) * assumes z=0\r\n *     V([1, 2]) // assumes z=0\r\n *\r\n */\r\nexport function V(x: number, y: number, z?: number): V3\r\nexport function V(arr: [number, number, number] | [number, number]): V3\r\nexport function V(obj: { x: number; y: number; z?: number }): V3\r\nexport function V(a: any, b?: any, c?: any): V3 {\r\n\tif (arguments.length == 3) {\r\n\t\treturn new V3(parseFloat(a), parseFloat(b), parseFloat(c))\r\n\t} else if (arguments.length == 2) {\r\n\t\treturn new V3(parseFloat(a), parseFloat(b), 0)\r\n\t} else if (arguments.length == 1) {\r\n\t\tif (typeof a == 'object') {\r\n\t\t\tif (a instanceof V3) {\r\n\t\t\t\t// immutable, so\r\n\t\t\t\treturn a\r\n\t\t\t} else if (a instanceof Array || a instanceof Float32Array || a instanceof Float64Array) {\r\n\t\t\t\tif (2 == a.length) {\r\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), 0)\r\n\t\t\t\t} else if (3 == a.length) {\r\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), parseFloat(a[2]))\r\n\t\t\t\t}\r\n\t\t\t} else if ('x' in a && 'y' in a) {\r\n\t\t\t\treturn new V3(parseFloat(a.x), parseFloat(a.y), 'z' in a ? parseFloat(a.z) : 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tthrow new Error('invalid arguments' + arguments)\r\n}\r\n","import { M4 } from './M4'\nimport { callsce, raddd } from './NLA'\nimport { V3 } from './V3'\n\nexport const P3YZ = { normal1: V3.X, w: 0 }\nexport const P3ZX = { normal1: V3.Y, w: 0 }\nexport const P3XY = { normal1: V3.Z, w: 0 }\n\nexport abstract class Transformable {\n\tmirror(plane: { normal1: V3; w: number }): this {\n\t\treturn this.transform(M4.mirror(plane))\n\t}\n\n\tmirroredX(): this {\n\t\treturn this.mirror(P3YZ)\n\t}\n\n\tmirrorY(): this {\n\t\treturn this.mirror(P3ZX)\n\t}\n\n\tmirrorZ(): this {\n\t\treturn this.mirror(P3XY)\n\t}\n\n\tproject(plane: { normal1: V3; w: number }): this {\n\t\treturn this.transform(M4.project(plane))\n\t}\n\n\tprojectXY(): this {\n\t\treturn this.transform(M4.project(P3XY))\n\t}\n\n\tprojectYZ(): this {\n\t\treturn this.transform(M4.project(P3YZ))\n\t}\n\n\tprojectZX(): this {\n\t\treturn this.transform(M4.project(P3ZX))\n\t}\n\n\ttranslate(x: number, y?: number, z?: number): this\n\ttranslate(v: V3): this\n\ttranslate(...args: any[]): this {\n\t\treturn this.transform(M4.translate.apply(undefined, args), callsce.call(undefined, '.translate', ...args))\n\t}\n\n\tscale(x: number, y?: number, z?: number): this\n\tscale(f: V3): this\n\tscale(...args: any[]): this {\n\t\treturn this.transform(M4.scale.apply(undefined, args), callsce.call(undefined, '.scale', ...args))\n\t}\n\n\trotateX(radians: raddd): this {\n\t\treturn this.transform(M4.rotateX(radians), `.rotateX(${radians})`)\n\t}\n\n\trotateY(radians: raddd): this {\n\t\treturn this.transform(M4.rotateY(radians), `.rotateY(${radians})`)\n\t}\n\n\trotateZ(radians: raddd): this {\n\t\treturn this.transform(M4.rotateZ(radians), `.rotateZ(${radians})`)\n\t}\n\n\trotate(rotationCenter: V3, rotationAxis: V3, radians: raddd): this {\n\t\treturn this.transform(\n\t\t\tM4.rotateLine(rotationCenter, rotationAxis, radians),\n\t\t\tcallsce('.rotate', rotationCenter, rotationAxis, radians),\n\t\t)\n\t}\n\n\trotateAB(from: V3, to: V3): this {\n\t\treturn this.transform(M4.rotateAB(from, to), callsce('.rotateAB', from, to))\n\t}\n\n\teulerZXZ(alpha: raddd, beta: raddd, gamma: raddd): this {\n\t\tthrow new Error()\n\t\t//return this.transform(M4.eulerZXZ(alpha, beta, gamma))\n\t}\n\n\tshearX(y: number, z: number): this {\n\t\t// prettier-ignore\n\t\treturn this.transform(new M4([\n\t\t\t1, y, z, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1]))\n\t}\n\n\tfoo(): this {\n\t\treturn this.transform(M4.FOO)\n\t}\n\n\tbar(): this {\n\t\treturn this.transform(M4.BAR)\n\t}\n\n\tabstract transform(m4: M4, desc?: string): this\n\n\tvisit<R>(visitor: { [name: string]: (this: Transformable) => R }): R\n\tvisit<R, A>(visitor: { [name: string]: (this: Transformable, a: A) => R }, a: A): R\n\tvisit<R, A, B>(visitor: { [name: string]: (this: Transformable, a: A, b: B) => R }, a: A, b: B): R\n\tvisit<R, A, B, C>(visitor: { [name: string]: (this: Transformable, a: A, b: B, c: C) => R }, a: A, b: B, c: C): R\n\tvisit<R, A, B, C, D>(\n\t\tvisitor: { [name: string]: (this: Transformable, a: A, b: B, c: C, d: D) => R },\n\t\ta: A,\n\t\tb: B,\n\t\tc: C,\n\t\td: D,\n\t): R\n\tvisit(visitor: { [name: string]: (this: Transformable, ...args: any[]) => any }, ...args: any[]) {\n\t\tlet proto = Object.getPrototypeOf(this)\n\t\t// walk up the prototype chain until we find a defined function in o\n\t\twhile (!visitor.hasOwnProperty(proto.constructor.name) && proto !== Transformable.prototype) {\n\t\t\tproto = Object.getPrototypeOf(proto)\n\t\t}\n\t\tif (visitor.hasOwnProperty(proto.constructor.name)) {\n\t\t\treturn visitor[proto.constructor.name].apply(this, args)\n\t\t} else {\n\t\t\tthrow new Error('No implementation for ' + this.constructor.name)\n\t\t}\n\t}\n}\n","import { JavaMap } from 'javasetmap.ts'\r\n\r\nimport { Matrix } from './Matrix'\r\nimport {\r\n\taddOwnProperties,\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertInts,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tcallsce,\r\n\tDEG,\r\n\teq,\r\n\teq0,\r\n\tint,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n\tsolveCubicReal2,\r\n} from './NLA'\r\nimport { Transformable } from './Transformable'\r\nimport { V3 } from './V3'\r\nimport { VV } from './Vector'\r\n\r\nconst { PI, abs } = Math\r\n\r\n// tslint:enable:member-ordering\r\nexport class M4 extends Matrix {\r\n\t/**\r\n\t * A simple (consists of integers), regular, non-orthogonal matrix, useful mainly for testing.\r\n\t * M4.BAR = M4.FOO.inverse()\r\n\t */\r\n\t// prettier-ignore\r\n\tstatic readonly FOO = new M4(\r\n\t\t0,   1,   1,    2,\r\n\t\t0.3, 0.4, 0.8, 13,\r\n\t\t2.1, 3.4, 5.5,  8.9,\r\n\t\t0,   0,   0,    1)\r\n\tstatic readonly BAR = M4.FOO.inversed()\r\n\tstatic readonly IDENTITY = M4.identity()\r\n\tstatic readonly YZX = M4.forSys(V3.Y, V3.Z, V3.X)\r\n\tstatic readonly ZXY = M4.forSys(V3.Z, V3.X, V3.Y)\r\n\t// prettier-ignore\r\n\tstatic IDENTITY3 = new M4(\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 0,\r\n\t)\r\n\tstatic readonly temp0 = new M4()\r\n\tstatic readonly temp1 = new M4()\r\n\tstatic readonly temp2 = new M4()\r\n\r\n\tstatic readonly NAMEMAP = new JavaMap<M4, string>()\r\n\t\t.set(M4.IDENTITY3, 'M4.IDENTITY3')\r\n\t\t.set(M4.FOO, 'M4.FOO')\r\n\t\t.set(M4.BAR, 'M4.BAR')\r\n\t\t.set(M4.IDENTITY, 'M4.IDENTITY')\r\n\t\t.set(M4.ZXY, 'M4.ZXY')\r\n\t\t.set(M4.YZX, 'M4.YZX')\r\n\treadonly m: Float64Array\r\n\r\n\t/**\r\n\t * Takes 16 arguments in row-major order, which can be passed individually, as a list, or even as\r\n\t * four lists, one for each row. If the arguments are omitted then the identity matrix is constructed instead.\r\n\t */\r\n\tconstructor(...var_args: (number | number[])[]) {\r\n\t\tlet m\r\n\t\tif (0 == arguments.length) {\r\n\t\t\tm = new Float64Array(16)\r\n\t\t} else {\r\n\t\t\tconst flattened = Array.prototype.concat.apply([], arguments)\r\n\t\t\tassert(flattened.length == 16, 'flattened.length == 16 ' + flattened.length)\r\n\t\t\tm = new Float64Array(flattened)\r\n\t\t}\r\n\t\tsuper(4, 4, m)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the matrix that when multiplied with `matrix` results in the\r\n\t * identity matrix. You can optionally pass an existing matrix in `result`\r\n\t * to avoid allocating a new matrix. This implementation is from the Mesa\r\n\t * OpenGL function `__gluInvertMatrixd()` found in `project.c`.\r\n\t */\r\n\tstatic inverse(matrix: M4, result: M4 = new M4()): M4 {\r\n\t\treturn matrix.inversed4(result) as M4\r\n\t}\r\n\r\n\t/**\r\n\t * Create new dim x dim matrix equal to an identity matrix with rows/colums i and k swapped. Note that i and k\r\n\t * are 0-indexed.\r\n\t */\r\n\tstatic permutation4(i: int, k: int, result = new M4()): Matrix {\r\n\t\tassertInts(i, k)\r\n\t\tassertf(() => 0 <= i && i < 4)\r\n\t\tassertf(() => 0 <= k && k < 4)\r\n\t\tconst m = result.m\r\n\t\tM4.identity(result)\r\n\t\tm[i * 4 + i] = 0\r\n\t\tm[k * 4 + k] = 0\r\n\t\tm[i * 4 + k] = 1\r\n\t\tm[k * 4 + i] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `matrix`, exchanging columns for rows. You can optionally pass an\r\n\t * existing matrix in `result` to avoid allocating a new matrix.\r\n\t */\r\n\tstatic transpose(matrix: M4, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, matrix)\r\n\t\tassertInst(M4, result)\r\n\t\tassert(matrix != result, 'matrix != result')\r\n\t\tconst m = matrix.m,\r\n\t\t\tr = result.m\r\n\t\tr[0] = m[0]\r\n\t\tr[1] = m[4]\r\n\t\tr[2] = m[8]\r\n\t\tr[3] = m[12]\r\n\t\tr[4] = m[1]\r\n\t\tr[5] = m[5]\r\n\t\tr[6] = m[9]\r\n\t\tr[7] = m[13]\r\n\t\tr[8] = m[2]\r\n\t\tr[9] = m[6]\r\n\t\tr[10] = m[10]\r\n\t\tr[11] = m[14]\r\n\t\tr[12] = m[3]\r\n\t\tr[13] = m[7]\r\n\t\tr[14] = m[11]\r\n\t\tr[15] = m[15]\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the concatenation of the transforms for `left` and `right`.\r\n\t */\r\n\tstatic multiply(left: M4, right: M4, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, left, right)\r\n\t\tassertInst(M4, result)\r\n\t\tassert(left != result, 'left != result')\r\n\t\tassert(right != result, 'right != result')\r\n\t\tconst a = left.m,\r\n\t\t\tb = right.m,\r\n\t\t\tr = result.m\r\n\r\n\t\tr[0] = a[0] * b[0] + a[1] * b[4] + (a[2] * b[8] + a[3] * b[12])\r\n\t\tr[1] = a[0] * b[1] + a[1] * b[5] + (a[2] * b[9] + a[3] * b[13])\r\n\t\tr[2] = a[0] * b[2] + a[1] * b[6] + (a[2] * b[10] + a[3] * b[14])\r\n\t\tr[3] = a[0] * b[3] + a[1] * b[7] + (a[2] * b[11] + a[3] * b[15])\r\n\r\n\t\tr[4] = a[4] * b[0] + a[5] * b[4] + (a[6] * b[8] + a[7] * b[12])\r\n\t\tr[5] = a[4] * b[1] + a[5] * b[5] + (a[6] * b[9] + a[7] * b[13])\r\n\t\tr[6] = a[4] * b[2] + a[5] * b[6] + (a[6] * b[10] + a[7] * b[14])\r\n\t\tr[7] = a[4] * b[3] + a[5] * b[7] + (a[6] * b[11] + a[7] * b[15])\r\n\r\n\t\tr[8] = a[8] * b[0] + a[9] * b[4] + (a[10] * b[8] + a[11] * b[12])\r\n\t\tr[9] = a[8] * b[1] + a[9] * b[5] + (a[10] * b[9] + a[11] * b[13])\r\n\t\tr[10] = a[8] * b[2] + a[9] * b[6] + (a[10] * b[10] + a[11] * b[14])\r\n\t\tr[11] = a[8] * b[3] + a[9] * b[7] + (a[10] * b[11] + a[11] * b[15])\r\n\r\n\t\tr[12] = a[12] * b[0] + a[13] * b[4] + (a[14] * b[8] + a[15] * b[12])\r\n\t\tr[13] = a[12] * b[1] + a[13] * b[5] + (a[14] * b[9] + a[15] * b[13])\r\n\t\tr[14] = a[12] * b[2] + a[13] * b[6] + (a[14] * b[10] + a[15] * b[14])\r\n\t\tr[15] = a[12] * b[3] + a[13] * b[7] + (a[14] * b[11] + a[15] * b[15])\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic product(...m4s: M4[]): M4\r\n\tstatic product(m4s: M4[], result?: M4): M4\r\n\tstatic product(...args: any[]): M4 {\r\n\t\tconst [m4s, result]: [M4[], M4] = Array.isArray(args[0]) ? [args[0], args[1]] : [args, new M4()]\r\n\t\tif (0 == m4s.length) return M4.identity(result)\r\n\t\tif (1 == m4s.length) return M4.copy(m4s[0], result)\r\n\t\tif (2 == m4s.length) return M4.multiply(m4s[0], m4s[1], result)\r\n\t\tlet a = M4.temp0,\r\n\t\t\tb = M4.temp1\r\n\t\tM4.multiply(m4s[0], m4s[1], a)\r\n\t\tfor (let i = 2; i < m4s.length - 1; i++) {\r\n\t\t\tM4.multiply(a, m4s[i], b)\r\n\t\t\t;[a, b] = [b, a]\r\n\t\t}\r\n\t\treturn M4.multiply(a, m4s.last, result)\r\n\t}\r\n\r\n\tstatic forSys(e0: V3, e1: V3, e2: V3 = e0.cross(e1), origin: V3 = V3.O): M4 {\r\n\t\tassertVectors(e0, e1, e2, origin)\r\n\t\t// prettier-ignore\r\n\t\treturn new M4(\r\n\t\t\te0.x, e1.x, e2.x, origin.x,\r\n\t\t\te0.y, e1.y, e2.y, origin.y,\r\n\t\t\te0.z, e1.z, e2.z, origin.z,\r\n\t\t\t0, 0, 0, 1)\r\n\t}\r\n\r\n\tstatic forRows(n0: V3, n1: V3, n2: V3, n3: V3 = V3.O): M4 {\r\n\t\tassertVectors(n0, n1, n2, n3)\r\n\t\t// prettier-ignore\r\n\t\treturn new M4(\r\n\t\t\tn0.x, n0.y, n0.z, 0,\r\n\t\t\tn1.x, n1.y, n1.z, 0,\r\n\t\t\tn2.x, n2.y, n2.z, 0,\r\n\t\t\tn3.x, n3.y, n3.z, 1)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an identity matrix. You can optionally pass an existing matrix in `result` to avoid allocating a new\r\n\t * matrix. This emulates the OpenGL function `glLoadIdentity()`\r\n\t *\r\n\t * Unless initializing a matrix to be modified, use M4.IDENTITY\r\n\t */\r\n\tstatic identity(result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tm[0] = m[5] = m[10] = m[15] = 1\r\n\t\tm[1] = m[2] = m[3] = m[4] = m[6] = m[7] = m[8] = m[9] = m[11] = m[12] = m[13] = m[14] = 0\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new M4 initialized by a user defined callback function\r\n\t *\r\n\t * @param f signature: (elRow, elCol, elIndex) =>\r\n\t *     el, where elIndex is the row-major index, i.e. eLindex == elRow * 4 + elCol\r\n\t * @param result\r\n\t */\r\n\tstatic fromFunction4(f: (elRow: number, elCol: number, elIndex: number) => number, result: M4 = new M4()): M4 {\r\n\t\tassert(typeof f == 'function')\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tlet i = 16\r\n\t\twhile (i--) {\r\n\t\t\tm[i] = f(Math.floor(i / 4), i % 4, i)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a perspective transform matrix, which makes far away objects appear smaller than nearby objects. The\r\n\t * `aspect` argument should be the width divided by the height of your viewport and `fov` is the top-to-bottom angle\r\n\t * of the field of view in degrees. You can optionally pass an existing matrix in `result` to avoid allocating a new\r\n\t * matrix. This emulates the OpenGL function `gluPerspective()`.\r\n\t * {@see perspectiveRad}\r\n\t * perspectiveRad\r\n\t * @param fovDegrees in degrees\r\n\t * @param aspect aspect ratio = width/height of viewport\r\n\t */\r\n\tstatic perspective(fovDegrees: number, aspect: number, near: number, far: number, result: M4 = new M4()): M4 {\r\n\t\treturn M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, result)\r\n\t}\r\n\r\n\tstatic perspectiveRad(fov: raddd, aspect: number, near: number, far: number, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(fov, aspect, near, far)\r\n\t\tconst y = Math.tan(fov / 2) * near\r\n\t\tconst x = y * aspect\r\n\t\treturn M4.frustum(-x, x, -y, y, near, far, result)\r\n\t}\r\n\r\n\tstatic perspectivePlane(vanishingPlane: { normal1: V3; w: number }, result: M4 = new M4()) {\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tm[0] = 1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 1\r\n\t\tm[6] = 0\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = 1\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = vanishingPlane.normal1.x\r\n\t\tm[13] = vanishingPlane.normal1.y\r\n\t\tm[14] = vanishingPlane.normal1.z\r\n\t\tm[15] = -vanishingPlane.w\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t// the OpenGL function `glFrustum()`.\r\n\tstatic frustum(\r\n\t\tleft: number,\r\n\t\tright: number,\r\n\t\tbottom: number,\r\n\t\ttop: number,\r\n\t\tnear: number,\r\n\t\tfar: number,\r\n\t\tresult: M4 = new M4(),\r\n\t): M4 {\r\n\t\tassertNumbers(left, right, bottom, top, near, far)\r\n\t\tassert(0 < near, '0 < near')\r\n\t\tassert(near < far, 'near < far')\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = (2 * near) / (right - left)\r\n\t\tm[1] = 0\r\n\t\tm[2] = (right + left) / (right - left)\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = (2 * near) / (top - bottom)\r\n\t\tm[6] = (top + bottom) / (top - bottom)\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -(far + near) / (far - near)\r\n\t\tm[11] = (-2 * far * near) / (far - near)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = -1\r\n\t\tm[15] = 0\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 representing the a projection through/towards a point onto a plane.\r\n\t */\r\n\tstatic projectPlanePoint(p: V3, plane: { normal1: V3; w: number }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(p, plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tconst n = plane.normal1,\r\n\t\t\tw = plane.w\r\n\t\tconst np = n.dot(p)\r\n\r\n\t\tm[0] = p.x * n.x + w - np\r\n\t\tm[1] = p.x * n.y\r\n\t\tm[2] = p.x * n.z\r\n\t\tm[3] = -w * p.x\r\n\r\n\t\tm[4] = p.y * n.x\r\n\t\tm[5] = p.y * n.y + w - np\r\n\t\tm[6] = p.y * n.z\r\n\t\tm[7] = -w * p.y\r\n\r\n\t\tm[8] = p.z * n.x\r\n\t\tm[9] = p.z * n.y\r\n\t\tm[10] = p.z * n.z + w - np\r\n\t\tm[11] = -w * p.z\r\n\r\n\t\tm[12] = n.x\r\n\t\tm[13] = n.y\r\n\t\tm[14] = n.z\r\n\t\tm[15] = -np\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Orthographic/orthogonal projection. Transforms the cuboid with the dimensions X: [left right] Y: [bottom, top]\r\n\t * Z: [near far] to the cuboid X: [-1, 1] Y [-1, 1] Z [-1, 1]\r\n\t */\r\n\tstatic ortho(\r\n\t\tleft: number,\r\n\t\tright: number,\r\n\t\tbottom: number,\r\n\t\ttop: number,\r\n\t\tnear: number,\r\n\t\tfar: number,\r\n\t\tresult: M4 = new M4(),\r\n\t): M4 {\r\n\t\tassertNumbers(left, right, bottom, top, near, far)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 2 / (right - left)\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = -(right + left) / (right - left)\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 2 / (top - bottom)\r\n\t\tm[6] = 0\r\n\t\tm[7] = -(top + bottom) / (top - bottom)\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -2 / (far - near)\r\n\t\tm[11] = -(far + near) / (far - near)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * This emulates the OpenGL function `glScale()`. You can optionally pass an existing matrix in `result` to avoid\r\n\t * allocating a new matrix.\r\n\t */\r\n\tstatic scale(x: number, y: number, z?: number, result?: M4): M4\r\n\r\n\tstatic scale(scale: number, result?: M4): M4\r\n\r\n\tstatic scale(v: V3, result?: M4): M4\r\n\r\n\tstatic scale(...args: any[]): M4 {\r\n\t\tlet x: number, y: number, z: number, result: M4\r\n\t\tif (args[0] instanceof V3) {\r\n\t\t\tassert(args.length <= 2)\r\n\t\t\t;({ x, y, z } = args[0])\r\n\t\t\tresult = args[1]\r\n\t\t} else if ('number' != typeof args[1]) {\r\n\t\t\tx = y = z = args[0]\r\n\t\t\tresult = args[1]\r\n\t\t} else {\r\n\t\t\tassert(args.length <= 4)\r\n\t\t\tx = args[0]\r\n\t\t\ty = args[1]\r\n\t\t\tz = undefined != args[2] ? args[2] : 1\r\n\t\t\tresult = args[3]\r\n\t\t}\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(x, y, z)\r\n\r\n\t\tconst m = result.m\r\n\t\tm[0] = x\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = y\r\n\t\tm[6] = 0\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = z\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * This emulates the OpenGL function `glTranslate()`. You can optionally pass\r\n\t * an existing matrix in `result` to avoid allocating a new matrix.\r\n\t */\r\n\tstatic translate(x: number, y?: number, z?: number, result?: M4): M4\r\n\r\n\tstatic translate(v: V3, result?: M4): M4\r\n\r\n\tstatic translate(...args: any[]): M4 {\r\n\t\tlet x, y, z, result\r\n\t\tif (args[0] instanceof V3) {\r\n\t\t\tassert(args.length <= 2)\r\n\t\t\t;({ x, y, z } = args[0])\r\n\t\t\tresult = args[1]\r\n\t\t} else {\r\n\t\t\tassert(args.length <= 4)\r\n\t\t\tx = args[0]\r\n\t\t\ty = undefined != args[1] ? args[1] : 0\r\n\t\t\tz = undefined != args[2] ? args[2] : 0\r\n\t\t\tresult = args[3]\r\n\t\t}\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(x, y, z)\r\n\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = x\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 1\r\n\t\tm[6] = 0\r\n\t\tm[7] = y\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = 1\r\n\t\tm[11] = z\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix that rotates by `a` degrees around the vector (x, y, z). You can optionally pass an existing\r\n\t * matrix in `result` to avoid allocating a new matrix. This emulates the OpenGL function `glRotate()`.\r\n\t */\r\n\t//static rotation(radians: raddd, x: number, y: number, z: number, result?: M4): M4\r\n\tstatic rotate(radians: raddd, v: { x: number; y: number; z: number }, result?: M4): M4 {\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tlet { x, y, z } = v\r\n\t\tassert(!new V3(x, y, z).likeO(), '!V(x, y, z).likeO()')\r\n\t\tconst m = result.m\r\n\r\n\t\tconst d = Math.sqrt(x * x + y * y + z * z)\r\n\t\tx /= d\r\n\t\ty /= d\r\n\t\tz /= d\r\n\t\tconst cos = Math.cos(radians),\r\n\t\t\tsin = Math.sin(radians),\r\n\t\t\tt = 1 - cos\r\n\r\n\t\tm[0] = x * x * t + cos\r\n\t\tm[1] = x * y * t - z * sin\r\n\t\tm[2] = x * z * t + y * sin\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = y * x * t + z * sin\r\n\t\tm[5] = y * y * t + cos\r\n\t\tm[6] = y * z * t - x * sin\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = z * x * t - y * sin\r\n\t\tm[9] = z * y * t + x * sin\r\n\t\tm[10] = z * z * t + cos\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix that puts the camera at the eye point `ex, ey, ez` looking\r\n\t * toward the center point `cx, cy, cz` with an up direction of `ux, uy, uz`.\r\n\t * You can optionally pass an existing matrix in `result` to avoid allocating\r\n\t * a new matrix. This emulates the OpenGL function `gluLookAt()`.\r\n\t */\r\n\tstatic lookAt(eye: V3, focus: V3, up: V3, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(eye, focus, up)\r\n\t\tassertInst(M4, result)\r\n\r\n\t\tconst m = result.m\r\n\r\n\t\tconst f = eye.minus(focus).unit()\r\n\t\tconst s = up.cross(f).unit()\r\n\t\tconst t = f.cross(s).unit()\r\n\r\n\t\tm[0] = s.x\r\n\t\tm[1] = s.y\r\n\t\tm[2] = s.z\r\n\t\tm[3] = -s.dot(eye)\r\n\r\n\t\tm[4] = t.x\r\n\t\tm[5] = t.y\r\n\t\tm[6] = t.z\r\n\t\tm[7] = -t.dot(eye)\r\n\r\n\t\tm[8] = f.x\r\n\t\tm[9] = f.y\r\n\t\tm[10] = f.z\r\n\t\tm[11] = -f.dot(eye)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the X axis\r\n\t */\r\n\tstatic rotateX(radians: raddd): M4 {\r\n\t\tassertNumbers(radians)\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the Y axis\r\n\t */\r\n\tstatic rotateY(radians: raddd): M4 {\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the Z axis\r\n\t */\r\n\tstatic rotateZ(radians: raddd): M4 {\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * New rotation matrix such that result.transformVector(a).isParallelTo(b) through smallest rotation.\r\n\t * Performs no scaling.\r\n\t */\r\n\tstatic rotateAB(a: V3, b: V3, result: M4 = new M4()): M4 {\r\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\r\n\t\tassertVectors(a, b)\r\n\t\tassertInst(M4, result)\r\n\t\tconst rotationAxis = a.cross(b),\r\n\t\t\trotationAxisLength = rotationAxis.length()\r\n\t\tif (eq0(rotationAxisLength)) {\r\n\t\t\treturn M4.identity(result)\r\n\t\t}\r\n\t\tconst radians = Math.atan2(rotationAxisLength, a.dot(b))\r\n\t\treturn M4.rotateLine(V3.O, rotationAxis, radians, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Matrix for rotation about arbitrary line defined by an anchor point and direction.\r\n\t * rotationAxis does not need to be unit\r\n\t */\r\n\tstatic rotateLine(rotationAnchor: V3, rotationAxis: V3, radians: raddd, result: M4 = new M4()): M4 {\r\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\r\n\t\tassertVectors(rotationAnchor, rotationAxis)\r\n\t\tassertNumbers(radians)\r\n\t\tassertInst(M4, result)\r\n\t\trotationAxis = rotationAxis.unit()\r\n\r\n\t\tconst ax = rotationAnchor.x,\r\n\t\t\tay = rotationAnchor.y,\r\n\t\t\taz = rotationAnchor.z,\r\n\t\t\tdx = rotationAxis.x,\r\n\t\t\tdy = rotationAxis.y,\r\n\t\t\tdz = rotationAxis.z\r\n\t\tconst m = result.m,\r\n\t\t\tcos = Math.cos(radians),\r\n\t\t\tsin = Math.sin(radians)\r\n\r\n\t\tm[0] = dx * dx + (dy * dy + dz * dz) * cos\r\n\t\tm[1] = dx * dy * (1 - cos) - dz * sin\r\n\t\tm[2] = dx * dz * (1 - cos) + dy * sin\r\n\t\tm[3] = (ax * (dy * dy + dz * dz) - dx * (ay * dy + az * dz)) * (1 - cos) + (ay * dz - az * dy) * sin\r\n\r\n\t\tm[4] = dx * dy * (1 - cos) + dz * sin\r\n\t\tm[5] = dy * dy + (dx * dx + dz * dz) * cos\r\n\t\tm[6] = dy * dz * (1 - cos) - dx * sin\r\n\t\tm[7] = (ay * (dx * dx + dz * dz) - dy * (ax * dx + az * dz)) * (1 - cos) + (az * dx - ax * dz) * sin\r\n\r\n\t\tm[8] = dx * dz * (1 - cos) - dy * sin\r\n\t\tm[9] = dy * dz * (1 - cos) + dx * sin\r\n\t\tm[10] = dz * dz + (dx * dx + dy * dy) * cos\r\n\t\tm[11] = (az * (dx * dx + dy * dy) - dz * (ax * dx + ay * dy)) * (1 - cos) + (ax * dy - ay * dx) * sin\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Create an affine matrix for mirroring into an arbitrary plane:\r\n\t */\r\n\tstatic mirror(plane: { normal1: V3; w: number }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst [nx, ny, nz] = plane.normal1\r\n\t\tconst w = plane.w\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 1.0 - 2.0 * nx * nx\r\n\t\tm[1] = -2.0 * ny * nx\r\n\t\tm[2] = -2.0 * nz * nx\r\n\t\tm[3] = 2.0 * nx * w\r\n\r\n\t\tm[4] = -2.0 * nx * ny\r\n\t\tm[5] = 1.0 - 2.0 * ny * ny\r\n\t\tm[6] = -2.0 * nz * ny\r\n\t\tm[7] = 2.0 * ny * w\r\n\r\n\t\tm[8] = -2.0 * nx * nz\r\n\t\tm[9] = -2.0 * ny * nz\r\n\t\tm[10] = 1.0 - 2.0 * nz * nz\r\n\t\tm[11] = 2.0 * nz * w\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param plane\r\n\t * @param dir Projection direction. Optional, if not specified plane normal1 will be used.\r\n\t * @param result {@see M4}\r\n\t */\r\n\tstatic project(plane: { normal1: V3; w: number }, dir: V3 = plane.normal1, result: M4 = new M4()): M4 {\r\n\t\t// TODO: doc\r\n\r\n\t\t// plane.normal1 DOT (p + lambda * dir) = w (1)\r\n\t\t// extract lambda:\r\n\t\t// plane.normal1 DOT p + lambda * plane.normal1 DOT dir = w\r\n\t\t// lambda = (w - plane.normal1 DOT p) / plane.normal1 DOT dir\r\n\t\t// result = p + lambda * dir\r\n\t\t// result = p + dir * (w - plane.normal1 DOT p) / plane.normal1 DOT dir\r\n\t\t// result =  w * dir / (plane.normal1 DOT dir) + p - plane.normal1 DOT p * dir / (plane.normal1 DOT dir) *\r\n\r\n\t\t//  a + d * (w - n . a) / (nd)\r\n\t\t//  a + dw - d * na\r\n\t\tassertVectors(dir, plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst w = plane.w\r\n\t\tconst m = result.m\r\n\t\tconst nd = plane.normal1.dot(dir)\r\n\t\tconst { x: nx, y: ny, z: nz } = plane.normal1\r\n\t\tconst { x: dx, y: dy, z: dz } = dir.div(nd)\r\n\t\t/*\r\n\t\t rejectedFrom: return this.minus(b.times(this.dot(b) / b.dot(b)))\r\n\t\t return M4.forSys(\r\n\t\t V3.X.rejectedFrom(plane.normal1),\r\n\t\t V3.Y.rejectedFrom(plane.normal1),\r\n\t\t V3.Z.rejectedFrom(plane.normal1),\r\n\t\t plane.anchor,\r\n\t\t result\r\n\t\t )\r\n\t\t */\r\n\r\n\t\tm[0] = 1.0 - nx * dx\r\n\t\tm[1] = -ny * dx\r\n\t\tm[2] = -nz * dx\r\n\t\tm[3] = dx * w\r\n\r\n\t\tm[4] = -nx * dy\r\n\t\tm[5] = 1.0 - ny * dy\r\n\t\tm[6] = -nz * dy\r\n\t\tm[7] = dy * w\r\n\r\n\t\tm[8] = -nx * dz\r\n\t\tm[9] = -ny * dz\r\n\t\tm[10] = 1.0 - nz * dz\r\n\t\tm[11] = dz * w\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic lineProjection(line: { anchor: V3; dir1: V3 }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(line.anchor, line.dir1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst ax = line.anchor.x,\r\n\t\t\tay = line.anchor.y,\r\n\t\t\taz = line.anchor.z\r\n\t\tconst dx = line.dir1.x,\r\n\t\t\tdy = line.dir1.y,\r\n\t\t\tdz = line.dir1.z\r\n\t\tconst m = result.m\r\n\r\n\t\t/*\r\n\t\t projectedOn: return b.times(this.dot(b) / b.dot(b))\r\n\t\t */\r\n\r\n\t\tm[0] = dx * dx\r\n\t\tm[1] = dx * dy\r\n\t\tm[2] = dx * dz\r\n\t\tm[3] = ax\r\n\r\n\t\tm[4] = dy * dx\r\n\t\tm[5] = dy * dy\r\n\t\tm[6] = dy * dz\r\n\t\tm[7] = ay\r\n\r\n\t\tm[8] = dz * dx\r\n\t\tm[9] = dz * dy\r\n\t\tm[10] = dz * dz\r\n\t\tm[11] = az\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic pointInversion(p: V3, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(p)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = -1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 2 * p.x\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = -1\r\n\t\tm[6] = 0\r\n\t\tm[7] = 2 * p.y\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -1\r\n\t\tm[11] = 2 * p.z\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\tprotected static new(width: int, height: int, m: Float64Array) {\r\n\t\tassert(4 == width && 4 == height)\r\n\t\treturn new M4(...m)\r\n\t}\r\n\r\n\tget X(): V3 {\r\n\t\treturn this.transformVector(V3.X)\r\n\t}\r\n\r\n\tget Y(): V3 {\r\n\t\treturn this.transformVector(V3.Y)\r\n\t}\r\n\r\n\tget Z(): V3 {\r\n\t\treturn this.transformVector(V3.Z)\r\n\t}\r\n\r\n\tget O(): V3 {\r\n\t\treturn this.getTranslation()\r\n\t}\r\n\r\n\tisMirror(precision = NLA_PRECISION) {\r\n\t\tconst m = this.m\r\n\t\tconst nx = Math.sqrt((1 - m[0]) / 2)\r\n\t\tconst ny = Math.sqrt((1 - m[5]) / 2)\r\n\t\tconst nz = Math.sqrt((1 - m[10]) / 2)\r\n\r\n\t\treturn (\r\n\t\t\teq(m[1], -2.0 * ny * nx, precision) &&\r\n\t\t\teq(m[2], -2.0 * nz * nx, precision) &&\r\n\t\t\teq(m[4], -2.0 * nx * ny, precision) &&\r\n\t\t\teq(m[6], -2.0 * nz * ny, precision) &&\r\n\t\t\teq(m[8], -2.0 * nx * nz, precision) &&\r\n\t\t\teq(m[9], -2.0 * ny * nz, precision) &&\r\n\t\t\teq(m[12], 0, precision) &&\r\n\t\t\teq(m[13], 0, precision) &&\r\n\t\t\teq(m[14], 0, precision) &&\r\n\t\t\teq(m[15], 1, precision) &&\r\n\t\t\teq(m[3] * ny, m[7] * nx, precision) &&\r\n\t\t\teq(m[7] * nz, m[11] * ny, precision) &&\r\n\t\t\teq(m[11] * nx, m[3] * nz, precision)\r\n\t\t)\r\n\t}\r\n\r\n\t// ### GL.Matrix.frustum(left, right, bottom, top, near, far[, result])\r\n\t//\r\n\t// Sets up a viewing frustum, which is shaped like a truncated pyramid with the\r\n\t// camera where the point of the pyramid would be. You can optionally pass an\r\n\t// existing matrix in `result` to avoid allocating a new matrix. This emulates\r\n\r\n\t/**\r\n\t * Returns a new M4 which is equal to the inverse of this.\r\n\t */\r\n\tinversed(result?: M4): M4 {\r\n\t\treturn M4.inverse(this, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Matrix trace is defined as the sum of the elements of the main diagonal.\r\n\t */\r\n\ttrace(): number {\r\n\t\treturn this.m[0] + this.m[5] + this.m[10] + this.m[15]\r\n\t}\r\n\r\n\tas3x3(result?: M4): M4 {\r\n\t\t result = M4.copy<M4>(this, result)\r\n\t\t\tconst m = result.m\r\n\r\n\t\tm[3] = m[7] = m[11] = m[12] = m[13] = m[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\ttransform(m4: M4): this {\r\n\t\treturn m4.times(this) as this\r\n\t}\r\n\r\n\trealEigenValues3(): number[] {\r\n\t\tconst m = this.m\r\n\t\tassert(0 == m[12] && 0 == m[13] && 0 == m[14])\r\n\t\t// determinant of (this - λI):\r\n\t\t// | a-λ  b   c  |\r\n\t\t// |  d  e-λ  f  | = -λ^3 + λ^2 (a+e+i) + λ (-a e-a i+b d+c g-e i+f h) + a(ei - fh) - b(di - fg) + c(dh - eg)\r\n\t\t// |  g   h  i-λ |\r\n\r\n\t\tconst [a, b, c, , d, e, f, , g, h, i] = m\r\n\t\t// det(this - λI) = -λ^3 +λ^2 (a+e+i) + λ (-a e-a i-b d+c g-e i+f h)+ (a e i-a f h-b d i+b f g+c d h-c e g)\r\n\t\tconst s = -1\r\n\t\tconst t = a + e + i // equivalent to trace of matrix\r\n\t\tconst u = -a * e - a * i + b * d + c * g - e * i + f * h // equivalent to 1/2 (trace(this²) - trace²(A))\r\n\t\tconst w = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g) // equivalent to matrix determinant\r\n\r\n\t\tconsole.log(s, t, u, w)\r\n\t\treturn solveCubicReal2(s, t, u, w)\r\n\t}\r\n\r\n\trealEigenVectors3(): V3[] {\r\n\t\tconst eigenValues = this.realEigenValues3()\r\n\t\tconst this3x3 = this.times(M4.IDENTITY3)\r\n\t\tconsole.log(this.toString())\r\n\t\tconsole.log(this3x3.toString())\r\n\t\tlet mats = eigenValues.map(ev => M4.IDENTITY3.scale(-ev).plus(this3x3))\r\n\t\tconsole.log(mats.map(m => m.determinant3()))\r\n\t\tconsole.log(mats.map(m => '' + m.toString(v => '' + v)).join('\\n\\n'))\r\n\t\tconsole.log(mats.map(m => '' + m.gauss().U.toString(v => '' + v)).join('\\n\\n'))\r\n\t\tconsole.log('mats.map(m=>m.rank())', mats.map(m => m.rank()))\r\n\t\tif (1 == eigenValues.length) {\r\n\t\t\tconsole.log(mats[0].toString())\r\n\t\t\tassertf(() => 0 == mats[0].rank())\r\n\t\t\t// col vectors\r\n\t\t\treturn arrayFromFunction(3, col => new V3(this.m[col], this.m[4 + col], this.m[8 + col]))\r\n\t\t}\r\n\t\tif (2 == eigenValues.length) {\r\n\t\t\t// one matrix should have rank 1, the other rank 2\r\n\t\t\tif (1 == mats[0].rank()) {\r\n\t\t\t\tmats = [mats[1], mats[0]]\r\n\t\t\t}\r\n\t\t\tassertf(() => 2 == mats[0].rank())\r\n\t\t\tassertf(() => 1 == mats[1].rank())\r\n\r\n\t\t\t// mat[0] has rank 2, mat[1] has rank 1\r\n\t\t\tconst gauss0 = mats[0].gauss().U\r\n\t\t\tconst eigenVector0 = gauss0\r\n\t\t\t\t.row(0)\r\n\t\t\t\t.cross(gauss0.row(1))\r\n\t\t\t\t.V3()\r\n\t\t\t\t.unit()\r\n\r\n\t\t\tconst planeNormal = mats[1]\r\n\t\t\t\t.gauss()\r\n\t\t\t\t.U.row(0)\r\n\t\t\t\t.V3()\r\n\t\t\tconst eigenVector1 = planeNormal.getPerpendicular().unit()\r\n\t\t\tconst eigenVector2 = eigenVector0.cross(eigenVector1).rejectedFrom(planeNormal)\r\n\r\n\t\t\treturn [eigenVector0, eigenVector1, eigenVector2]\r\n\t\t}\r\n\t\tif (3 == eigenValues.length) {\r\n\t\t\tmats.forEach((mat, i) => assert(2 == mat.rank(), i + ': ' + mat.rank()))\r\n\t\t\t// the (A - lambda I) matrices map to a plane. This means, that there is an entire line in R³ which maps to\r\n\t\t\t// the point V3.O\r\n\t\t\treturn mats.map(mat => {\r\n\t\t\t\tconst gauss = mat.gauss().U\r\n\t\t\t\treturn gauss\r\n\t\t\t\t\t.row(0)\r\n\t\t\t\t\t.cross(gauss.row(1))\r\n\t\t\t\t\t.V3()\r\n\t\t\t\t\t.unit()\r\n\t\t\t})\r\n\t\t}\r\n\t\tthrow new Error('there cannot be more than 3 eigen values')\r\n\t}\r\n\r\n\t/**\r\n\t * U * SIGMA * VSTAR = this\r\n\t * U and VSTAR are orthogonal matrices\r\n\t * SIGMA is a diagonal matrix\r\n\t */\r\n\tsvd3(): { U: M4; SIGMA: M4; VSTAR: M4 } {\r\n\t\tfunction matrixForCS(i: int, k: int, c: number, s: number) {\r\n\t\t\tconst m = M4.identity()\r\n\t\t\tm.setEl(i, i, c)\r\n\t\t\tm.setEl(k, k, c)\r\n\t\t\tm.setEl(i, k, s)\r\n\t\t\tm.setEl(k, i, -s)\r\n\t\t\treturn m\r\n\t\t}\r\n\r\n\t\tconst A = this.as3x3()\r\n\t\tlet S = A.transposed().times(A),\r\n\t\t\tV = M4.identity()\r\n\t\tconsole.log(S.str)\r\n\t\tfor (let it = 0; it < 16; it++) {\r\n\t\t\tconsole.log('blahg\\n', V.times(S).times(V.transposed()).str)\r\n\t\t\tassert(\r\n\t\t\t\tV.times(S)\r\n\t\t\t\t\t.times(V.transposed())\r\n\t\t\t\t\t.likeM4(A.transposed().times(A)),\r\n\t\t\t\tV.times(S).times(V.transposed()).str,\r\n\t\t\t\tA.transposed().times(A).str,\r\n\t\t\t)\r\n\t\t\tlet maxOffDiagonal = 0,\r\n\t\t\t\tmaxOffDiagonalIndex = 1,\r\n\t\t\t\tj = 10\r\n\t\t\twhile (j--) {\r\n\t\t\t\tconst val = Math.abs(S.m[j])\r\n\t\t\t\tif (j % 4 != Math.floor(j / 4) && val > maxOffDiagonal) {\r\n\t\t\t\t\tmaxOffDiagonal = val\r\n\t\t\t\t\tmaxOffDiagonalIndex = j\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst i = Math.floor(maxOffDiagonalIndex / 4),\r\n\t\t\t\tk = maxOffDiagonalIndex % 4\r\n\t\t\tconst a_ii = S.m[5 * i],\r\n\t\t\t\ta_kk = S.m[5 * k],\r\n\t\t\t\ta_ik = S.m[maxOffDiagonalIndex]\r\n\t\t\tconst phi = a_ii === a_kk ? PI / 4 : Math.atan((2 * a_ik) / (a_ii - a_kk)) / 2\r\n\t\t\tconsole.log(maxOffDiagonalIndex, i, k, 'phi', phi)\r\n\t\t\tconst cos = Math.cos(phi),\r\n\t\t\t\tsin = Math.sin(phi)\r\n\t\t\tconst givensRotation = matrixForCS(i, k, cos, -sin)\r\n\t\t\tassert(\r\n\t\t\t\tgivensRotation\r\n\t\t\t\t\t.transposed()\r\n\t\t\t\t\t.times(givensRotation)\r\n\t\t\t\t\t.likeIdentity(),\r\n\t\t\t)\r\n\t\t\tconsole.log(givensRotation.str)\r\n\t\t\tV = V.times(givensRotation)\r\n\t\t\tS = M4.product(givensRotation.transposed(), S, givensRotation)\r\n\t\t\tconsole.log(S.str)\r\n\t\t}\r\n\r\n\t\tconst sigma = S.map((el, elIndex) => (elIndex % 5 == 0 ? Math.sqrt(el) : 0))\r\n\t\treturn {\r\n\t\t\tU: M4.product(A, V, sigma.map((el, elIndex) => (elIndex % 5 == 0 ? 1 / el : 0))),\r\n\t\t\tSIGMA: sigma,\r\n\t\t\tVSTAR: V.transposed(),\r\n\t\t}\r\n\t}\r\n\r\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): M4 {\r\n\t\treturn M4.fromFunction4((x, y, i) => fn(this.m[i], i, this.m))\r\n\t}\r\n\r\n\tlikeM4(m4: M4): boolean {\r\n\t\tassertInst(M4, m4)\r\n\t\treturn this.m.every((el, index) => eq(el, m4.m[index]))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 equal to the transpose of this.\r\n\t */\r\n\ttransposed(result?: M4): M4 {\r\n\t\treturn M4.transpose(this, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 which equal to (this * matrix) (in that order)\r\n\t */\r\n\ttimes(matrix: M4): M4 {\r\n\t\treturn M4.multiply(this, matrix)\r\n\t}\r\n\r\n\t/**\r\n\t * In a perspective projection, parallel lines meet in a vanishing point.\r\n\t *\r\n\t * Returns undefined if there is no vanishing point, either because this is not a perspective transform,\r\n\t * or because the passed dir is perpendicular to the projections direction.\r\n\t *\r\n\t * @param dir\r\n\t */\r\n\tvanishingPoint(dir: V3) {\r\n\t\tassertVectors(dir)\r\n\t\tconst m = this.m\r\n\t\tconst vx = dir.x,\r\n\t\t\tvy = dir.y,\r\n\t\t\tvz = dir.z\r\n\t\tconst w = vx * m[12] + vy * m[13] + vz * m[14]\r\n\t\tif (eq0(w)) return undefined\r\n\t\tconst x = vx * m[0] + vy * m[1] + vz * m[2]\r\n\t\tconst y = vx * m[4] + vy * m[5] + vz * m[6]\r\n\t\tconst z = vx * m[8] + vy * m[9] + vz * m[10]\r\n\t\treturn new V3(x / w, y / w, z / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the vector as a point with a w coordinate of 1. This means translations will have an effect, for\r\n\t * example.\r\n\t */\r\n\ttransformPoint(v: V3): V3 {\r\n\t\tassertVectors(v)\r\n\t\tconst m = this.m\r\n\t\tconst vx = v.x,\r\n\t\t\tvy = v.y,\r\n\t\t\tvz = v.z\r\n\t\tconst x = vx * m[0] + vy * m[1] + vz * m[2] + m[3]\r\n\t\tconst y = vx * m[4] + vy * m[5] + vz * m[6] + m[7]\r\n\t\tconst z = vx * m[8] + vy * m[9] + vz * m[10] + m[11]\r\n\t\tconst w = vx * m[12] + vy * m[13] + vz * m[14] + m[15]\r\n\t\t// scale such that fourth element becomes 1:\r\n\t\treturn new V3(x / w, y / w, z / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the vector as a vector with a w coordinate of 0. This means translations will have no effect, for\r\n\t * example. Will throw an exception if the calculated w component != 0. This occurs for example when attempting\r\n\t * to transform a vector with a perspective matrix.\r\n\t */\r\n\ttransformVector(v: V3, checkW = true): V3 {\r\n\t\tassertVectors(v)\r\n\t\tconst m = this.m\r\n\t\tconst w = v.x * m[12] + v.y * m[13] + v.z * m[14]\r\n\t\tcheckW && assert(eq0(w), () => 'w === 0 needs to be true for this to make sense (w =' + w + this.str)\r\n\t\treturn new V3(\r\n\t\t\tm[0] * v.x + m[1] * v.y + m[2] * v.z,\r\n\t\t\tm[4] * v.x + m[5] * v.y + m[6] * v.z,\r\n\t\t\tm[8] * v.x + m[9] * v.y + m[10] * v.z,\r\n\t\t)\r\n\t}\r\n\r\n\ttransformVector2(v: V3, anchor: V3): V3 {\r\n\t\t// v and anchor define a line(t) = anchor + t v\r\n\t\t// we can view the calculation of the transformed vector as the derivative of the transformed line at t = 0\r\n\t\t// d/dt (this * line(t)) (0)\r\n\t\tassertVectors(v, anchor)\r\n\t\tconst transformedAnchor = this.timesVector(VV(anchor.x, anchor.y, anchor.z, 1))\r\n\t\tconst transformedVector = this.timesVector(VV(v.x, v.y, v.z, 0))\r\n\t\treturn transformedVector\r\n\t\t\t.times(transformedAnchor.w)\r\n\t\t\t.minus(transformedAnchor.times(transformedVector.w))\r\n\t\t\t.div(transformedAnchor.w ** 2)\r\n\t\t\t.V3()\r\n\t}\r\n\r\n\ttransformedPoints(vs: ReadonlyArray<V3>): V3[] {\r\n\t\treturn vs.map(v => this.transformPoint(v))\r\n\t}\r\n\r\n\ttransformedVectors(vs: ReadonlyArray<V3>): V3[] {\r\n\t\treturn vs.map(v => this.transformVector(v))\r\n\t}\r\n\r\n\tnew() {\r\n\t\treturn new M4() as this\r\n\t}\r\n\r\n\tisRegular(): boolean {\r\n\t\treturn !eq0(this.determinant())\r\n\t}\r\n\r\n\tisAxisAligned(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn (\r\n\t\t\t1 >= +!eq0(m[0]) + +!eq0(m[1]) + +!eq0(m[2]) &&\r\n\t\t\t1 >= +!eq0(m[4]) + +!eq0(m[5]) + +!eq0(m[6]) &&\r\n\t\t\t1 >= +!eq0(m[8]) + +!eq0(m[9]) + +!eq0(m[10])\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is orthogonal iff M * M^T = I\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is orthogonal or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisOrthogonal(): boolean {\r\n\t\t// return this.transposed().times(this).likeM4(M4.IDENTITY)\r\n\t\tM4.transpose(this, M4.temp0)\r\n\t\tM4.multiply(this, M4.temp0, M4.temp1)\r\n\t\treturn M4.IDENTITY.likeM4(M4.temp1)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is symmetric iff M == M^T\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisSymmetric(): boolean {\r\n\t\tM4.transpose(this, M4.temp0)\r\n\t\treturn this.likeM4(M4.temp0)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is normal1 iff M * M^-T == M^T * M TODO: ^-T?\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisNormal(): boolean {\r\n\t\tM4.transpose(this, M4.temp0) // temp0 = this^-T\r\n\t\tM4.multiply(this, M4.temp0, M4.temp1) // temp1 = this * this^-T\r\n\t\tM4.multiply(M4.temp0, this, M4.temp2) // temp2 = this^-T * this\r\n\t\treturn M4.temp1.likeM4(M4.temp2)\r\n\t}\r\n\r\n\t/**\r\n\t * Determinant of matrix.\r\n\t *\r\n\t * Notes:\r\n\t *      For matrices A and B\r\n\t *      det(A * B) = det(A) * det(B)\r\n\t *      det(A^-1) = 1 / det(A)\r\n\t */\r\n\tdeterminant(): number {\r\n\t\t/*\r\n\t\t | a b c d |\r\n\t\t | e f g h |\r\n\t\t | i j k l |\r\n\t\t | m n o p |\r\n\t\t */\r\n\t\tconst $ = this.m,\r\n\t\t\ta = $[0],\r\n\t\t\tb = $[1],\r\n\t\t\tc = $[2],\r\n\t\t\td = $[3],\r\n\t\t\te = $[4],\r\n\t\t\tf = $[5],\r\n\t\t\tg = $[6],\r\n\t\t\th = $[7],\r\n\t\t\ti = $[8],\r\n\t\t\tj = $[9],\r\n\t\t\tk = $[10],\r\n\t\t\tl = $[11],\r\n\t\t\tm = $[12],\r\n\t\t\tn = $[13],\r\n\t\t\to = $[14],\r\n\t\t\tp = $[15],\r\n\t\t\tklop = k * p - l * o,\r\n\t\t\tjlnp = j * p - l * n,\r\n\t\t\tjkno = j * o - k * n,\r\n\t\t\tilmp = i * p - l * m,\r\n\t\t\tikmo = i * o - k * m,\r\n\t\t\tijmn = i * n - j * m\r\n\t\treturn (\r\n\t\t\ta * (f * klop - g * jlnp + h * jkno) -\r\n\t\t\tb * (e * klop - g * ilmp + h * ikmo) +\r\n\t\t\tc * (e * jlnp - f * ilmp + h * ijmn) -\r\n\t\t\td * (e * jkno - f * ikmo + g * ijmn)\r\n\t\t)\r\n\t}\r\n\r\n\tdeterminant3(): number {\r\n\t\tconst [a, b, c, , d, e, f, , g, h, i] = this.m\r\n\t\tconst det = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g)\r\n\t\treturn det\r\n\t}\r\n\r\n\t/**\r\n\t * determine whether this matrix is a mirroring transformation\r\n\t */\r\n\tisMirroring(): boolean {\r\n\t\t/*\r\n\t\t var u = V(this.m[0], this.m[4], this.m[8])\r\n\t\t var v = V(this.m[1], this.m[5], this.m[9])\r\n\t\t var w = V(this.m[2], this.m[6], this.m[10])\r\n\r\n\t\t // for a true orthogonal, non-mirrored base, u.cross(v) == w\r\n\t\t // If they have an opposite direction then we are mirroring\r\n\t\t var mirrorvalue = u.cross(v).dot(w)\r\n\t\t var ismirror = (mirrorvalue < 0)\r\n\t\t return ismirror\r\n\t\t */\r\n\r\n\t\treturn this.determinant() < 0 // TODO: also valid for 4x4?\r\n\t}\r\n\r\n\t/**\r\n\t * Get the translation part of this matrix, i.e. the result of this.transformPoint(V3.O)\r\n\t */\r\n\tgetTranslation(): V3 {\r\n\t\tconst m = this.m,\r\n\t\t\tw = m[15]\r\n\t\treturn new V3(m[3] / w, m[7] / w, m[11] / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns this matrix scaled so that the determinant is 1.\r\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\r\n\t * so we need to divide by the 4th root of the determinant\r\n\t */\r\n\tnormalized(): M4 {\r\n\t\tconst detAbs = abs(this.determinant())\r\n\t\treturn 1 == detAbs ? this : this.divScalar(detAbs ** 0.25)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns this matrix scaled so that the determinant is 1.\r\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\r\n\t * so we need to divide by the 4th root of the determinant\r\n\t */\r\n\tnormalized2(): M4 {\r\n\t\tconst div = this.m[15]\r\n\t\treturn 1 == div ? this : this.divScalar(div ** 0.25)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the matrix has the following form (within NLA_PRECISION):\r\n\t * a b c 0\r\n\t * c d e 0\r\n\t * f g h 0\r\n\t * 0 0 0 1\r\n\t */\r\n\tlike3x3(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn eq(1, m[15]) && eq0(m[12]) && eq0(m[13]) && eq0(m[14]) && eq0(m[3]) && eq0(m[7]) && eq0(m[11])\r\n\t}\r\n\r\n\tisNoProj(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn 0 == m[12] && 0 == m[13] && 0 == m[14] && 1 == m[15]\r\n\t}\r\n\r\n\tlikeIdentity(): boolean {\r\n\t\treturn this.m.every((val, i) => (((i / 4) | 0) == i % 4 ? eq(1, val) : eq0(val)))\r\n\t}\r\n\r\n\tisIdentity(): boolean {\r\n\t\treturn this.m.every((val, i) => (((i / 4) | 0) == i % 4 ? 1 == val : 0 == val))\r\n\t}\r\n\r\n\ttoString(f: (number: number) => string = v => v.toFixed(6).replace(/([0.])(?=0*$)/g, ' ')): string {\r\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\r\n\t\t// slice this.m to convert it to an Array (from TypeArray)\r\n\t\tconst rounded = Array.prototype.slice.call(this.m).map(f) as string[]\r\n\t\tconst colWidths = [0, 1, 2, 3].map(colIndex =>\r\n\t\t\trounded\r\n\t\t\t\t.sliceStep(colIndex, 0, 4)\r\n\t\t\t\t.map(x => x.length)\r\n\t\t\t\t.max(),\r\n\t\t)\r\n\t\treturn [0, 1, 2, 3]\r\n\t\t\t.map(rowIndex =>\r\n\t\t\t\trounded\r\n\t\t\t\t\t.slice(rowIndex * 4, rowIndex * 4 + 4) // select matrix row\r\n\t\t\t\t\t.map((x, colIndex) => ' '.repeat(colWidths[colIndex] - x.length) + x) // pad numbers with\r\n\t\t\t\t\t// spaces to col width\r\n\t\t\t\t\t.join(' '),\r\n\t\t\t)\r\n\t\t\t.join('\\n') // join rows\r\n\t}\r\n\r\n\t/**\r\n\t * Wether this matrix is a translation matrix, i.e. of the form\r\n\t * ```\r\n\t * \t1, 0, 0, x,\r\n\t * \t0, 1, 0, y,\r\n\t * \t0, 0, 1, z,\r\n\t * \t0, 0, 0, 1\r\n\t * ```\r\n\t */\r\n\tisTranslation(): boolean {\r\n\t\t// 2: any value, otherwise same value\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t1, 0, 0, 2,\r\n\t\t\t0, 1, 0, 2,\r\n\t\t\t0, 0, 1, 2,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\r\n\t}\r\n\r\n\t/**\r\n\t * Wether this matrix is a translation matrix, i.e. of the form\r\n\t * ```\r\n\t * \ts, 0, 0, 0,\r\n\t * \t0, t, 0, 0,\r\n\t * \t0, 0, v, 0,\r\n\t * \t0, 0, 0, 1\r\n\t * ```\r\n\t */\r\n\tisScaling(): boolean {\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t2, 0, 0, 0,\r\n\t\t\t0, 2, 0, 0,\r\n\t\t\t0, 0, 2, 0,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\r\n\t}\r\n\r\n\tisZRotation(): boolean {\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t2, 2, 0, 0,\r\n\t\t\t2, 2, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn (\r\n\t\t\tmask.every((expected, index) => expected == 2 || expected == this.m[index]) &&\r\n\t\t\t(eq(1, this.m[0] ** 2 + this.m[1] ** 2) && this.m[0] == this.m[5] && this.m[1] == -this.m[4])\r\n\t\t)\r\n\t}\r\n\r\n\ttoSource(): string {\r\n\t\tconst name = M4.NAMEMAP.get(this)\r\n\t\tif (name) {\r\n\t\t\treturn name\r\n\t\t} else if (this.isTranslation()) {\r\n\t\t\treturn callsce('M4.translate', this.O)\r\n\t\t} else if (this.isScaling()) {\r\n\t\t\treturn callsce('M4.scale', this.m[0], this.m[5], this.m[10])\r\n\t\t} else if (this.isNoProj()) {\r\n\t\t\treturn !this.O.equals(V3.O)\r\n\t\t\t\t? callsce('M4.forSys', this.X, this.Y, this.Z, this.O)\r\n\t\t\t\t: callsce('M4.forSys', this.X, this.Y, this.Z)\r\n\t\t} else if (this.isMirror(0)) {\r\n\t\t\tconst m = this.m\r\n\t\t\tconst nx = Math.sqrt((1 - m[0]) / 2)\r\n\t\t\tconst ny = Math.sqrt((1 - m[5]) / 2)\r\n\t\t\tconst nz = Math.sqrt((1 - m[10]) / 2)\r\n\t\t\tconst w = m[3] / 2.0 / nx\r\n\t\t\treturn callsce('M4.mirror', { normal1: new V3(nx, ny, nz), w })\r\n\t\t} else {\r\n\t\t\tconst m = this.m\r\n\t\t\t// prettier-ignore\r\n\t\t\treturn 'new M4(' +\r\n\t\t\t\t'\\n\\t' + m[0] + ',\\t' + m[1] + ',\\t' + m[2] + ',\\t' + m[3] + ',' +\r\n\t\t\t\t'\\n\\t' + m[4] + ',\\t' + m[5] + ',\\t' + m[6] + ',\\t' + m[7] + ',' +\r\n\t\t\t\t'\\n\\t' + m[8] + ',\\t' + m[9] + ',\\t' + m[10] + ',\\t' + m[11] + ',' +\r\n\t\t\t\t'\\n\\t' + m[12] + ',\\t' + m[13] + ',\\t' + m[14] + ',\\t' + m[15] + ')'\r\n\t\t}\r\n\t}\r\n\r\n\txyAreaFactor(): number {\r\n\t\treturn this.transformVector(V3.X)\r\n\t\t\t.cross(this.transformVector(V3.Y))\r\n\t\t\t.length()\r\n\t}\r\n}\r\n\r\nM4.prototype.height = 4\r\nM4.prototype.width = 4\r\n\r\nexport interface M4 extends Transformable {}\r\naddOwnProperties(M4.prototype, Transformable.prototype, 'constructor')\r\n","declare global {\n\tinterface Object {\n\t\ttoSource(): string\n\t}\n}\nconst KEYWORD_REGEXP = new RegExp(\n\t'^(' +\n\t\t'abstract|boolean|break|byte|case|catch|char|class|const|continue|debugger|' +\n\t\t'default|delete|do|double|else|enum|export|extends|false|final|finally|' +\n\t\t'float|for|function|goto|if|implements|import|in|instanceof|int|interface|' +\n\t\t'long|native|new|null|package|private|protected|public|return|short|static|' +\n\t\t'super|switch|synchronized|this|throw|throws|transient|true|try|typeof|' +\n\t\t'undefined|var|void|volatile|while|with' +\n\t\t')$',\n)\nfunction stringIsLegalKey(key: string) {\n\treturn /^[a-z_$][0-9a-z_$]*$/gi.test(key) && !KEYWORD_REGEXP.test(key)\n}\n\nconst seen: {}[] = []\nexport function toSource(o: {}, indent = 0) {\n\tif (undefined === o) return 'undefined'\n\tif (null === o) return 'null'\n\treturn o.toSource()\n}\nfunction addToSourceMethodToPrototype<T>(clazz: new (...args: {}[]) => T, method: (this: T) => string) {\n\tif (!clazz.prototype.toSource) {\n\t\tObject.defineProperty(clazz.prototype, 'toSource', {\n\t\t\tvalue: method,\n\t\t\twritable: true,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t})\n\t}\n}\n\naddToSourceMethodToPrototype(Boolean, Boolean.prototype.toString)\naddToSourceMethodToPrototype(Function, Function.prototype.toString)\naddToSourceMethodToPrototype(Number, Number.prototype.toString)\naddToSourceMethodToPrototype(RegExp, RegExp.prototype.toString)\naddToSourceMethodToPrototype(Date, function() {\n\treturn 'new Date(' + this.getTime() + ')'\n})\naddToSourceMethodToPrototype(String, function() {\n\treturn JSON.stringify(this)\n})\naddToSourceMethodToPrototype(Array, function() {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '['\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult += '\\n\\t' + toSource(this[i]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== this.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += 0 === this.length ? ']' : '\\n]'\n\tseen.pop()\n\treturn result\n})\naddToSourceMethodToPrototype(Object, function() {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '{'\n\tconst keys = Object.keys(this).sort()\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst k = keys[i]\n\t\tresult +=\n\t\t\t'\\n\\t' +\n\t\t\t(stringIsLegalKey(k) ? k : JSON.stringify(k)) +\n\t\t\t': ' +\n\t\t\ttoSource((this as any)[k]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== keys.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += 0 === keys.length ? '}' : '\\n}'\n\tseen.pop()\n\treturn result\n})\n","import { M4 } from './M4'\nimport { assert, assertInst, assertNumbers, assertVectors, callsce, clamp, lt, NLA_PRECISION } from './NLA'\nimport { Transformable } from './Transformable'\nimport { V3 } from './V3'\n\nexport class AABB extends Transformable {\n\tconstructor(public min: V3 = V3.INF, public max: V3 = V3.INF.negated()) {\n\t\tsuper()\n\t\tassertVectors(min, max)\n\t}\n\n\tstatic forXYZ(x: number, y: number, z: number): AABB {\n\t\treturn new AABB(V3.O, new V3(x, y, z))\n\t}\n\n\tstatic forAABBs(aabbs: Iterable<AABB>): AABB {\n\t\tconst result = new AABB()\n\t\tfor (const aabb of aabbs) {\n\t\t\tresult.addAABB(aabb)\n\t\t}\n\t\treturn result\n\t}\n\n\taddPoint(p: V3): this {\n\t\tassertVectors(p)\n\t\tthis.min = this.min.min(p)\n\t\tthis.max = this.max.max(p)\n\t\treturn this\n\t}\n\n\taddPoints(ps: V3[]): this {\n\t\tps.forEach(p => this.addPoint(p))\n\t\treturn this\n\t}\n\n\taddAABB(aabb: AABB): this {\n\t\tassertInst(AABB, aabb)\n\t\tthis.addPoint(aabb.min)\n\t\tthis.addPoint(aabb.max)\n\t\treturn this\n\t}\n\n\t/**\n\t * Returns the largest AABB contained in this which doesn't overlap with aabb\n\t * @param aabb\n\t */\n\twithoutAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\tlet min, max\n\t\tconst volume = this.volume(),\n\t\t\tsize = this.size()\n\t\tlet remainingVolume = -Infinity\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tconst dim = ['x', 'y', 'z'][i] as 'x' | 'y' | 'z'\n\t\t\tconst cond = aabb.min[dim] - this.min[dim] > this.max[dim] - aabb.max[dim]\n\t\t\tconst dimMin = cond ? this.min[dim] : Math.max(this.min[dim], aabb.max[dim])\n\t\t\tconst dimMax = !cond ? this.max[dim] : Math.min(this.max[dim], aabb.min[dim])\n\t\t\tconst newRemainingVolume = ((dimMax - dimMin) * volume) / size[dim]\n\t\t\tif (newRemainingVolume > remainingVolume) {\n\t\t\t\tremainingVolume = newRemainingVolume\n\t\t\t\tmin = this.min.withElement(dim, dimMin)\n\t\t\t\tmax = this.max.withElement(dim, dimMax)\n\t\t\t}\n\t\t}\n\t\treturn new AABB(min, max)\n\t}\n\n\tgetIntersectionAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\treturn new AABB(this.min.max(aabb.min), this.max.min(aabb.max))\n\t}\n\n\ttouchesAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x > aabb.max.x ||\n\t\t\tthis.max.x < aabb.min.x ||\n\t\t\tthis.min.y > aabb.max.y ||\n\t\t\tthis.max.y < aabb.min.y ||\n\t\t\tthis.min.z > aabb.max.z ||\n\t\t\tthis.max.z < aabb.min.z\n\t\t)\n\t}\n\n\ttouchesAABBfuzzy(aabb: AABB, precisision = NLA_PRECISION): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tlt(aabb.max.x, this.min.x, precisision) ||\n\t\t\tlt(this.max.x, aabb.min.x, precisision) ||\n\t\t\tlt(aabb.max.y, this.min.y, precisision) ||\n\t\t\tlt(this.max.y, aabb.min.y, precisision) ||\n\t\t\tlt(aabb.max.z, this.min.z, precisision) ||\n\t\t\tlt(this.max.z, aabb.min.z, precisision)\n\t\t)\n\t}\n\n\tintersectsAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x ||\n\t\t\tthis.max.x <= aabb.min.x ||\n\t\t\tthis.min.y >= aabb.max.y ||\n\t\t\tthis.max.y <= aabb.min.y ||\n\t\t\tthis.min.z >= aabb.max.z ||\n\t\t\tthis.max.z <= aabb.min.z\n\t\t)\n\t}\n\n\tintersectsAABB2d(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x ||\n\t\t\tthis.max.x <= aabb.min.x ||\n\t\t\tthis.min.y >= aabb.max.y ||\n\t\t\tthis.max.y <= aabb.min.y\n\t\t)\n\t}\n\n\tcontainsPoint(p: V3): boolean {\n\t\tassertVectors(p)\n\t\treturn (\n\t\t\tthis.min.x <= p.x &&\n\t\t\tthis.min.y <= p.y &&\n\t\t\tthis.min.z <= p.z &&\n\t\t\tthis.max.x >= p.x &&\n\t\t\tthis.max.y >= p.y &&\n\t\t\tthis.max.z >= p.z\n\t\t)\n\t}\n\n\tcontainsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) > radius\n\t}\n\n\tintersectsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) <= radius\n\t}\n\n\tdistanceToPoint(p: V3) {\n\t\tassertVectors(p)\n\t\tconst x = p.x,\n\t\t\ty = p.y,\n\t\t\tz = p.z\n\t\tconst min = this.min,\n\t\t\tmax = this.max\n\t\tif (this.containsPoint(p)) {\n\t\t\treturn Math.max(min.x - x, x - max.x, min.y - y, y - max.y, min.z - z, z - max.z)\n\t\t}\n\t\treturn p.distanceTo(new V3(clamp(x, min.x, max.x), clamp(y, min.y, max.y), clamp(z, min.z, max.z)))\n\t}\n\n\tcontainsAABB(aabb: AABB) {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.containsPoint(aabb.min) && this.containsPoint(aabb.max)\n\t}\n\n\tlikeAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.min.like(aabb.min) && this.max.like(aabb.max)\n\t}\n\n\tintersectsLine(line: { anchor: V3; dir1: V3; tMin: number; tMax: number }): boolean {\n\t\tassertVectors(line.anchor, line.dir1)\n\t\tconst dir = line.dir1.map(el => el || Number.MIN_VALUE)\n\t\tconst minTs = this.min.minus(line.anchor).divv(dir)\n\t\tconst maxTs = this.max.minus(line.anchor).divv(dir)\n\t\tconst tMin = minTs.min(maxTs).maxElement(),\n\t\t\ttMax = minTs.max(maxTs).minElement()\n\t\treturn tMin <= tMax && !(tMax < line.tMin || line.tMax < tMin)\n\t}\n\n\thasVolume(): boolean {\n\t\treturn this.min.x <= this.max.x && this.min.y <= this.max.y && this.min.z <= this.max.z\n\t}\n\n\tvolume(): number {\n\t\tif (!this.hasVolume()) {\n\t\t\treturn -1\n\t\t}\n\t\tconst v = this.max.minus(this.min)\n\t\treturn v.x * v.y * v.z\n\t}\n\n\tsize(): V3 {\n\t\treturn this.max.minus(this.min)\n\t}\n\n\tgetCenter(): V3 {\n\t\treturn this.min.plus(this.max).div(2)\n\t}\n\n\ttransform(m4: M4): this {\n\t\tassertInst(M4, m4)\n\t\tassert(m4.isAxisAligned())\n\t\tconst aabb = new AABB()\n\t\taabb.addPoint(m4.transformPoint(this.min))\n\t\taabb.addPoint(m4.transformPoint(this.max))\n\t\treturn aabb as this\n\t}\n\n\tofTransformed(m4: M4): AABB {\n\t\tassertInst(M4, m4)\n\t\tconst aabb = new AABB()\n\t\taabb.addPoints(m4.transformedPoints(this.corners()))\n\t\treturn aabb\n\t}\n\n\tcorners(): V3[] {\n\t\tconst min = this.min,\n\t\t\tmax = this.max\n\t\treturn [\n\t\t\tmin,\n\t\t\tnew V3(min.x, min.y, max.z),\n\t\t\tnew V3(min.x, max.y, min.z),\n\t\t\tnew V3(min.x, max.y, max.z),\n\n\t\t\tnew V3(max.x, min.y, min.z),\n\t\t\tnew V3(max.x, min.y, max.z),\n\t\t\tnew V3(max.x, max.y, min.z),\n\t\t\tmax,\n\t\t]\n\t}\n\n\ttoString(): string {\n\t\treturn callsce('new AABB', this.min, this.max)\n\t}\n\n\ttoSource(): string {\n\t\treturn this.toString()\n\t}\n\n\t/**\n\t * Return the matrix which transforms the AABB from V3.O to V3.XYZ to this AABB.\n\t */\n\tgetM4(): M4 {\n\t\treturn M4.translate(this.min).times(M4.scale(this.size()))\n\t}\n}\n","/**\n * @license\n *\n * js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// tslint:disable:no-unnecessary-qualifier\n\nconst { abs, atan2, cos, floor, log, min, max, round, sign, sin, sqrt, cbrt, PI, hypot } = Math\n\nfunction lerp(a: number, b: number, f: number) {\n\treturn a + (b - a) * f\n}\nfunction lerpInv(a: number, b: number, f: number) {\n\treturn (f - a) / (b - a)\n}\nfunction clamp(x: number, min = 0, max = 1) {\n\treturn x < min ? min : x > max ? max : x\n}\n\nfunction newtonIterate1d(f: (x: number) => number, xStart: number, max_steps: number, eps: number = 1e-8): number {\n\tlet x = xStart,\n\t\tfx\n\twhile (max_steps-- && abs((fx = f(x))) > eps) {\n\t\tconst dfdx = (f(x + eps) - fx) / eps\n\t\tconsole.log(\"fx / dfdx\", fx / dfdx, \"fx\", fx, \"x\", x)\n\t\tx = x - fx / dfdx\n\t}\n\treturn x\n}\nfunction bisect(f: (x: number) => number, a: number, b: number, steps: number) {\n\t//assert(a < b)\n\tlet fA = f(a)\n\t// let fB = f(b)\n\t//assert(fA * fB < 0)\n\twhile (steps--) {\n\t\tconst c = (a + b) / 2\n\t\tconst fC = f(c)\n\t\t// console.log(\"fC\", fC, \"c\", c)\n\t\tif (sign(fA) == sign(fC)) {\n\t\t\ta = c\n\t\t\tfA = fC\n\t\t} else {\n\t\t\tb = c\n\t\t\t// fB = fC\n\t\t}\n\t}\n\t//assert(a <= (b + a) / 2)\n\t//assert(b >= (b + a) / 2)\n\treturn (a + b) / 2\n}\n\nconst TWOPI = 2 * PI\n\nconst DEG2RAD = PI / 180\n\nconst RAD2DEG = 180 / PI\n/**\n * @param alpha1 default=1\n * @example chroma.color(99, 99, 44, 0.7)\n */\nexport function color(red255: number, green255: number, blue255: number, alpha1?: number): Color\n/**\n * @example chroma.color('mediumorchid') // a css string\n * @example chroma.color([56, 203, 30]) // a RGB triple\n * @example chroma.color(0x4b0082) // a hex num\n * @example chroma.color([30, 0.8, 0.3], 'hsl') // explicit format\n */\nexport function color(x: Chromable, format?: ColorFormat): Color\n/**\n * This overload allows VS Code to suggest color names when you type `color('`.\n */\nexport function color(colorname: keyof typeof w3cx11, format?: \"name\"): Color\n/** @example chroma.color(30, 0.8, 0.3, 'hsl') */\nexport function color(channel0: number, channel1: number, channel2: number, format: ColorFormat): Color\n/** @example chroma.color(0.3, 0.8, 0.3, 1, 'gl') */\nexport function color(\n\tchannel0: number,\n\tchannel1: number,\n\tchannel2: number,\n\tchannel3: number,\n\tformat: ColorFormat,\n): Color\nexport function color(...args: any[]) {\n\tif (args[0] instanceof Color) {\n\t\treturn args[0]\n\t}\n\tif (args.length > 1 && \"string\" == typeof args[args.length - 1]) {\n\t\treturn guess(args.slice(0, args.length - 1), args[args.length - 1])\n\t} else if (Array.isArray(args[0])) {\n\t\treturn guess(args[0])\n\t} else {\n\t\treturn guess(args)\n\t}\n}\n/**\n * A Chromable is any value which can be converted to a color. For ease of use, most functions accept these instead of\n * only Color values.\n */\nexport type Chromable = number | string | Color | number[]\n\nexport class Color {\n\t/** @internal */\n\tconstructor(\n\t\tprivate readonly r: number,\n\t\tprivate readonly g: number,\n\t\tprivate readonly b: number,\n\t\tprivate readonly a = 1,\n\t) {}\n\n\t// public shade() {\n\t// \tconst shades: [string, string, number][] = [\n\t// \t\t[\"ff0000\", \"red\"],\n\t// \t\t[\"ffa500\", \"orange\"],\n\t// \t\t[\"ffff00\", \"yellow\"],\n\t// \t\t[\"008000\", \"green\"],\n\t// \t\t[\"0000ff\", \"blue\"],\n\t// \t\t[\"ee82ee\", \"violet\"],\n\t// \t\t[\"a52a2a\", \"brown\"],\n\t// \t\t[\"000000\", \"black\"],\n\t// \t\t[\"808080\", \"grey\"],\n\t// \t\t[\"ffffff\", \"white\"],\n\t// \t] as any\n\t// \tfunction angleDiff(a: number, b: number) {\n\t// \t\tconst d = (a - b) % 360\n\t// \t\tif (d > 180) return d - 360\n\t// \t\tif (d < -180) return d + 360\n\t// \t\treturn d\n\t// \t}\n\t// \tshades.forEach(arr => arr.push(color(arr[0]).hsl()[0]))\n\t// \tconst [h, s, l] = this.hsl()\n\t// \tif (l > 0.9) return \"white\"\n\t// \tif (l > 0.8 && s < 0.2) return \"white\"\n\t// \tif (s < 0.1) return \"grey\"\n\t// \tif (s < 0.4 && h > 0 && h < 48) return \"brown\"\n\n\t// \tconst distanceInXYZ: { [hue: number]: number } = { 0: 0 }\n\t// \tfor (let i = 60; i <= 360; i += 60) {\n\t// \t\tdistanceInXYZ[i] =\n\t// \t\t\tdistanceInXYZ[i - 60] + distance(hsl(i - 60, 1, 0.5), hsl(i, 1, 0.5), \"xyz\")\n\t// \t}\n\t// \t// console.log(distanceInXYZ)\n\n\t// \tconst shadeEnds: { [hue: number]: number } = {\n\t// \t\t0: 9,\n\t// \t\t38: 48,\n\t// \t\t60: 65,\n\t// \t\t120: 165,\n\t// \t\t240: 245,\n\t// \t\t300: 338,\n\t// \t\t360: 369,\n\t// \t}\n\n\t// \tconst getColorDistanceAlongXYZHue = (hueDegrees: number) => {\n\t// \t\tconst base = hueDegrees - (hueDegrees % 60)\n\t// \t\treturn (\n\t// \t\t\tdistanceInXYZ[base] + distance(hsl(base, 1, 0.5), hsl(hueDegrees, 1, 0.5), \"xyz\")\n\t// \t\t)\n\t// \t}\n\t// \tconst colorXYZD = getColorDistanceAlongXYZHue(this.hsl()[0])\n\t// \tconst md = distanceInXYZ[360]\n\t// \tconst shadeHue =\n\t// \t\t(Object.keys(shadeEnds) as any[]).find(shadeHue => shadeEnds[shadeHue | 0] >= this.hsl()[0])! % 360\n\t// \treturn shades.find(([_hex, _name, _hue]) => (_hue | 0) === shadeHue)![1]\n\t// \t// process.exit()\n\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\n\t// \t\treturn -abs(angleDiff(this.hsl()[0], _hue))\n\t// \t})[1]\n\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\n\t// \t\tconst [thisL, thisA, thisB] = this.lab()\n\t// \t\tconst [L, A, B] = color(_hex).lab()\n\t// \t\treturn -hypot(thisL - L, thisA - A, thisB - B)\n\t// \t})[1]\n\t// }\n\n\t/**\n\t * @see [[mix]]\n\t */\n\tpublic mix(col2: Chromable, f: number, m: InterpolationMode = \"rgb\") {\n\t\treturn mix(this, col2, f, m)\n\t}\n\tpublic rgb(doRound = true, clamp_ = true): RGB {\n\t\tconst f = (t: number) => {\n\t\t\tif (doRound) t = round(t)\n\t\t\tif (clamp_) t = clamp(t, 0, 255)\n\t\t\treturn t\n\t\t}\n\t\tconst { r, g, b } = this\n\t\treturn [f(r), f(g), f(b)]\n\t}\n\tpublic rgba(doRound = true, clamp_ = true): RGBA {\n\t\tconst f = (t: number) => {\n\t\t\tif (doRound) t = round(t)\n\t\t\tif (clamp_) t = clamp(t, 0, 255)\n\t\t\treturn t\n\t\t}\n\t\tconst { r, g, b, a } = this\n\t\treturn [f(r), f(g), f(b), a]\n\t}\n\n\t/**\n\t * Return a hex-string representation of this color.\n\t *\n\t * @param mode\n\t * @see #num for a hex-number representation.\n\t * @example chroma.color('yellow').alpha(0.7).hex()\n\t * @example chroma.color('yellow').alpha(0.7).hex('rgba')\n\t * @example chroma.color('yellow').alpha(0.7).hex('argb')\n\t */\n\tpublic hex(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb2hex(r, g, b, a, mode)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsl()\n\t */\n\tpublic hsl(): HSL {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsl(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsv()\n\t */\n\tpublic hsv() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsv(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hcg()\n\t */\n\tpublic hcg() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hcg(r, g, b)\n\t}\n\n\t/**\n\t * Returns a CSS `rgb(...)` or `hsl(...)` string representation that can be used as CSS-color definition. The alpha\n\t * value is not output if it 1.\n\t * @example chroma.color('teal').css() // == \"rgb(0,128,128)\"\n\t * @example chroma.color('teal').alpha(0.5).css() // == \"rgba(0,128,128,0.5)\"\n\t * @example chroma.color('teal').css('hsl') // == \"hsl(180,100%,25.1%)\"\n\t */\n\tpublic css(mode: \"rgb\" | \"hsl\" = \"rgb\") {\n\t\tif (\"rgb\" == mode) {\n\t\t\tconst { r, g, b, a } = this\n\t\t\treturn rgb2css(r, g, b, a)\n\t\t} else if (\"hsl\" == mode) {\n\t\t\treturn hsl2css(this.hsl(), this.alpha())\n\t\t} else {\n\t\t\tthrow new Error()\n\t\t}\n\t}\n\n\tpublic name(closest: true): string\n\t/**\n\t * Get the name of a color. By default, this method will try to match the color exactly (comparing rounded RGB\n\t * values). Pass `true` to return the name of the color which is closest to `this` in CIELAB color space. CIELAB is\n\t * used as it is perceptually uniform.\n\t * @param closest Whether this should find the closest color name. default=false\n\t * @return If `closest == false`, the name of this color or `undefined` if there is no match. Otherwise, will always\n\t * return a color name.\n\t * @example chroma.color('#ff0000').name() // == \"red\"\n\t * @example chroma.color('#ff0001').name() // == undefined\n\t * @example chroma.color('#ff0001').name(true) // == \"red\"\n\t */\n\tpublic name(closest?: boolean): string | undefined\n\tpublic name(closest: boolean = false): string | undefined {\n\t\tconst thisNum = this.num()\n\t\tconst name = Object.keys(w3cx11).find(name => (w3cx11 as any)[name] == thisNum)\n\t\tif (!name && closest) {\n\t\t\tconst [thisLStar, thisAStar, thisBStar] = this.lab()\n\t\t\treturn withMax(Object.keys(w3cx11) as (keyof typeof w3cx11)[], name => {\n\t\t\t\tconst [lStar, aStar, bStar] = num(w3cx11[name]).lab()\n\t\t\t\treturn -hypot(thisLStar - lStar, thisAStar - aStar, thisBStar - bStar)\n\t\t\t})\n\t\t}\n\t\treturn name\n\t}\n\n\t/**\n\t * Get the [CMYK](#CMYK) representation of this color.\n\t *\n\t * @example chroma.color('red').cmyk()\n\t */\n\tpublic cmyk() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2cmyk(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [GL] representation of this color.\n\t * @example chroma.color('33cc00').gl()\n\t */\n\tpublic gl(): GL {\n\t\tconst { r, g, b, a } = this\n\t\treturn [r / 255, g / 255, b / 255, a]\n\t}\n\n\t/**\n\t * Get luminance of the color. This is equal to the Y channel of the XYZ color space.\n\t * @example chroma.color('black').luminance() // == 0\n\t * @example chroma.color('white').luminance() // == 1\n\t * @example chroma.color('red').luminance() // == ~0.21\n\t * @see https://en.wikipedia.org/wiki/Relative_luminance\n\t */\n\tpublic luminance(): number\n\t/**\n\t * Return a new [Color] with `lum1` by linearly interpolating `this` with white (when increasing the luminance) or\n\t * black (otherwise) in the [XYZ] color space.\n\t * @see https://en.wikipedia.org/wiki/Relative_luminance\n\t * @example // Approximately doubling the luminance of red\n\t * @example chroma.color('red').luminance(0.4) // == #ff8686 // \"Vivid Tangerine\"\n\t * @param lum1 The desired luminance.\n\t */\n\tpublic luminance(lum1: number): this\n\tpublic luminance(lum1?: number) {\n\t\tconst { r, g, b, a } = this\n\t\tconst [, Y] = rgb2xyz(r, g, b)\n\t\tif (undefined === lum1) {\n\t\t\treturn Y\n\t\t}\n\t\tconst inverseLerp = (a: number, b: number, val: number) => (val - a) / (b - a)\n\t\tif (lum1 > Y) {\n\t\t\t// lerp to white\n\t\t\treturn mix(this, white, inverseLerp(Y, 1, lum1), \"xyz\").alpha(a)\n\t\t} else {\n\t\t\t// lerp to black\n\t\t\treturn mix(black, this, inverseLerp(0, Y, lum1), \"xyz\").alpha(a)\n\t\t}\n\t}\n\n\t/**\n\t * Get color temperature of this color in Kelvin. This only makes sense for colors close to those output by\n\t * kelvin\n\t *\n\t * @example [c = chroma.color('#ff3300'), c.temperature()]\n\t * @example [c = chroma.color('#ffe3cd'), c.temperature()]\n\t * @example [c = chroma.color('#b3ccff'), c.temperature()]\n\t */\n\tpublic temperature() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2kelvin(r, g, b)\n\t}\n\n\t/**\n\t * Returns a new [Color] with a channel changed.\n\t * @example chroma.color('skyblue').set('hsl.h', 0) // change hue to 0 deg (=red)\n\t * @example chroma.color('hotpink').set('lch.c', 30) // set chromaticity to 30\n\t * @example chroma.color('orangered').set('lab.l', x => x / 2) // half Lab lightness\n\t * @example chroma.color('darkseagreen').set('lch.c', x => x * 2) // double Lch saturation\n\t */\n\tpublic set(modeAndChannel: string, value: number | ((channel: number) => number)) {\n\t\tconst [mode, channel] = modeAndChannel.split(\".\") as [ColorMode, string]\n\t\tconst src = this[mode]()\n\t\tconst i = mode.indexOf(channel)\n\t\tif (-1 == i) throw new Error(\"invalid channel\")\n\t\tsrc[i] = \"number\" == typeof value ? value : value(src[i])\n\t\treturn color(src, mode).alpha(this.a)\n\t}\n\n\t/**\n\t * Returns whether this color is outside the RGB color cube and will be clipped/clamped when calling .rgb()\n\t *\n\t * @example [c = chroma.lch( 20, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 40, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 60, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 80, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch(100, 40, 50), c.clipped()]\n\t */\n\tpublic clipped() {\n\t\tconst { r, g, b } = this\n\t\treturn !(0 <= r && r <= 255 && (0 <= g && g <= 255) && (0 <= b && b <= 255))\n\t}\n\n\t/**\n\t * Returns black or white, whichever has the highest contrast to `this`.\n\t * In the readme you should see the result of this.\n\t *\n\t * @example chroma.color('red')\n\t * @example chroma.color('yellow')\n\t */\n\tpublic textColor() {\n\t\treturn this.luminance() > 0.5 ? black : white\n\t}\n\n\t/**\n\t * Get alpha value of color.\n\t * @example chroma.rgb(0, 0, 255, 0.5).alpha() // == 0.5\n\t */\n\tpublic alpha(): number\n\t/**\n\t * Return new [Color] with given alpha value.\n\t * @example chroma.color('green').alpha(0.3)\n\t * @example chroma.color('green').alpha(0.3).hex('rgba') // == \"#00ff004d\"\n\t * @param alpha1 The desired alpha value.\n\t */\n\tpublic alpha(alpha1: number): Color\n\tpublic alpha(alpha1?: number): number | Color {\n\t\tif (undefined === alpha1) {\n\t\t\treturn this.a\n\t\t}\n\t\tconst { r, g, b } = this\n\t\treturn rgb(r, g, b, alpha1)\n\t}\n\n\tpublic darker(amount = 1) {\n\t\tconst [l, a, b] = this.lab()\n\t\treturn lab(l - LAB_Kn * amount, a, b, this.alpha())\n\t}\n\n\t/**\n\t *\n\t * @param amount\n\t * @example chroma.color('hotpink')\n\t * @example chroma.color('hotpink').brighter()\n\t * @example chroma.color('hotpink').brighter(2)\n\t * @example chroma.color('hotpink').brighter(3)\n\t */\n\tpublic brighter(amount = 1) {\n\t\treturn this.darker(-amount)\n\t}\n\n\t/**\n\t * Returns a new [Color] with increased saturation.\n\t * @param amount How much.\n\t * @example chroma.color('slategray')\n\t * @example chroma.color('slategray').saturate()\n\t * @example chroma.color('slategray').saturate(2)\n\t * @example chroma.color('slategray').saturate(3)\n\t */\n\tpublic saturate(amount = 1) {\n\t\tconst [l, c, h] = this.lch()\n\t\treturn lch(l, max(0, c + amount * LAB_Kn), h, this.alpha())\n\t}\n\n\t/**\n\t * Equivalent to `saturate(-amount)`.\n\t * @see #saturate\n\t */\n\tpublic desaturate(amount = 1) {\n\t\treturn this.saturate(-amount)\n\t}\n\n\tpublic premultiplied() {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb(r * a, g * a, b * a, a)\n\t}\n\n\t/**\n\t * Returns the [HSI] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsi()\n\t */\n\tpublic hsi() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsi(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [LAB] representation of this color.\n\t *\n\t * @example chroma.color('purple').lab()\n\t */\n\tpublic lab() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2lab(r, g, b)\n\t}\n\n\t/**\n\t * Return a hex-num of this color.\n\t *\n\t * @param mode\n\t * @see #num for a hex-number representation.\n\t * @example chroma.color('yellow').alpha(0.7).hex()\n\t * @example chroma.color('yellow').alpha(0.7).hex('rgba')\n\t * @example chroma.color('yellow').alpha(0.7).hex('argb')\n\t */\n\tpublic num(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb2num(r, g, b, a, mode)\n\t}\n\n\t/**\n\t * Returns the [LCH] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').lch()\n\t */\n\tpublic lch() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2lch(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [XYZ] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').xyz()\n\t */\n\tpublic xyz() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2xyz(r, g, b)\n\t}\n\n\t/**\n\t * Whether this [Color](#Color) is identical (strict equality of r, g, b, a) to `color`.\n\t */\n\tpublic equals(color: Color) {\n\t\tconst { r, g, b, a } = this\n\t\tconst { r: r2, g: g2, b: b2, a: a2 } = color\n\t\treturn r == r2 && g == g2 && b == b2 && a == a2\n\t}\n\n\tpublic hashCode() {\n\t\treturn this.num(\"rgba\")\n\t}\n\n\t/**\n\t * @example chroma.color('red').toSource() // == \"rgb(255, 0, 0)\"\n\t * @example chroma.rgb(-2, 100.02, 200, 0.5).toSource() // == \"rgb(-2, 100.02, 200, 0.5)\"\n\t */\n\tpublic toSource() {\n\t\tconst { r, g, b, a } = this\n\t\treturn \"chroma.rgb(\" + r + \", \" + g + \", \" + b + (a === 1 ? \")\" : \", \" + a + \")\")\n\t}\n}\nexport interface Color {\n\ttoString(): string\n\t//darker(amount: number): Color\n\t//brighter(amount: number): Color\n\tkelvin(): number\n}\nColor.prototype.toString = Color.prototype.css\nColor.prototype.kelvin = Color.prototype.temperature\n/**\n * @example chroma.black\n */\nexport const black = new Color(0, 0, 0, 1)\n\n/**\n * @example chroma.black\n */\nexport const white = new Color(255, 255, 255, 1)\n\nexport const brewer = {\n\tOrRd: [0xfff7ec, 0xfee8c8, 0xfdd49e, 0xfdbb84, 0xfc8d59, 0xef6548, 0xd7301f, 0xb30000, 0x7f0000],\n\tPuBu: [0xfff7fb, 0xece7f2, 0xd0d1e6, 0xa6bddb, 0x74a9cf, 0x3690c0, 0x0570b0, 0x045a8d, 0x023858],\n\tBuPu: [0xf7fcfd, 0xe0ecf4, 0xbfd3e6, 0x9ebcda, 0x8c96c6, 0x8c6bb1, 0x88419d, 0x810f7c, 0x4d004b],\n\tOranges: [0xfff5eb, 0xfee6ce, 0xfdd0a2, 0xfdae6b, 0xfd8d3c, 0xf16913, 0xd94801, 0xa63603, 0x7f2704],\n\tBuGn: [0xf7fcfd, 0xe5f5f9, 0xccece6, 0x99d8c9, 0x66c2a4, 0x41ae76, 0x238b45, 0x006d2c, 0x00441b],\n\tYlOrBr: [0xffffe5, 0xfff7bc, 0xfee391, 0xfec44f, 0xfe9929, 0xec7014, 0xcc4c02, 0x993404, 0x662506],\n\tYlGn: [0xffffe5, 0xf7fcb9, 0xd9f0a3, 0xaddd8e, 0x78c679, 0x41ab5d, 0x238443, 0x006837, 0x004529],\n\tReds: [0xfff5f0, 0xfee0d2, 0xfcbba1, 0xfc9272, 0xfb6a4a, 0xef3b2c, 0xcb181d, 0xa50f15, 0x67000d],\n\tRdPu: [0xfff7f3, 0xfde0dd, 0xfcc5c0, 0xfa9fb5, 0xf768a1, 0xdd3497, 0xae017e, 0x7a0177, 0x49006a],\n\tGreens: [0xf7fcf5, 0xe5f5e0, 0xc7e9c0, 0xa1d99b, 0x74c476, 0x41ab5d, 0x238b45, 0x006d2c, 0x00441b],\n\tYlGnBu: [0xffffd9, 0xedf8b1, 0xc7e9b4, 0x7fcdbb, 0x41b6c4, 0x1d91c0, 0x225ea8, 0x253494, 0x081d58],\n\tPurples: [0xfcfbfd, 0xefedf5, 0xdadaeb, 0xbcbddc, 0x9e9ac8, 0x807dba, 0x6a51a3, 0x54278f, 0x3f007d],\n\tGnBu: [0xf7fcf0, 0xe0f3db, 0xccebc5, 0xa8ddb5, 0x7bccc4, 0x4eb3d3, 0x2b8cbe, 0x0868ac, 0x084081],\n\tGreys: [0xffffff, 0xf0f0f0, 0xd9d9d9, 0xbdbdbd, 0x969696, 0x737373, 0x525252, 0x252525, 0x000000],\n\tYlOrRd: [0xffffcc, 0xffeda0, 0xfed976, 0xfeb24c, 0xfd8d3c, 0xfc4e2a, 0xe31a1c, 0xbd0026, 0x800026],\n\tPuRd: [0xf7f4f9, 0xe7e1ef, 0xd4b9da, 0xc994c7, 0xdf65b0, 0xe7298a, 0xce1256, 0x980043, 0x67001f],\n\tBlues: [0xf7fbff, 0xdeebf7, 0xc6dbef, 0x9ecae1, 0x6baed6, 0x4292c6, 0x2171b5, 0x08519c, 0x08306b],\n\tPuBuGn: [0xfff7fb, 0xece2f0, 0xd0d1e6, 0xa6bddb, 0x67a9cf, 0x3690c0, 0x02818a, 0x016c59, 0x014636],\n\tViridis: [0x440154, 0x482777, 0x3f4a8a, 0x31678e, 0x26838f, 0x1f9d8a, 0x6cce5a, 0xb6de2b, 0xfee825],\n\tSpectral: [\n\t\t0x9e0142,\n\t\t0xd53e4f,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee08b,\n\t\t0xffffbf,\n\t\t0xe6f598,\n\t\t0xabdda4,\n\t\t0x66c2a5,\n\t\t0x3288bd,\n\t\t0x5e4fa2,\n\t],\n\tRdYlGn: [\n\t\t0xa50026,\n\t\t0xd73027,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee08b,\n\t\t0xffffbf,\n\t\t0xd9ef8b,\n\t\t0xa6d96a,\n\t\t0x66bd63,\n\t\t0x1a9850,\n\t\t0x006837,\n\t],\n\tRdBu: [\n\t\t0x67001f,\n\t\t0xb2182b,\n\t\t0xd6604d,\n\t\t0xf4a582,\n\t\t0xfddbc7,\n\t\t0xf7f7f7,\n\t\t0xd1e5f0,\n\t\t0x92c5de,\n\t\t0x4393c3,\n\t\t0x2166ac,\n\t\t0x053061,\n\t],\n\tPiYG: [\n\t\t0x8e0152,\n\t\t0xc51b7d,\n\t\t0xde77ae,\n\t\t0xf1b6da,\n\t\t0xfde0ef,\n\t\t0xf7f7f7,\n\t\t0xe6f5d0,\n\t\t0xb8e186,\n\t\t0x7fbc41,\n\t\t0x4d9221,\n\t\t0x276419,\n\t],\n\tPRGn: [\n\t\t0x40004b,\n\t\t0x762a83,\n\t\t0x9970ab,\n\t\t0xc2a5cf,\n\t\t0xe7d4e8,\n\t\t0xf7f7f7,\n\t\t0xd9f0d3,\n\t\t0xa6dba0,\n\t\t0x5aae61,\n\t\t0x1b7837,\n\t\t0x00441b,\n\t],\n\tRdYlBu: [\n\t\t0xa50026,\n\t\t0xd73027,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee090,\n\t\t0xffffbf,\n\t\t0xe0f3f8,\n\t\t0xabd9e9,\n\t\t0x74add1,\n\t\t0x4575b4,\n\t\t0x313695,\n\t],\n\tBrBG: [\n\t\t0x543005,\n\t\t0x8c510a,\n\t\t0xbf812d,\n\t\t0xdfc27d,\n\t\t0xf6e8c3,\n\t\t0xf5f5f5,\n\t\t0xc7eae5,\n\t\t0x80cdc1,\n\t\t0x35978f,\n\t\t0x01665e,\n\t\t0x003c30,\n\t],\n\tRdGy: [\n\t\t0x67001f,\n\t\t0xb2182b,\n\t\t0xd6604d,\n\t\t0xf4a582,\n\t\t0xfddbc7,\n\t\t0xffffff,\n\t\t0xe0e0e0,\n\t\t0xbababa,\n\t\t0x878787,\n\t\t0x4d4d4d,\n\t\t0x1a1a1a,\n\t],\n\tPuOr: [\n\t\t0x7f3b08,\n\t\t0xb35806,\n\t\t0xe08214,\n\t\t0xfdb863,\n\t\t0xfee0b6,\n\t\t0xf7f7f7,\n\t\t0xd8daeb,\n\t\t0xb2abd2,\n\t\t0x8073ac,\n\t\t0x542788,\n\t\t0x2d004b,\n\t],\n\tSet2: [0x66c2a5, 0xfc8d62, 0x8da0cb, 0xe78ac3, 0xa6d854, 0xffd92f, 0xe5c494, 0xb3b3b3],\n\tAccent: [0x7fc97f, 0xbeaed4, 0xfdc086, 0xffff99, 0x386cb0, 0xf0027f, 0xbf5b17, 0x666666],\n\tSet1: [0xe41a1c, 0x377eb8, 0x4daf4a, 0x984ea3, 0xff7f00, 0xffff33, 0xa65628, 0xf781bf, 0x999999],\n\tSet3: [\n\t\t0x8dd3c7,\n\t\t0xffffb3,\n\t\t0xbebada,\n\t\t0xfb8072,\n\t\t0x80b1d3,\n\t\t0xfdb462,\n\t\t0xb3de69,\n\t\t0xfccde5,\n\t\t0xd9d9d9,\n\t\t0xbc80bd,\n\t\t0xccebc5,\n\t\t0xffed6f,\n\t],\n\tDark2: [0x1b9e77, 0xd95f02, 0x7570b3, 0xe7298a, 0x66a61e, 0xe6ab02, 0xa6761d, 0x666666],\n\tPaired: [\n\t\t0xa6cee3,\n\t\t0x1f78b4,\n\t\t0xb2df8a,\n\t\t0x33a02c,\n\t\t0xfb9a99,\n\t\t0xe31a1c,\n\t\t0xfdbf6f,\n\t\t0xff7f00,\n\t\t0xcab2d6,\n\t\t0x6a3d9a,\n\t\t0xffff99,\n\t\t0xb15928,\n\t],\n\tPastel2: [0xb3e2cd, 0xfdcdac, 0xcbd5e8, 0xf4cae4, 0xe6f5c9, 0xfff2ae, 0xf1e2cc, 0xcccccc],\n\tPastel1: [0xfbb4ae, 0xb3cde3, 0xccebc5, 0xdecbe4, 0xfed9a6, 0xffffcc, 0xe5d8bd, 0xfddaec, 0xf2f2f2],\n}\n\n/**\n * X11 color names\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @example chroma.Object.keys(w3cx11).slice(0, 4)\n */\nexport const w3cx11 = {\n\taliceblue: 0xf0f8ff,\n\tantiquewhite: 0xfaebd7,\n\taqua: 0x00ffff,\n\taquamarine: 0x7fffd4,\n\tazure: 0xf0ffff,\n\tbeige: 0xf5f5dc,\n\tbisque: 0xffe4c4,\n\tblack: 0x000000,\n\tblanchedalmond: 0xffebcd,\n\tblue: 0x0000ff,\n\tblueviolet: 0x8a2be2,\n\tbrown: 0xa52a2a,\n\tburlywood: 0xdeb887,\n\tcadetblue: 0x5f9ea0,\n\tchartreuse: 0x7fff00,\n\tchocolate: 0xd2691e,\n\tcoral: 0xff7f50,\n\tcornflower: 0x6495ed,\n\tcornflowerblue: 0x6495ed,\n\tcornsilk: 0xfff8dc,\n\tcrimson: 0xdc143c,\n\tcyan: 0x00ffff,\n\tdarkblue: 0x00008b,\n\tdarkcyan: 0x008b8b,\n\tdarkgoldenrod: 0xb8860b,\n\tdarkgray: 0xa9a9a9,\n\tdarkgreen: 0x006400,\n\tdarkgrey: 0xa9a9a9,\n\tdarkkhaki: 0xbdb76b,\n\tdarkmagenta: 0x8b008b,\n\tdarkolivegreen: 0x556b2f,\n\tdarkorange: 0xff8c00,\n\tdarkorchid: 0x9932cc,\n\tdarkred: 0x8b0000,\n\tdarksalmon: 0xe9967a,\n\tdarkseagreen: 0x8fbc8f,\n\tdarkslateblue: 0x483d8b,\n\tdarkslategray: 0x2f4f4f,\n\tdarkslategrey: 0x2f4f4f,\n\tdarkturquoise: 0x00ced1,\n\tdarkviolet: 0x9400d3,\n\tdeeppink: 0xff1493,\n\tdeepskyblue: 0x00bfff,\n\tdimgray: 0x696969,\n\tdimgrey: 0x696969,\n\tdodgerblue: 0x1e90ff,\n\tfirebrick: 0xb22222,\n\tfloralwhite: 0xfffaf0,\n\tforestgreen: 0x228b22,\n\tfuchsia: 0xff00ff,\n\tgainsboro: 0xdcdcdc,\n\tghostwhite: 0xf8f8ff,\n\tgold: 0xffd700,\n\tgoldenrod: 0xdaa520,\n\tgray: 0x808080,\n\tgreen: 0x008000,\n\tgreenyellow: 0xadff2f,\n\tgrey: 0x808080,\n\thoneydew: 0xf0fff0,\n\thotpink: 0xff69b4,\n\tindianred: 0xcd5c5c,\n\tindigo: 0x4b0082,\n\tivory: 0xfffff0,\n\tkhaki: 0xf0e68c,\n\tlaserlemon: 0xffff54,\n\tlavender: 0xe6e6fa,\n\tlavenderblush: 0xfff0f5,\n\tlawngreen: 0x7cfc00,\n\tlemonchiffon: 0xfffacd,\n\tlightblue: 0xadd8e6,\n\tlightcoral: 0xf08080,\n\tlightcyan: 0xe0ffff,\n\tlightgoldenrod: 0xfafad2,\n\tlightgoldenrodyellow: 0xfafad2,\n\tlightgray: 0xd3d3d3,\n\tlightgreen: 0x90ee90,\n\tlightgrey: 0xd3d3d3,\n\tlightpink: 0xffb6c1,\n\tlightsalmon: 0xffa07a,\n\tlightseagreen: 0x20b2aa,\n\tlightskyblue: 0x87cefa,\n\tlightslategray: 0x778899,\n\tlightslategrey: 0x778899,\n\tlightsteelblue: 0xb0c4de,\n\tlightyellow: 0xffffe0,\n\tlime: 0x00ff00,\n\tlimegreen: 0x32cd32,\n\tlinen: 0xfaf0e6,\n\tmagenta: 0xff00ff,\n\tmaroon: 0x800000,\n\tmaroon2: 0x7f0000,\n\tmaroon3: 0xb03060,\n\tmediumaquamarine: 0x66cdaa,\n\tmediumblue: 0x0000cd,\n\tmediumorchid: 0xba55d3,\n\tmediumpurple: 0x9370db,\n\tmediumseagreen: 0x3cb371,\n\tmediumslateblue: 0x7b68ee,\n\tmediumspringgreen: 0x00fa9a,\n\tmediumturquoise: 0x48d1cc,\n\tmediumvioletred: 0xc71585,\n\tmidnightblue: 0x191970,\n\tmintcream: 0xf5fffa,\n\tmistyrose: 0xffe4e1,\n\tmoccasin: 0xffe4b5,\n\tnavajowhite: 0xffdead,\n\tnavy: 0x000080,\n\toldlace: 0xfdf5e6,\n\tolive: 0x808000,\n\tolivedrab: 0x6b8e23,\n\torange: 0xffa500,\n\torangered: 0xff4500,\n\torchid: 0xda70d6,\n\tpalegoldenrod: 0xeee8aa,\n\tpalegreen: 0x98fb98,\n\tpaleturquoise: 0xafeeee,\n\tpalevioletred: 0xdb7093,\n\tpapayawhip: 0xffefd5,\n\tpeachpuff: 0xffdab9,\n\tperu: 0xcd853f,\n\tpink: 0xffc0cb,\n\tplum: 0xdda0dd,\n\tpowderblue: 0xb0e0e6,\n\tpurple: 0x800080,\n\tpurple2: 0x7f007f,\n\tpurple3: 0xa020f0,\n\trebeccapurple: 0x663399,\n\tred: 0xff0000,\n\trosybrown: 0xbc8f8f,\n\troyalblue: 0x4169e1,\n\tsaddlebrown: 0x8b4513,\n\tsalmon: 0xfa8072,\n\tsandybrown: 0xf4a460,\n\tseagreen: 0x2e8b57,\n\tseashell: 0xfff5ee,\n\tsienna: 0xa0522d,\n\tsilver: 0xc0c0c0,\n\tskyblue: 0x87ceeb,\n\tslateblue: 0x6a5acd,\n\tslategray: 0x708090,\n\tslategrey: 0x708090,\n\tsnow: 0xfffafa,\n\tspringgreen: 0x00ff7f,\n\tsteelblue: 0x4682b4,\n\ttan: 0xd2b48c,\n\tteal: 0x008080,\n\tthistle: 0xd8bfd8,\n\ttomato: 0xff6347,\n\tturquoise: 0x40e0d0,\n\tviolet: 0xee82ee,\n\twheat: 0xf5deb3,\n\twhite: 0xffffff,\n\twhitesmoke: 0xf5f5f5,\n\tyellow: 0xffff00,\n\tyellowgreen: 0x9acd32,\n}\n\n/**\n * Return a new [[CubeHelix]].\n *\n * @example chroma.cubehelix() // use the default helix\n * @example chroma.cubehelix().start(200).rotations(-0.5).gamma(0.8).lightness([0.3, 0.8])\n */\nexport function cubehelix(\n\tstart = 300,\n\trotations = -1.5,\n\thue: number | [number, number] = 1,\n\tgamma = 1,\n\tlightness: number | [number, number] = [0, 1],\n) {\n\tconst f: CubeHelix = (t => f.at(t)) as CubeHelix\n\t;(Object.getOwnPropertyNames(CubeHelix.prototype) as (keyof typeof CubeHelix)[]).forEach(\n\t\tkey => (f[key] = CubeHelix.prototype[key]),\n\t)\n\tf.start(start)\n\tf.rotations(rotations)\n\tf.hue(hue)\n\tf.gamma(gamma)\n\tf.lightness(lightness)\n\treturn f\n}\n\n/**\n * [Dave Green's cubehelix color scheme](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/)!\n *\n * A CubeHelix is a function defined on [0, 1] which returns colors.\n */\nexport interface CubeHelix {\n\t(f: number): Color\n}\nexport class CubeHelix {\n\tprivate _start!: number\n\tprivate _rotations!: number\n\tprivate _gamma!: number\n\tprivate _hue!: [number, number]\n\tprivate _lightness!: [number, number]\n\tpublic start(s: number) {\n\t\tif (undefined === s) {\n\t\t\treturn this._start\n\t\t}\n\t\tthis._start = s\n\t\treturn this\n\t}\n\tpublic rotations(r: number) {\n\t\tif (undefined === r) {\n\t\t\treturn this._rotations\n\t\t}\n\t\tthis._rotations = r\n\t\treturn this\n\t}\n\tpublic gamma(g: number) {\n\t\tif (undefined === g) {\n\t\t\treturn this._gamma\n\t\t}\n\t\tthis._gamma = g\n\t\treturn this\n\t}\n\tpublic hue(h: number | [number, number]) {\n\t\tif (undefined === h) {\n\t\t\treturn this._hue\n\t\t}\n\t\tthis._hue = Array.isArray(h) ? h : [h, h]\n\t\treturn this\n\t}\n\tpublic lightness(h: number | [number, number]) {\n\t\tif (undefined === h) {\n\t\t\treturn this._lightness\n\t\t}\n\t\tthis._lightness = Array.isArray(h) ? h : [h, h]\n\t\treturn this\n\t}\n\n\t/**\n\t * Convert to a [[Scale]].\n\t *\n\t * @example chroma.cubehelix().scale().correctLightness().domain(2, 22)\n\t */\n\tpublic scale() {\n\t\treturn scale(this)\n\t}\n\n\tpublic at(fract: number) {\n\t\tconst a = TWOPI * ((this._start + 120) / 360 + this._rotations * fract)\n\t\tconst l = lerp(this._lightness[0], this._lightness[1], fract) ** this._gamma\n\t\tconst h = lerp(this._hue[0], this._hue[1], fract)\n\t\tconst amp = (h * l * (1 - l)) / 2\n\t\tconst cos_a = cos(a)\n\t\tconst sin_a = sin(a)\n\t\tconst r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a)\n\t\tconst g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a)\n\t\tconst b = l + amp * (+1.97294 * cos_a)\n\t\treturn rgb([r * 255, g * 255, b * 255, 1])\n\t}\n}\n\n/**\n * Create a new random [Color] from a random point in the RGB color space.\n * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\n *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\n */\nexport function random(randomSource = Math.random) {\n\treturn num((randomSource() * 0x1_00_00_00) | 0)\n}\n\n/**\n * Create a valid RGB color (`.clipped() == false`) from a random point in the CIELAB color space. This results in\n * more colors in the RGB color space where humans can perceive more differences.\n * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\n *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\n * @example chroma.random((() => { let i = 0; return () => (i = (i *Math.SQRT2) % 1); })())\n */\n// export function randomLab(randomSource = Math.random) {\n// \tconst labAMin = -87,\n// \t\tlabAMax = 99,\n// \t\tlabBMin = -108,\n// \t\tlabBMax = 95\n// \tlet maxIterations = 100\n// \twhile (maxIterations--) {\n// \t\tconst u = randomSource(),\n// \t\t\tv = randomSource(),\n// \t\t\tw = randomSource()\n// \t\t// The following matrix multiplication transform the random point (u v w) in the unit cube into the\n// \t\t// oriented bounding box (OBB) of the projection of the RGB space into the LAB space. This is necessary to\n// \t\t// avoid a huge number of misses.\n// \t\tconst color = lab(\n// \t\t\tu * -53.903 + v * -88.755 + w * 71.7 + 99.707,\n// \t\t\tu * -82.784 + v * 187.036 + w * -2.422 + -28.17,\n// \t\t\tu * -75.813 + v * -141.406 + w * -48.261 + 152.469,\n// \t\t)\n// \t\tconsole.log(color.lab())\n// \t\tconsole.log(color.rgba(false, false))\n// \t\tif (!color.clipped()) return color\n// \t}\n// \tthrow new Error(\"Could find a random color in 100 iterations\")\n// }\n\n/**\n * Mixes two colors. The mix ratio is a value between 0 and 1.\n * The color mixing produces different results based the color space used for interpolation.\n *\n * @param col2\n * @param f\n * @param m\n * @example chroma.mix('red', 'blue')\n * @example chroma.mix('red', 'blue', 0.25)\n * @example chroma.mix('red', 'blue', 0.75)\n *\n * @example chroma.mix('red', 'blue', 0.5, 'rgb')\n * @example chroma.mix('red', 'blue', 0.5, 'hsl')\n * @example chroma.mix('red', 'blue', 0.5, 'lab')\n * @example chroma.mix('red', 'blue', 0.5, 'lch')\n * @example chroma.mix('red', 'blue', 0.5, 'lrgb')\n */\nexport function mix(col1: Chromable, col2: Chromable, f = 0.5, m: InterpolationMode = \"rgb\") {\n\tconst c1 = color(col1)\n\tconst c2 = color(col2)\n\tconst res = interpolators[m] && ((interpolators as any)[m](c1, c2, f, m) as Color)\n\tif (!res) {\n\t\tthrow new Error(\"color mode \" + m + \" is not supported\")\n\t}\n\treturn res.alpha(lerp(c1.alpha(), c2.alpha(), f))\n}\n\n/**\n * Parse a CSS color. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color) for all the possible\n * variants.\n *\n * @example chroma.css('hsl(2rad 90% 50% / 0.9)')\n * @example chroma.css('laserlemon')\n */\nexport function css(cssString: string) {\n\tconst [r, g, b, a] = css2rgb(cssString)\n\treturn new Color(r, g, b, a)\n}\n\n/**\n * @example chroma.cmyk(0.2, 0.8, 0, 0)\n * @example chroma.color(0.2, 0.8, 0, 0, 'cmyk')\n */\nexport function cmyk(cmyk: CMYK): Color\nexport function cmyk(cyan1: number, magenta1: number, yellow1: number, key1: number): Color\nexport function cmyk(...args: any[]) {\n\treturn guess(args, \"cmyk\")\n}\n\n/**\n * @example chroma.gl(1, 1, 0, 1)\n */\nexport function gl(gl: RGBA | RGB): Color\n/**\n * @example chroma.gl([1, 0, 1, 0.5])\n */\nexport function gl(red1: number, green1: number, blue1: number, alpha1: number): Color\nexport function gl(...args: any[]) {\n\treturn guess(args, \"gl\")\n}\n\nexport function hcg(hcg: HCG): Color\n/**\n * @param alpha1 default=1\n */\nexport function hcg(h: number, c: number, g: number, alpha1?: number): Color\nexport function hcg(...args: any[]) {\n\treturn guess(args, \"hcg\")\n}\n\nexport function lch(lch: LCH): Color\n/**\n * @param alpha1 default=1\n */\nexport function lch(h: number, c: number, l: number, alpha1?: number): Color\nexport function lch(...args: any[]) {\n\treturn guess(args, \"lch\")\n}\n\nexport function hsi(hsi: HSI): Color\n/**\n * @param alpha1 default=1\n */\nexport function hsi(h: number, s: number, i: number, alpha1?: number): Color\nexport function hsi(...args: any[]) {\n\treturn guess(args, \"hsi\")\n}\n\nexport function hsl(hsl: HSL): Color\n/**\n * @param alpha1 default=1\n * @example chroma.hsl(30, 1, 0.5)\n * @example chroma.hsl(30, 0.6, 0.5)\n */\nexport function hsl(hueDegrees: number, saturation1: number, lightness1: number, alpha1?: number): Color\nexport function hsl(...args: any[]) {\n\treturn guess(args, \"hsl\")\n}\n\nexport function hsv(hsv: LAB): Color\nexport function hsv(h: number, s: number, v: number): Color\nexport function hsv(...args: any[]) {\n\treturn guess(args, \"hsv\")\n}\n\n/**\n *\n * @param temperature\n * @example chroma.kelvin(2000) // candle light\n * @example chroma.kelvin(3500) // sunset\n * @example chroma.kelvin(6500) // daylight\n * @example x0_1 => chroma.kelvin(x0_1 * 30000) // effective range: [0; 30000]\n */\nexport function kelvin(temperature: number) {\n\tconst [r, g, b] = kelvin2rgb(temperature)\n\treturn new Color(r, g, b)\n}\n\nexport function lab(lab: LAB): Color\n/**\n * @param alpha1 default=1\n */\nexport function lab(lightness1: number, a1: number, b: number, alpha1?: number): Color\nexport function lab(...args: any[]) {\n\treturn guess(args, \"lab\")\n}\n\n/**\n * @example chroma.num(0x663399) // rebeccapurple\n */\nexport function num(num: number) {\n\tconst [r, g, b] = num2rgb(num)\n\treturn new Color(r, g, b)\n}\n\nexport function rgb(rgb: RGBA | RGB): Color\n/**\n * @param alpha1 default=1\n * @example chroma.rgb(0, 100, 200)\n */\nexport function rgb(red255: number, green255: number, blue255: number, alpha1?: number): Color\nexport function rgb(...args: any[]) {\n\treturn guess(args, \"rgb\")\n}\n\nexport function xyz(xyz: XYZ): Color\n/** @param alpha1 default=1 */\nexport function xyz(x1: number, y1: number, z1: number, alpha1?: number): Color\nexport function xyz(...args: any[]) {\n\treturn guess(args, \"xyz\")\n}\n\n/**\n * Similar to mix, but accepts more than two colors.\n *\n * @example colors = ['#ddd', 'yellow', 'red', 'teal']\n * @example chroma.average(colors) // default = 'rgb'\n * @example chroma.average(colors, 'lab')\n * @example chroma.average(colors, 'lch')\n * @example chroma.average(colors, 'lrgb')\n * @example chroma.average(['red', 'rgba(0,0,0,0.5)']).css()\n */\nexport function average(chromables: Chromable[], mode: InterpolationMode = \"rgb\") {\n\tconst colors = chromables.map(c => color(c))\n\tif (mode == \"lrgb\") {\n\t\treturn _average_lrgb(colors)\n\t}\n\tif (mode == \"num\") {\n\t\tlet numSum = 0,\n\t\t\talphaSum = 0\n\t\tfor (const col of colors) {\n\t\t\tnumSum += col.num()\n\t\t\talphaSum += col.alpha()\n\t\t}\n\t\treturn num(numSum / colors.length).alpha(alphaSum / colors.length)\n\t}\n\tconst xyz = [0, 0, 0]\n\tlet dx = 0\n\tlet dy = 0\n\tlet alphaSum = 0\n\tfor (const c of colors) {\n\t\tconst xyz2 = c[mode]()\n\t\talphaSum += c.alpha()\n\t\tconsole.log(alphaSum)\n\n\t\tfor (let i = 0; i < xyz.length; i++) {\n\t\t\tif (mode.charAt(i) == \"h\") {\n\t\t\t\tconst A = xyz2[i] * DEG2RAD\n\t\t\t\tdx += cos(A)\n\t\t\t\tdy += sin(A)\n\t\t\t} else {\n\t\t\t\txyz[i] += xyz2[i]\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < xyz.length; i++) {\n\t\tif (mode.charAt(i) == \"h\") {\n\t\t\tconst A = atan2(dy / colors.length, dx / colors.length) * RAD2DEG\n\t\t\txyz[i] = (A + 360) % 360\n\t\t} else {\n\t\t\txyz[i] = xyz[i] / colors.length\n\t\t}\n\t}\n\treturn guess(xyz, mode).alpha(alphaSum / colors.length)\n}\n\n/**\n *\n * @param chromables\n * @example chroma.scale('black', 'red', 'gold') // linear interpolation\n * @example chroma.bezier('black', 'red', 'gold') // bezier interpolation\n */\nexport function bezier(chromables: Chromable[]): { (t: number): Color; scale(): Scale }\nexport function bezier(...chromables: Chromable[]): { (t: number): Color; scale(): Scale }\nexport function bezier(...args: any[]) {\n\tconst chromables: Chromable[] = Array.isArray(args[0]) ? args[0] : args\n\tconst f = _bezier(chromables) as { (t: number): Color; scale(): Scale }\n\tf.scale = CubeHelix.prototype.scale\n\treturn f\n}\n\n/**\n * Blends two colors using RGB channel-wise blend functions.\n * @param bottom\n * @param top\n * @param mode\n * @example chroma.blend('4CBBFC', 'EEEE22', 'multiply')\n * @example chroma.blend('4CBBFC', 'EEEE22', 'darken')\n * @example chroma.blend('4CBBFC', 'EEEE22', 'lighten')\n */\nexport function blend(bottom: Chromable, top: Chromable, mode: BlendMode) {\n\tif (!blend_fs[mode]) {\n\t\tthrow new Error(\"unknown blend mode \" + mode)\n\t}\n\treturn blend_fs[mode](bottom, top)\n}\nexport type BlendMode = keyof typeof blend_fs\nnamespace blend_fs {\n\texport const normal = blend_f(each((a, _) => a))\n\texport const multiply = blend_f(each((a, b) => (a * b) / 255))\n\texport const screen = blend_f(each(_screen))\n\texport const overlay = blend_f(each(_overlay))\n\texport const darken = blend_f(each(min))\n\texport const lighten = blend_f(each(max))\n\texport const dodge = blend_f(each(_dodge))\n\texport const burn = blend_f(each(_burn))\n}\n\n/**\n * @param colors\n * @example scale = chroma.scale(['yellow', '008ae5'])\n * @example scale(0.25)\n * @example scale(0.5)\n * @example scale(0.75)\n * @example chroma.scale('Viridis')\n */\nexport function scale(colors: Chromable[] | keyof typeof brewer | ((f: number) => Color)): Scale\nexport function scale(...colors: Chromable[]): Scale\nexport function scale(...args: any[]) {\n\tconst f: Scale = (t => (f as any)._at(t)) as Scale\n\t;(Object.getOwnPropertyNames(Scale.prototype) as (keyof typeof Scale)[]).forEach(\n\t\tkey => (f[key] = Scale.prototype[key]),\n\t)\n\tif (Array.isArray(args[0])) args = args[0]\n\tif (args.length == 1 && \"string\" == typeof args[0]) args = brewer[args[0] as keyof typeof brewer]\n\t;(f as any)._init(\"function\" == typeof args[0] ? args[0] : args.map(a => color(a)))\n\t//f.setColors(args.length > 1 ? args : args[0])\n\treturn f\n}\n/**\n * A color scale, created with scale, is a function that maps numeric values to a color palette.\n *\n * The type parameter describes the output type and can be changed with out(). Defaults to Color objects.\n *\n * @param T The output format. default=Color\n * @example chroma.scale('Purples')\n * @example chroma.scale('Purples')(0.4)\n */\nexport interface Scale<T = Color> {\n\t(val: number): T\n}\nexport class Scale<T = Color> {\n\tprivate _colors!: Color[] | ((t: number) => Color)\n\tprivate _classes!: number[] | undefined\n\t/**\n\t * Color cache. undefined if the cache should not be used.\n\t */\n\tprivate _cache!: Map<number, Color> | undefined\n\tprivate _correctLightness!: boolean\n\tprivate _gamma!: number\n\tprivate _mode!: InterpolationMode\n\tprivate _out!: ColorFormat | undefined\n\tprivate _min!: number\n\tprivate _max!: number\n\tprivate _paddingLeft!: number\n\tprivate _paddingRight!: number\n\t// positions of the colors on the interval [0, 1]. guaranteed to have the same length as _colors\n\t// undefined when _colors is a function\n\tprivate _pos: number[] | undefined\n\n\t/**\n\t * Get the current scale classes.\n\t */\n\tpublic classes(): number[]\n\t/**\n\t * Make the scale return a number of distint color instead of a continuous gradient.\n\t * If you pass a number the scale will broken into equi-distant classes:\n\t *\n\t * @example chroma.scale('OrRd') // continous\n\t * @example chroma.scale('OrRd').classes(5) // equidistant classes\n\t * @example chroma.scale('OrRd').classes(8)\n\t *\n\t * @example chroma.scale('OrRd').classes([0, 6, 11, 17, 20]) // also sets domain\n\t */\n\tpublic classes(classes: number | number[]): this\n\tpublic classes(classes?: number | number[]) {\n\t\tif (undefined === classes) {\n\t\t\treturn this._classes\n\t\t}\n\t\tif (Array.isArray(classes)) {\n\t\t\tthis._classes = classes\n\t\t\tthis.domain(classes[0], classes[classes.length - 1])\n\t\t} else {\n\t\t\tif (classes % 1 != 0 || classes < 1) throw new Error(\"invalid classes param\")\n\t\t\t// const d = analyze(this.domain())\n\t\t\tthis._classes = limits(this.domain(), \"e\", classes)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the domain.\n\t * @return If _colors is a function, [this._min, this._max]. If _colors is an array of colors, an array with the\n\t * same length as the number of colors.\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 20).domain() // == [0, 10, 20]\n\t */\n\tpublic domain(): number[]\n\t/**\n\t * Set the domain interval on which the scale is defined. Colors are distributed equidistantly along the\n\t * interval.\n\t * @param start\n\t * @param end\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 100)(50) // == white\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 0.25, 1).domain(0, 100).domain() // == [0, 25, 100]\n\t */\n\tpublic domain(start: number, end: number): this\n\t/**\n\t * Set the domain interval and the individual positions of the colors. The number of passed values must match\n\t * the number of colors which define the scale. Not valid if the scale is defined by a function.\n\t * @param domain The positions of all scale colors. Values must be in ascending order and should not have\n\t * duplicates.\n\t * @return `this`\n\t * @example scale = chroma.scale(\"red\", \"white\", \"blue\").domain(0, 25, 100)\n\t * @example scale(25) // == white\n\t * @example scale(100) // == blue\n\t * @example scale(50) // == #aaaaff\n\t */\n\tpublic domain(...domain: number[]): this\n\tpublic domain(...domain: number[]): number[] | this {\n\t\tif (undefined === domain[0]) {\n\t\t\treturn \"function\" !== typeof this._colors\n\t\t\t\t? this._pos!.map(p => lerp(this._min, this._max, p))\n\t\t\t\t: [this._min, this._max]\n\t\t}\n\t\tthis._min = domain[0]\n\t\tthis._max = domain[domain.length - 1]\n\t\tif (2 == domain.length) {\n\t\t\tif (\"function\" !== typeof this._colors) {\n\t\t\t\t// equidistant positions\n\t\t\t\tthis._pos = this._colors.map((_, c) => c / (this._colors.length - 1))\n\t\t\t}\n\t\t} else if (\"function\" !== typeof this._colors && domain.length == this._colors.length) {\n\t\t\tthis._pos = domain.map(d => lerpInv(this._min, this._max, d))\n\t\t} else {\n\t\t\tthrow new Error(\"invalid domain \" + domain)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the interpolation mode used when calculating colors.\n\t */\n\tpublic mode(): InterpolationMode\n\t/**\n\t * Set the interpolation mode used when calculating colors. The defaut mode is \"rgb\".\n\t * See also {@link chroma#mix}\n\t * @param mode the mode to set.\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"green\").mode(\"lab\")\n\t * @example chroma.scale(\"red\", \"green\").mode(\"lrgb\")\n\t */\n\tpublic mode(mode: InterpolationMode): this\n\tpublic mode(mode?: InterpolationMode) {\n\t\tif (undefined === mode) {\n\t\t\treturn this._mode\n\t\t}\n\t\tthis._mode = mode\n\t\tthis._resetCache()\n\t\treturn this\n\t}\n\n\t/**\n\t * Set the output format return by `this(x)` and `this.colors(n)`.\n\t * @param outputFormat The color format to use. Pass `undefined` to return [Color] objects.\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"white\").out(\"hex\")(0) // == \"#ff0000\"\n\t * @example chroma.scale(\"red\", \"white\").out(\"num\").colors(2) // == [0xff0000, 0xffffff]\n\t */\n\tpublic out<M extends ColorFormat | undefined>(\n\t\toutputFormat: M,\n\t): Scale<M extends ColorFormat ? ReturnType<Color[M]> : Color> {\n\t\tthis._out = outputFormat\n\t\treturn this as any\n\t}\n\n\t/**\n\t * This makes sure the lightness range is spread evenly across a color scale. Especially useful when working\n\t * with [multi-hue color scales](https://www.vis4.net/blog/2013/09/mastering-multi-hued-color-scales/), where\n\t * simple gamma correction can't help you very much.\n\t *\n\t * @example chroma.scale('black','red','yellow','white')\n\t * @example chroma.scale('black','red','yellow','white').correctLightness()\n\t */\n\tpublic correctLightness(enableCorrectLightness = true) {\n\t\tif (this._correctLightness != enableCorrectLightness) {\n\t\t\tthis._resetCache()\n\t\t\tconst colors = this._colors\n\t\t\tif (enableCorrectLightness && \"function\" !== typeof colors) {\n\t\t\t\t// make sure that the colors have ascending or descending lightnesses\n\t\t\t\tlet sign = 0\n\t\t\t\tfor (let i = 1; i < colors.length; i++) {\n\t\t\t\t\tconst sign2 = colors[i].lab()[0] - colors[i - 1].lab()[0]\n\t\t\t\t\tif (0 == sign) {\n\t\t\t\t\t\tsign = sign2\n\t\t\t\t\t} else if (sign * sign2 < 0) {\n\t\t\t\t\t\tthrow new Error(\"scale color lightnesses must be monotonic\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._correctLightness = enableCorrectLightness\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the padding.\n\t * @returns [paddingLeft, paddingRight]\n\t */\n\tpublic padding(): [number, number]\n\t/**\n\t * Set the padding. Positive values will \"cut off\" the ends of gradient, while negative values will add a\n\t * section of constant color at the ends.\n\t * @example chroma.scale(\"red\", \"white\").padding(0.2)\n\t * @example chroma.scale(\"red\", \"white\").padding(0.1)(0) // == color('#ff1a1a'), instead of red\n\t * @example chroma.scale(\"red\", \"white\").padding(-0.1)(0) // == color('red')\n\t * @param paddingLeft padding on left side.(lower-valued end of the interval).\n\t * @param paddingRight padding on right (higher-valued end of the interval).\n\t * default=paddingLeft\n\t */\n\tpublic padding(paddingLeft: number, paddingRight?: number): this\n\tpublic padding(paddingLeft?: number, paddingRight: number | undefined = paddingLeft) {\n\t\tif (!paddingLeft) {\n\t\t\treturn [this._paddingLeft, this._paddingRight]\n\t\t}\n\t\tthis._paddingLeft = paddingLeft\n\t\tthis._paddingRight = paddingRight!\n\t\treturn this\n\t}\n\n\t/**\n\t * Get a number of equidistant colors.\n\t * @param numColors The number of colors to return.\n\t * @param format Output format. Defaults to `\"hex\"`. Pass `false` to get {@link Color} objects.\n\t * @returns If `numColors` is `undefined`, the colors which define this [Scale]. If `numColors` is 1,\n\t * `[this((min + max) / 2)]`. Otherwise, an array where the first element is `this(min)`, the last one is\n\t * `this(max)` and the rest are equidistant samples between min and max.\n\t * @example chroma.scale('OrRd').colors(5)\n\t * @example chroma.scale(['white', 'black']).colors(12)\n\t */\n\tpublic colors(numColors?: number, format: ColorFormat | false = \"hex\"): T[] {\n\t\tlet result: Color[]\n\t\tif (undefined === numColors) {\n\t\t\tresult = (this._colors as Color[]).slice()\n\t\t} else if (numColors == 1) {\n\t\t\tresult = [this._color((this._min + this._max) / 2)]\n\t\t} else if (numColors > 1) {\n\t\t\tresult = Array.from({ length: numColors }, (_, i) =>\n\t\t\t\tthis._color(lerp(this._min, this._max, i / (numColors - 1))),\n\t\t\t)\n\t\t} else {\n\t\t\t// returns all colors based on the defined classes\n\t\t\tlet samples\n\t\t\tif (this._classes && this._classes.length > 2) {\n\t\t\t\tsamples = Array.from(\n\t\t\t\t\t{ length: this._classes.length - 1 },\n\t\t\t\t\t(_, i) => (this._classes![i] + this._classes![i + 1]) * 0.5,\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsamples = this.domain() // TODO?!\n\t\t\t}\n\t\t\tresult = samples.map(s => this._color(s))\n\t\t}\n\n\t\treturn (format ? result.map(c => c[format]()) : result) as any\n\t}\n\n\t/**\n\t * Get whether the cache is enabled. Defaults to true.\n\t */\n\tpublic cache(): boolean\n\t/**\n\t * Enable or disable the cache.\n\t * @param enableCache Whether the cache should be enabled.\n\t */\n\tpublic cache(enableCache: boolean): this\n\tpublic cache(enableCache?: boolean) {\n\t\tif (undefined === enableCache) {\n\t\t\treturn !!this._cache\n\t\t}\n\t\tthis._cache = enableCache ? this._cache || new Map() : undefined\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the current gamma value. Defaults to 1.\n\t */\n\tpublic gamma(): number\n\t/**\n\t * Set the gamma value. Gamma-correction can be used to \"shift\" a scale's center more the the beginning (gamma <\n\t * 1) or end (gamma > 1), typically used to \"even\" the lightness gradient. Default is 1.\n\t * @example chroma.scale('YlGn').gamma(0.5)\n\t * @example chroma.scale('YlGn').gamma(1)\n\t * @example chroma.scale('YlGn').gamma(2)\n\t */\n\tpublic gamma(gamma: number): this\n\tpublic gamma(gamma?: number) {\n\t\tif (undefined === gamma) {\n\t\t\treturn this._gamma\n\t\t}\n\t\tthis._gamma = gamma\n\t\treturn this\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _at(t: number) {\n\t\tconst c = this._color(t)\n\t\treturn this._out ? c[this._out]() : c\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _init(colorsOrFunction: Color[] | ((t: number) => Color)) {\n\t\tthis._colors = colorsOrFunction\n\t\tif (\"function\" != typeof colorsOrFunction) {\n\t\t\tthis._pos = colorsOrFunction.map((_, i) => i / (colorsOrFunction.length - 1))\n\t\t}\n\t\tthis._mode = \"rgb\"\n\t\tthis.domain(0, 1)\n\t\tthis._paddingLeft = 0\n\t\tthis._paddingRight = 0\n\t\tthis._correctLightness = false\n\t\tthis._cache = new Map()\n\t\tthis._gamma = 1\n\t}\n\n\tprivate _getClass(value: number) {\n\t\treturn this._classes!.findIndex(cls => value <= cls) - 1\n\t}\n\n\tprivate _color(val: number, bypassMap = false) {\n\t\tlet t\n\t\tif (!bypassMap) {\n\t\t\tconst min = this._min,\n\t\t\t\tmax = this._max\n\t\t\tif (this._classes && this._classes.length > 2) {\n\t\t\t\tconst c = this._getClass(val)\n\t\t\t\tt = c / (this._classes.length - 2)\n\t\t\t} else if (max !== min) {\n\t\t\t\tt = (val - min) / (max - min)\n\t\t\t} else {\n\t\t\t\tt = 1\n\t\t\t}\n\t\t\tif (this._correctLightness) {\n\t\t\t\tt = this._tCorrectedLightness(t)\n\t\t\t}\n\t\t} else {\n\t\t\tt = val\n\t\t}\n\t\tt = t ** this._gamma\n\t\tt = (this._paddingLeft + t) / (1 + this._paddingLeft + this._paddingRight)\n\t\t//\tt = this._paddingLeft + t * (1 - this._paddingLeft - this._paddingRight)\n\t\tt = clamp(t, 0, 1)\n\t\tconst tHash = t\n\t\tconst cacheResult = this._cache && this._cache.get(tHash)\n\t\tif (cacheResult) {\n\t\t\treturn cacheResult\n\t\t} else {\n\t\t\tlet col: Color\n\t\t\tif (Array.isArray(this._colors)) {\n\t\t\t\tfor (let i = 0; i < this._pos!.length; i++) {\n\t\t\t\t\tconst p = this._pos![i]\n\t\t\t\t\tif (t <= p) {\n\t\t\t\t\t\tcol = this._colors[i]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (t >= p && i == this._pos!.length - 1) {\n\t\t\t\t\t\tcol = this._colors[i]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (t > p && t < this._pos![i + 1]) {\n\t\t\t\t\t\tt = (t - p) / (this._pos![i + 1] - p)\n\t\t\t\t\t\tcol = mix(this._colors[i], this._colors[i + 1], t, this._mode)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcol = this._colors(t)\n\t\t\t}\n\t\t\tif (this._cache) {\n\t\t\t\t// tslint:disable-next-line\n\t\t\t\tthis._cache.set(tHash, col!)\n\t\t\t}\n\t\t\t// tslint:disable-next-line\n\t\t\treturn col!\n\t\t}\n\t}\n\tprivate _tCorrectedLightness(t0_1: number) {\n\t\tconst L0 = this._color(0, true).lab()[0]\n\t\tconst L1 = this._color(1, true).lab()[0]\n\t\tconst L_ideal = lerp(L0, L1, t0_1)\n\t\treturn bisect(t => this._color(t, true).lab()[0] - L_ideal, 0, 1, 8)\n\t}\n\tprivate _resetCache() {\n\t\tif (this._cache) this._cache.clear()\n\t}\n}\n\nexport namespace scales {\n\t/**\n\t * @example chroma.scales.cool()\n\t */\n\texport function cool() {\n\t\treturn scale([hsl(180, 1, 0.9), hsl(250, 0.7, 0.4)])\n\t}\n\n\t/**\n\t * @example chroma.scales.hot()\n\t */\n\texport function hot() {\n\t\treturn scale([\"#000\", \"#f00\", \"#ff0\", \"#fff\"]).mode(\"rgb\")\n\t}\n}\n\n/**\n * Computes the WCAG contrast ratio between two colors. A minimum contrast of 4.5:1\n * [is recommended](http://www.w3.org/TR/WCAG20-TECHS/G18.html) to ensure that text is still readable against a\n * background color.\n *\n * @param a\n * @param b\n */\nexport function contrast(a: Chromable, b: Chromable) {\n\tconst l1 = color(a).luminance()\n\tconst l2 = color(b).luminance()\n\tif (l1 > l2) {\n\t\treturn (l1 + 0.05) / (l2 + 0.05)\n\t} else {\n\t\treturn (l2 + 0.05) / (l1 + 0.05)\n\t}\n}\n\n/**\n * Compute the [euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance#Three_dimensions) between two\n * colors in a given color space.\n * @param a First color.\n * @param b Second color.\n * @param mode The color space in which to compute the distance. Defaults to \"lab\".\n * @example chroma.distance('#fff', '#ff0', 'rgb')\n * @example chroma.distance('#fff', '#f0f', 'rgb')\n * @example chroma.distance('#fff', '#ff0')\n * @example chroma.distance('#fff', '#f0f')\n */\nexport function distance(a: Chromable, b: Chromable, mode: ColorMode = \"lab\") {\n\tconst l1 = color(a)[mode]()\n\tconst l2 = color(b)[mode]()\n\tconst channelDifferences = l1.map((channelValue: number, channelIndex: number) => channelValue - l2[channelIndex])\n\treturn hypot(...channelDifferences)\n}\n\n/**\n * Computes color difference as developed by the Colour Measurement Committee of the Society of Dyers and Colourists\n * (CMC) in 1984. The implementation is adapted from Bruce Lindbloom. The parameters L and C are weighting factors\n * for lightness and chromaticity.\n * @param reference\n * @param sample\n * @param L\n * @param C\n * @example [r = '#ededee', s = '#edeeed', chroma.deltaE(r, s)]\n * @example [r = '#ececee', s = '#eceeec', chroma.deltaE(r, s)]\n * @example [r = '#e9e9ee', s = '#e9eee9', chroma.deltaE(r, s)]\n * @example [r = '#e4e4ee', s = '#e4eee4', chroma.deltaE(r, s)]\n * @example [r = '#e0e0ee', s = '#e0eee0', chroma.deltaE(r, s)]\n */\nexport function deltaE(reference: Chromable, sample: Chromable, L = 1, C = 1) {\n\tconst [L1, a1, b1] = color(reference).lab()\n\tconst [L2, a2, b2] = color(sample).lab()\n\tconst c1 = sqrt(a1 * a1 + b1 * b1)\n\tconst c2 = sqrt(a2 * a2 + b2 * b2)\n\tconst sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1)\n\tconst sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638\n\tconst h1 = norm360(c1 < 0.000001 ? 0.0 : atan2(b1, a1) * RAD2DEG)\n\tconst t =\n\t\th1 >= 164.0 && h1 <= 345.0\n\t\t\t? 0.56 + abs(0.2 * cos((h1 + 168.0) * DEG2RAD))\n\t\t\t: 0.36 + abs(0.4 * cos((h1 + 35.0) * DEG2RAD))\n\tconst c4 = c1 * c1 * c1 * c1\n\tconst f = sqrt(c4 / (c4 + 1900.0))\n\tconst sh = sc * (f * t + 1.0 - f)\n\tconst delL = L1 - L2\n\tconst delC = c1 - c2\n\tconst delA = a1 - a2\n\tconst delB = b1 - b2\n\tconst dH2 = delA * delA + delB * delB - delC * delC\n\tconst v1 = delL / (L * sl)\n\tconst v2 = delC / (C * sc)\n\tconst v3 = sh\n\treturn sqrt(v1 * v1 + v2 * v2 + dH2 / (v3 * v3))\n}\ntype DataInfo = {\n\tmin: number\n\tmax: number\n\tsum: number\n\tvalues: number[]\n\tcount: number\n\tdomain: [number, number]\n\tlimits(mode: LimitsMode, num: number): number[]\n}\nexport function analyze(data: number[]): DataInfo {\n\tconst r: DataInfo = {\n\t\tmin: Infinity,\n\t\tmax: -Infinity,\n\t\tsum: 0,\n\t\tvalues: [] as number[],\n\t\tcount: 0,\n\t} as DataInfo\n\tfunction add(val: number) {\n\t\tif (val != undefined && !isNaN(val)) {\n\t\t\tr.values.push(val)\n\t\t\tr.sum += val\n\t\t\tif (val < r.min) r.min = val\n\t\t\tif (val > r.max) r.max = val\n\t\t\tr.count += 1\n\t\t}\n\t}\n\tdata.forEach(val => add(val))\n\tr.domain = [r.min, r.max]\n\tr.limits = function(mode, num) {\n\t\treturn limits(this, mode, num)\n\t}\n\treturn r\n}\n\ntype LimitsMode = \"c\" | \"e\" | \"q\" | \"l\" | \"k\"\nexport function limits(data: number[] | DataInfo, mode: LimitsMode = \"e\", num = 7): number[] {\n\tconst info = Array.isArray(data) ? analyze(data) : data\n\tconst { min, max, values } = info\n\tvalues.sort((a, b) => a - b)\n\tif (num == 1) {\n\t\treturn [min, max]\n\t}\n\tif (mode.startsWith(\"c\")) {\n\t\treturn [min, max]\n\t} else if (mode.startsWith(\"e\")) {\n\t\treturn Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\n\t} else if (mode.startsWith(\"l\")) {\n\t\tif (min <= 0) {\n\t\t\tthrow new Error(\"Logarithmic scales are only possible for values > 0\")\n\t\t}\n\t\tconst min_log = Math.LOG10E * log(min)\n\t\tconst max_log = Math.LOG10E * log(max)\n\t\treturn Array.from({ length: num + 1 }, (_, i) => 10 ** lerp(min_log, max_log, i / num))\n\t} else if (mode.startsWith(\"q\")) {\n\t\treturn Array.from({ length: num + 1 }, (_, i) => {\n\t\t\tconst p = ((values.length - 1) * i) / num\n\t\t\tconst pb = floor(p)\n\t\t\treturn pb == p ? values[pb] : lerp(values[pb], values[pb + 1], p - pb)\n\t\t})\n\t} else if (mode.startsWith(\"k\")) {\n\t\t// implementation based on\n\t\t// http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n\t\t// simplified for 1-d input values\n\t\tconst n = values.length\n\t\tconst assignments = new Array(n)\n\t\tconst clusterSizes = new Array(num)\n\t\tlet repeat = true\n\t\tlet nb_iters = 0\n\t\tlet centroids = Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\n\t\tdo {\n\t\t\t// assignment step\n\t\t\tclusterSizes.fill(0)\n\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\tconst value = values[i]\n\t\t\t\tconst minDistIndex = indexOfMax(centroids, c => -abs(c - value))\n\t\t\t\tclusterSizes[minDistIndex]++\n\t\t\t\tassignments[i] = minDistIndex\n\t\t\t}\n\n\t\t\t// update centroids step\n\t\t\tconst newCentroids = new Array(num).fill(0)\n\t\t\tfor (let i = 0; i < assignments.length; i++) {\n\t\t\t\tconst cluster = assignments[i]\n\t\t\t\tnewCentroids[cluster] += values[i]\n\t\t\t}\n\t\t\tfor (let j = 0; j < newCentroids.length; j++) {\n\t\t\t\tnewCentroids[j] /= clusterSizes[j]\n\t\t\t}\n\n\t\t\t// check convergence\n\t\t\trepeat = newCentroids.some((nc, j) => nc != centroids[j])\n\t\t\tcentroids = newCentroids\n\t\t} while (nb_iters++ < 200 && repeat)\n\n\t\t// finished k-means clustering\n\t\t// the next part is borrowed from gabrielflor.it\n\t\tconst kClusters: number[][] = Array.from({ length: num }, () => [])\n\t\tfor (let i = 0; i < assignments.length; i++) {\n\t\t\tconst cluster = assignments[i]\n\t\t\tkClusters[cluster].push(values[i])\n\t\t}\n\t\tconst tmpKMeansBreaks = []\n\t\tfor (const kCluster of kClusters) {\n\t\t\ttmpKMeansBreaks.push(kCluster[0], kCluster[kCluster.length - 1])\n\t\t}\n\t\ttmpKMeansBreaks.sort((a, b) => a - b)\n\n\t\tconst limits = []\n\t\tlimits.push(tmpKMeansBreaks[0])\n\t\tfor (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\n\t\t\tconst v = tmpKMeansBreaks[i]\n\t\t\tif (!isNaN(v) && limits.indexOf(v) == -1) {\n\t\t\t\tlimits.push(v)\n\t\t\t}\n\t\t}\n\t\treturn limits\n\t} else {\n\t\tthrow new Error(\"unknown mode\")\n\t}\n}\n\nconst interpolators: { [K in InterpolationMode]?: (color1: Color, color2: Color, f: number, mode: K) => Color } = {}\n\n// const _guess_formats: { p: number; test: (args: any[]) => ColorFormat | undefined }[] = []\nconst _input: {\n\t[mode: string]: (...args: any[]) => RGB | RGBA\n} = {}\n\nfunction linear_interpolator(col1: Color, col2: Color, f: number, m: ColorMode) {\n\tconst xyz1 = col1[m]()\n\tconst xyz2 = col2[m]()\n\treturn guess(\n\t\t[\n\t\t\tlerp(xyz1[0], xyz2[0], f),\n\t\t\tlerp(xyz1[1], xyz2[1], f),\n\t\t\tlerp(xyz1[2], xyz2[2], f),\n\t\t\tlerp(col1.alpha(), col2.alpha(), f),\n\t\t],\n\t\tm,\n\t)\n}\ninterpolators.xyz = interpolators.rgb = interpolators.lab = linear_interpolator\n\ninterpolators.num = function(col1, col2, f) {\n\tconst n1 = col1.num()\n\tconst n2 = col2.num()\n\treturn num(lerp(n1, n2, f))\n}\n\ninterpolators.lrgb = function(col1, col2, f) {\n\tconst [r1, g1, b1, a1] = col1.rgba(false, false)\n\tconst [r2, g2, b2, a2] = col2.rgba(false, false)\n\treturn new Color(\n\t\tsqrt(r1 ** 2 * (1 - f) + r2 ** 2 * f),\n\t\tsqrt(g1 ** 2 * (1 - f) + g2 ** 2 * f),\n\t\tsqrt(b1 ** 2 * (1 - f) + b2 ** 2 * f),\n\t\tlerp(a1, a2, f),\n\t)\n}\n\nfunction _bezier(chromables: Chromable[]): (t: number) => Color {\n\tconst colors = chromables.map(c => color(c))\n\tconst [lab0, lab1, lab2, lab3] = colors.map(c => c.lab())\n\tif (2 == chromables.length) {\n\t\t// linear interpolation\n\t\treturn t => {\n\t\t\treturn lab([0, 1, 2].map(i => lerp(lab0[i], lab1[i], t)) as LAB)\n\t\t}\n\t} else if (3 == chromables.length) {\n\t\t// quadratic bezier interpolation\n\t\tconst bezier2 = (p0: number, p1: number, p2: number, t: number) =>\n\t\t\t(1 - t) ** 2 * p0 + 2 * (1 - t) * t * p1 + t ** 2 * p2\n\t\treturn t => lab([0, 1, 2].map(i => bezier2(lab0[i], lab1[i], lab2[i], t)) as LAB)\n\t} else if (4 == chromables.length) {\n\t\t// cubic bezier interpolation\n\t\tconst bezier3 = (p0: number, p1: number, p2: number, p3: number, t: number) =>\n\t\t\t(1 - t) ** 3 * p0 + 3 * (1 - t) ** 2 * t * p1 + 3 * (1 - t) * t ** 2 * p2 + t ** 3 * p3\n\t\treturn t => lab([0, 1, 2].map(i => bezier3(lab0[i], lab1[i], lab2[i], lab3[i], t)) as LAB)\n\t} else if (5 == chromables.length) {\n\t\tconst I0 = _bezier(colors.slice(0, 3))\n\t\tconst I1 = _bezier(colors.slice(2, 5))\n\t\treturn t => (t < 0.5 ? I0(t * 2) : I1((t - 0.5) * 2))\n\t} else throw new Error()\n}\n\nfunction guess(args: any[], mode?: ColorFormat): Color {\n\tif (Array.isArray(args[0])) args = args[0]\n\tif (!mode) {\n\t\tif (args.length == 1 && args[0] in w3cx11) {\n\t\t\tmode = \"name\"\n\t\t} else if (args.length == 1 && \"string\" == typeof args[0]) {\n\t\t\tmode = \"css\"\n\t\t} else if (args.length == 3) {\n\t\t\tmode = \"rgb\"\n\t\t} else if (args.length == 4 && \"number\" == typeof args[3] && args[3] >= 0 && args[3] <= 1) {\n\t\t\tmode = \"rgb\"\n\t\t} else if (args.length == 1 && \"number\" == typeof args[0] && args[0] >= 0 && args[0] <= 0xffffff) {\n\t\t\tmode = \"num\"\n\t\t} else throw new Error(\"could not guess mode. args \" + JSON.stringify(args))\n\t}\n\tconst channels = _input[mode](...args)\n\treturn new Color(channels[0], channels[1], channels[2], undefined !== channels[3] ? channels[3] : 1)\n}\n\nfunction _average_lrgb(colors: Color[]) {\n\tlet rSquareSum = 0,\n\t\tgSquareSum = 0,\n\t\tbSquareSum = 0,\n\t\talphaSum = 0\n\tfor (const col of colors) {\n\t\tconst [r, g, b, alpha] = col.rgba(false, false)\n\t\trSquareSum += r ** 2\n\t\tgSquareSum += g ** 2\n\t\tbSquareSum += b ** 2\n\t\talphaSum += alpha\n\t}\n\treturn new Color(\n\t\tsqrt(rSquareSum) / colors.length,\n\t\tsqrt(gSquareSum) / colors.length,\n\t\tsqrt(bSquareSum) / colors.length,\n\t\talphaSum / colors.length,\n\t)\n}\n\nfunction hex2rgb(hex: string): RGBA {\n\tlet m\n\tif ((m = hex.match(/^#?([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})?$/i))) {\n\t\treturn [parseInt(m[1], 16), parseInt(m[2], 16), parseInt(m[3], 16), m[4] ? parseInt(m[4], 16) / 255 : 1]\n\t} else if ((m = hex.match(/^#?([A-F\\d])([A-F\\d])([A-F\\d])([A-F\\d])?$/i))) {\n\t\treturn [\n\t\t\tparseInt(m[1], 16) * 0x11,\n\t\t\tparseInt(m[2], 16) * 0x11,\n\t\t\tparseInt(m[3], 16) * 0x11,\n\t\t\tm[4] ? (parseInt(m[4], 16) * 0x11) / 255 : 1,\n\t\t]\n\t}\n\tthrow new Error(\"invalid hex color: \" + hex)\n}\n// color mode, i.e. representation as array of number\nexport type ColorMode = \"rgb\" | \"cmyk\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"gl\" | \"lch\" | \"xyz\"\nexport type InterpolationMode = \"rgb\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"lch\" | \"xyz\" | \"lrgb\" | \"num\"\nexport type ColorFormat = ColorMode | \"hex\" | \"num\" | \"name\" | \"kelvin\" | \"css\"\n/**\n * CMYK color space\n * @see https://en.wikipedia.org/wiki/cmyk_color_model\n * [cyan, magenta, yellow, alpha1]\n */\ntype CMYK = [number, number, number, number]\n/**\n * WebGL colors. Like RGB, but floats in [0; 1] instead of 0-255.\n * [red255, green255, blue255, alpha1]\n */\ntype GL = [number, number, number, number]\n/**\n * Red, green, blue ranging from 0-255.\n * Can be floats and outside the above range internally.\n */\ntype RGB = [number, number, number]\n/**\n * RGB plus alpha ranging from 0-1\n * [red255, green255, blue255, alpha1]\n */\ntype RGBA = [number, number, number, number]\n/**\n * CIELAB color space\n * [lightness, A*, B*]\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space\n */\ntype LAB = [number, number, number]\n/**\n * Cylindrical representation of CIELAB\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#Cylindrical_representation:_CIELCh_or_CIEHLC\n *\n */\ntype LCH = [number, number, number]\n/**\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\n * [hueDegrees, saturation1, lightness1]\n */\ntype HSL = [number, number, number]\n/**\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\n * [hueDegrees, saturation1, value1]\n */\ntype HSV = [number, number, number]\n/**\n * @see https://en.wikipedia.org/w/index.php?title=HSI_color_space&redirect=no\n * [hueDegrees, saturation1, intensity1]\n */\ntype HSI = [number, number, number]\ntype XYZ = [number, number, number]\n/**\n * HCG Color Model\n * See https://github.com/acterhd/hcg-color\n * A color value in the HCG format is an array of three numbers [h, c, g], where\n * `h` is the hue as an angle in degrees [0; 360)\n * `c` is the chroma value in [0; 1]\n * `g` is the gray value in [0; 1]\n */\ntype HCG = [number, number, number]\n\n// interface ColorModes {\n// \tcmyk: CMYK\n// \tgl: GL\n// \trgb: RGB\n// \trgba: RGBA\n// \tlab: LAB\n// \thsl: HSL\n// \thsv: HSV\n// \thsi: HSI\n// \txyz: XYZ\n// \thcg: HCG\n// \tlch: LCH\n// \thex: string\n// \tnum: number\n// \tname: string\n// \tkelvin: number\n// \tcss: string\n// }\nfunction rgb2hex(r255: number, g255: number, b255: number, a1: number, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\tr255 = clamp(round(r255), 0, 255)\n\tg255 = clamp(round(g255), 0, 255)\n\tb255 = clamp(round(b255), 0, 255)\n\tconst rgb = (r255 << 16) | (g255 << 8) | b255\n\tconst rgbString = rgb.toString(16).padStart(6, \"0\")\n\tconst alphaString = round(clamp(a1) * 255)\n\t\t.toString(16)\n\t\t.padStart(2, \"0\")\n\treturn \"#\" + (\"argb\" == mode ? alphaString + rgbString : \"rgba\" == mode ? rgbString + alphaString : rgbString)\n}\n\n_input.lrgb = _input.rgb\n\n_input.hex = hex2rgb\n_input.hsl = hsl2rgb\nfunction norm360(degrees: number) {\n\treturn ((degrees % 360) + 360) % 360\n}\n\n_input.hsv = hsv2rgb\n\nfunction num2rgb(num: number): RGBA {\n\tif (!(\"number\" == typeof num && num >= 0 && num <= 0xffffff)) {\n\t\tthrow new Error(\"unknown num color: \" + num)\n\t}\n\tconst r = num >> 16\n\tconst g = (num >> 8) & 0xff\n\tconst b = num & 0xff\n\treturn [r, g, b, 1]\n}\n\nfunction rgb2num(r255: number, g255: number, b255: number, a1: number = 1, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\tconst rgbNum = (round(r255) << 16) | (round(g255) << 8) | round(b255)\n\tif (\"rgb\" === mode) {\n\t\treturn rgbNum\n\t} else if (\"rgba\" === mode) {\n\t\treturn (rgbNum << 8) | (round(a1 * 255) << 24)\n\t} else {\n\t\treturn (round(a1 * 255) << 24) | rgbNum\n\t}\n}\n\n_input.num = num2rgb\n\nconst WS = \"\\\\s*\"\nconst FLOAT = \"([+-]?(?:\\\\d*\\\\.?)?\\\\d+(?:[eE][+-]?\\\\d+)?)\"\nconst CSS_RGB_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT, \",\", FLOAT, \",\", FLOAT, \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_RGB_WS_REGEX = new RegExp([\"^rgba?\\\\(\", FLOAT, FLOAT, FLOAT, \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS), \"i\")\nconst CSS_RGB_PERCENT_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_RGB_WS_PERCENT_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_HSL_REGEX = new RegExp(\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(\n\t\tWS,\n\t),\n\t\"i\",\n)\nconst CSS_HSL_WS_REGEX = new RegExp(\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\\\\s+\" + FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nfunction css2rgb(css: string): RGBA {\n\tif (w3cx11 && (w3cx11 as any)[css.toLowerCase()]) {\n\t\treturn num2rgb((w3cx11 as any)[css.toLowerCase()])\n\t}\n\tlet m\n\tif ((m = css.match(CSS_RGB_REGEX) || css.match(CSS_RGB_WS_REGEX))) {\n\t\treturn [\n\t\t\tclamp(+m[1], 0, 255),\n\t\t\tclamp(+m[2], 0, 255),\n\t\t\tclamp(+m[3], 0, 255),\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\n\t\t]\n\t} else if ((m = css.match(CSS_RGB_PERCENT_REGEX) || css.match(CSS_RGB_WS_PERCENT_REGEX))) {\n\t\treturn [\n\t\t\tclamp(+m[1] / 100) * 255,\n\t\t\tclamp(+m[2] / 100) * 255,\n\t\t\tclamp(+m[3] / 100) * 255,\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\n\t\t]\n\t} else if ((m = css.match(CSS_HSL_REGEX) || css.match(CSS_HSL_WS_REGEX))) {\n\t\tconst CONVERSION = { deg: 1, rad: RAD2DEG, turn: 360 }\n\t\tconst angleUnit = (m[2] ? m[2].toLowerCase() : \"deg\") as \"deg\" | \"rad\" | \"turn\"\n\t\treturn hsl2rgb(\n\t\t\t(((+m[1] * CONVERSION[angleUnit]) % 360) + 360) % 360,\n\t\t\tclamp(+m[3] / 100),\n\t\t\tclamp(+m[4] / 100),\n\t\t\tm[5] ? clamp(m[6] ? +m[5] / 100 : +m[5]) : 1,\n\t\t)\n\t} else {\n\t\treturn hex2rgb(css)\n\t}\n}\n\nfunction rgb2css(r: number, g: number, b: number, a = 1) {\n\tif (a >= 1) {\n\t\treturn \"rgb(\" + [r, g, b].map(round).join(\",\") + \")\"\n\t} else {\n\t\treturn \"rgba(\" + [r, g, b].map(round).join(\",\") + \",\" + a + \")\"\n\t}\n}\n\nfunction rnd(a: any) {\n\treturn round(a * 100) / 100\n}\n\nfunction hsl2css([h, s, l]: HSL, alpha: number) {\n\tconst mode = alpha < 1 ? \"hsla\" : \"hsl\"\n\treturn (\n\t\tmode +\n\t\t\"(\" +\n\t\trnd(h) +\n\t\t\",\" +\n\t\trnd(s * 100) +\n\t\t\"%\" +\n\t\t\",\" +\n\t\trnd(l * 100) +\n\t\t\"%\" +\n\t\t(\"hsla\" == mode ? \",\" + rnd(alpha) : \"\") +\n\t\t\")\"\n\t)\n}\n\n_input.css = css2rgb\n\n_input.name = function(name) {\n\treturn num2rgb((w3cx11 as any)[name])\n}\n\nfunction lch2lab(l: number, c: number, hueDegrees: number): LAB {\n\t/*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n     */\n\treturn [l, cos(hueDegrees * DEG2RAD) * c, sin(hueDegrees * DEG2RAD) * c]\n}\n\nfunction lch2rgb(l: number, c: number, hDegrees: number, alpha1 = 1): RGBA {\n\tconst [, a, b] = lch2lab(l, c, hDegrees)\n\treturn cielab2rgb(l, a, b, alpha1)\n}\n\nfunction lab2lch(l: number, a: number, b: number): LCH {\n\tconst c = hypot(a, b)\n\tconst h = (atan2(b, a) * RAD2DEG + 360) % 360\n\treturn [l, c, h]\n}\n\nfunction rgb2lch(r255: number, g255: number, b255: number) {\n\tconst [l, a, b2] = rgb2lab(r255, g255, b255)\n\treturn lab2lch(l, a, b2)\n}\n\n_input.lch = lch2rgb\n\nfunction rgb2cmyk(r255: number, g255: number, b255: number): CMYK {\n\tr255 /= 255\n\tg255 /= 255\n\tb255 /= 255\n\tconst k = 1 - max(r255, g255, b255)\n\tif (1 == k) return [0, 0, 0, 1]\n\tconst c = (1 - r255 - k) / (1 - k)\n\tconst m = (1 - g255 - k) / (1 - k)\n\tconst y = (1 - b255 - k) / (1 - k)\n\treturn [c, m, y, k]\n}\n\nfunction cmyk2rgb(c1: number, m1: number, y1: number, k1: number, alpha1 = 1): RGBA {\n\tif (k1 == 1) {\n\t\treturn [0, 0, 0, alpha1]\n\t}\n\tconst r255 = 255 * (1 - c1) * (1 - k1)\n\tconst g255 = 255 * (1 - m1) * (1 - k1)\n\tconst b255 = 255 * (1 - y1) * (1 - k1)\n\treturn [r255, g255, b255, alpha1]\n}\n\n_input.cmyk = cmyk2rgb\n\n_input.gl = function(r: number, g: number, b: number, a: number = 1): RGBA {\n\treturn [r * 255, g * 255, b * 255, a]\n}\n\n//function rgb2luminance(r: number, g: number, b: number) {\n//\t// https://en.wikipedia.org/wiki/Relative_luminance\n//\tconst [, Y] = rgb2xyz(r, g, b)\n//\treturn Y\n//}\n\nfunction rgbChannel2RgbLinear(x255: number) {\n\tconst x1 = x255 / 255\n\t// http://entropymine.com/imageworsener/srgbformula/\n\tif (x1 <= 0.04045) {\n\t\treturn x1 / 12.92\n\t} else {\n\t\treturn ((x1 + 0.055) / 1.055) ** 2.4\n\t}\n}\nfunction rgbLinearChannel2Rgb(xLinear1: number) {\n\tif (xLinear1 <= 0.0031308) {\n\t\treturn 255 * (12.92 * xLinear1)\n\t} else {\n\t\treturn 255 * ((1 + 0.055) * xLinear1 ** (1 / 2.4) - 0.055)\n\t}\n}\n\nfunction kelvin2rgb(kelvin: number): RGB {\n\tconst t = kelvin / 100\n\tlet r, g, b\n\tif (t < 66) {\n\t\tr = 255\n\t\tg = -155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)\n\t\tb = t < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)\n\t} else {\n\t\tr = 351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)\n\t\tg = 325.4494125711974 + 0.07943456536662342 * (t - 50) - 28.0852963507957 * log(t - 50)\n\t\tb = 255\n\t}\n\treturn [r, g, b]\n}\n\n_input.rgb = (...args: number[]) => args as RGB\n\nfunction rgb2kelvin(r255: number, g255: number, b255: number) {\n\tconsole.log(b255 - r255)\n\tif (g255 + b255 < 158.61) {\n\t\tconsole.log(\"0 < t < 20\")\n\t\t// calc from green\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\tt => g255 - (-155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)),\n\t\t\t\t15,\n\t\t\t\t4,\n\t\t\t) * 100,\n\t\t)\n\t\treturn (Math.E ** ((g255 + 155.25485562709179 + 0.44596950469579133 * (15 - 2)) / 104.49216199393888) + 2) * 100\n\t} else if (b255 - r255 < 0) {\n\t\tconsole.log(\"20 < t < 66\")\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\tt => b255 - (-254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)),\n\t\t\t\t43,\n\t\t\t\t4,\n\t\t\t) * 100,\n\t\t)\n\t\treturn (\n\t\t\t(Math.E ** ((b255 + 254.76935184120902 - 0.8274096064007395 * (43 - 10)) / 115.67994401066147) + 10) * 100\n\t\t)\n\t} else {\n\t\tconsole.log(\"0 < t < 400, start= \" + (-1.4 * (r255 + g255) + 755))\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\tt => r255 - (351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)),\n\t\t\t\t-1.4 * (r255 + g255) + 755,\n\t\t\t\t8,\n\t\t\t) * 100,\n\t\t)\n\t\treturn ((r255 / 329.698727446) ** (1 / -0.1332047592) + 60) * 100\n\t}\n\treturn newtonIterate1d(\n\t\tk => {\n\t\t\tconst eps = 1e-9\n\t\t\tconst [kr, kg, kb] = kelvin2rgb(k)\n\t\t\tconst [kr2, kg2, kb2] = kelvin2rgb(k + eps)\n\t\t\tconst dkr = (kr2 - kr) / eps,\n\t\t\t\tdkg = (kg2 - kg) / eps,\n\t\t\t\tdkb = (kb2 - kb) / eps\n\t\t\treturn dkr * (kr - r255) + dkg * (kg - g255) + dkb * (kb - b255)\n\n\t\t\treturn kb / kr - b255 / r255\n\t\t},\n\t\t//1000,\n\t\t//40000,\n\t\tMath.E ** ((b255 / r255 + 2.5) / 0.4),\n\t\t20,\n\t\t//1e-6,\n\t)\n\tlet maxTemp = 40000\n\tlet minTemp = 1000\n\tconst eps = 0.4\n\tlet temp: number = 0\n\tlet rgb\n\twhile (maxTemp - minTemp > eps) {\n\t\ttemp = (maxTemp + minTemp) * 0.5\n\t\trgb = kelvin2rgb(temp)\n\t\tif (rgb[2] / rgb[0] >= b255 / r255) {\n\t\t\tmaxTemp = temp\n\t\t} else {\n\t\t\tminTemp = temp\n\t\t}\n\t}\n\treturn round(temp)\n}\n\n_input.temperature = _input.kelvin = _input.K = kelvin2rgb\n\nfunction blend_f(f: (c1: RGB, c2: RGB) => RGB) {\n\treturn function(bottom: Chromable, top: Chromable) {\n\t\tconst [r, g, b] = f(color(top).rgb(), color(bottom).rgb())\n\t\treturn rgb(r, g, b)\n\t}\n}\n\nfunction each(f: (a: number, b: number) => number) {\n\treturn function(c1: RGB, c2: RGB): RGB {\n\t\treturn c1.map((e, i) => f(e, c2[i])) as RGB\n\t}\n}\n\nfunction _screen(a: number, b: number) {\n\treturn 255 * (1 - (1 - a / 255) * (1 - b / 255))\n}\n\nfunction _overlay(a: number, b: number) {\n\tif (b < 128) {\n\t\treturn (2 * a * b) / 255\n\t} else {\n\t\treturn 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255))\n\t}\n}\n\nfunction _burn(a: number, b: number) {\n\treturn 255 * (1 - (1 - b / 255) / (a / 255))\n}\n\nfunction _dodge(a: number, b: number) {\n\tif (a == 255) {\n\t\treturn 255\n\t}\n\treturn 255 * min(1, b / 255 / (1 - a / 255))\n}\n\n/**\n * r, g, b can be in any interval (0-1 or 0-255)\n * @param r\n * @param g\n * @param b\n */\nfunction rgb2hexhue(r: number, g: number, b: number) {\n\tconst m = min(r, g, b)\n\tconst M = max(r, g, b)\n\tconst delta = M - m\n\tlet hueTurnX6 // angle as value between 0 and 6\n\tif (0 == delta) {\n\t\thueTurnX6 = 0\n\t} else if (r == M) {\n\t\t// second term to make sure the value is > 0\n\t\thueTurnX6 = (g - b) / delta + (g < b ? 6 : 0)\n\t} else if (g == M) {\n\t\thueTurnX6 = 2 + (b - r) / delta\n\t} else {\n\t\thueTurnX6 = 4 + (r - g) / delta\n\t}\n\treturn [hueTurnX6 * 60, m, M]\n}\nfunction hcxm2rgb(hueDegrees: number, c1: number, x1: number, m1: number, alpha1: number): RGBA {\n\tconst m255 = m1 * 255\n\tconst cm255 = c1 * 255 + m255\n\tconst xm255 = x1 * 255 + m255\n\tif (hueDegrees < 60) {\n\t\treturn [cm255, xm255, m255, alpha1]\n\t} else if (hueDegrees < 120) {\n\t\treturn [xm255, cm255, m255, alpha1]\n\t} else if (hueDegrees < 180) {\n\t\treturn [m255, cm255, xm255, alpha1]\n\t} else if (hueDegrees < 240) {\n\t\treturn [m255, xm255, cm255, alpha1]\n\t} else if (hueDegrees < 300) {\n\t\treturn [xm255, m255, cm255, alpha1]\n\t} else {\n\t\treturn [cm255, m255, xm255, alpha1]\n\t}\n}\n\n/**\n * https://en.wikipedia.org/w/index.php?title=HSL_and_HSV&oldid=856714654#From_HSL\n */\nfunction hsl2rgb(hueDegrees: number, s1: number, l1: number, alpha1 = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst c1 = (1 - abs(2 * l1 - 1)) * s1\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), l1 - c1 / 2, alpha1)\n}\nfunction rgb2hsl(r255: number, g255: number, b255: number): HSL {\n\tconst [hue, min1, max1] = rgb2hexhue(r255 / 255, g255 / 255, b255 / 255)\n\tconst l1 = (max1 + min1) / 2\n\tlet s1: number\n\tif (max1 == min1) {\n\t\ts1 = 0\n\t} else {\n\t\ts1 = l1 < 0.5 ? (max1 - min1) / (max1 + min1) : (max1 - min1) / (2 - max1 - min1)\n\t}\n\treturn [hue, s1, l1]\n}\n\nfunction hsv2rgb(hueDegrees: number, s1: number, v1: number, alpha1: number = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst c1 = v1 * s1\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), v1 - c1, alpha1)\n}\n\nfunction rgb2hsv(r255: number, g255: number, b255: number): HSV {\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\n\tconst delta255 = max255 - min255\n\tconst v1 = max255 / 255.0\n\tconst s1 = max255 == 0 ? 0 : delta255 / max255\n\treturn [hue, s1, v1]\n}\n\nfunction hcg2rgb(hueDegrees: number, c1: number, g1: number, alpha1 = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst p = g1 * (1 - c1)\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), p, alpha1)\n}\n\nfunction rgb2hcg(r255: number, g255: number, b255: number): HCG {\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\n\tconst c1 = (max255 - min255) / 255\n\tconst _g1 = c1 < 1 ? min255 / 255 / (1 - c1) : 0\n\treturn [hue, c1, _g1]\n}\n\n_input.hcg = hcg2rgb\n\nfunction cielab2rgb(LStar100: number, aStar: number, bStar: number, alpha = 1): RGBA {\n\tconst [x, y, z] = cielab2xyz(LStar100, aStar, bStar)\n\treturn xyz2rgb(x, y, z, alpha)\n}\n\nfunction cielab2xyz(LStar100: number, aStar: number, bStar: number) {\n\tfunction fInv(t: number) {\n\t\tif (t > LAB_delta) {\n\t\t\treturn t ** 3\n\t\t} else {\n\t\t\treturn LAB_3DeltaPow2 * (t - 4 / 29)\n\t\t}\n\t}\n\treturn [\n\t\tLAB_Xn * fInv((LStar100 + 16) / 116 + aStar / 500),\n\t\tLAB_Yn * fInv((LStar100 + 16) / 116),\n\t\tLAB_Zn * fInv((LStar100 + 16) / 116 - bStar / 200),\n\t]\n}\nfunction xyz2cielab(x: number, y: number, z: number): LAB {\n\t// https://en.wikipedia.org/w/index.php?title=CIELAB_color_space&oldid=849576085#Forward_transformation\n\tfunction f(t: number) {\n\t\tif (t > LAB_deltaPow3) {\n\t\t\treturn cbrt(t)\n\t\t} else {\n\t\t\treturn t / LAB_3DeltaPow2 + 4 / 29\n\t\t}\n\t}\n\treturn [116 * f(y / LAB_Yn) - 16, 500 * (f(x / LAB_Xn) - f(y / LAB_Yn)), 200 * (f(y / LAB_Yn) - f(z / LAB_Zn))]\n}\n\n// const LAB_CONSTANTS = {\nconst LAB_Kn = 18\nconst LAB_Xn = 0.95047\nconst LAB_Yn = 1\nconst LAB_Zn = 1.08883\nconst LAB_delta = 0.206896552 // delta = 6 / 29\nconst LAB_3DeltaPow2 = 0.12841855 // 3 * delta ** 2\nconst LAB_deltaPow3 = 0.008856452 // delta ** 3\n// }\n\nfunction rgb2lab(r255: number, g255: number, b255: number): RGB {\n\tconst [x, y, z] = rgb2xyz(r255, g255, b255)\n\treturn xyz2cielab(x, y, z)\n}\n\nfunction rgb2xyz(r255: number, g255: number, b255: number): XYZ {\n\t// https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\n\tconst r1Linear = rgbChannel2RgbLinear(r255)\n\tconst g1Linear = rgbChannel2RgbLinear(g255)\n\tconst b1Linear = rgbChannel2RgbLinear(b255)\n\tconst X = 0.4124564 * r1Linear + 0.3575761 * g1Linear + 0.1804375 * b1Linear\n\tconst Y = 0.2126729 * r1Linear + 0.7151522 * g1Linear + 0.072175 * b1Linear\n\tconst Z = 0.0193339 * r1Linear + 0.119192 * g1Linear + 0.9503041 * b1Linear\n\treturn [X, Y, Z]\n}\nfunction xyz2rgb(X1: number, Y1: number, Z1: number, alpha1 = 1): RGBA {\n\t// https://en.wikipedia.org/wiki/SRGB#The_forward_transformation_(CIE_XYZ_to_sRGB)\n\tconst r1Linear = 3.2404542 * X1 - 1.5371385 * Y1 - 0.4985314 * Z1\n\tconst g1Linear = -0.969266 * X1 + 1.8760108 * Y1 + 0.041556 * Z1\n\tconst b1Linear = 0.0556434 * X1 - 0.2040259 * Y1 + 1.0572252 * Z1\n\treturn [rgbLinearChannel2Rgb(r1Linear), rgbLinearChannel2Rgb(g1Linear), rgbLinearChannel2Rgb(b1Linear), alpha1]\n}\n\n_input.xyz = xyz2rgb\n_input.lab = cielab2rgb\n\n/**\n * For HSI, we use the direct angle calculation. I.e. atan2(beta, alpha). See wikipedia link. This is why we don't use\n * hcxm2rgb.\n */\nfunction hsi2rgb(hueDegrees: number, s1: number, i1: number, alpha1 = 1): RGBA {\n\t/*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n\tlet r, g, b\n\tlet hRad = hueDegrees * DEG2RAD\n\tif (hRad < (2 * PI) / 3) {\n\t\tb = (1 - s1) / 3\n\t\tr = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tg = 1 - (b + r)\n\t} else if (hRad < (4 * PI) / 3) {\n\t\thRad -= (2 * PI) / 3\n\t\tr = (1 - s1) / 3\n\t\tg = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tb = 1 - (r + g)\n\t} else {\n\t\thRad -= (4 * PI) / 3\n\t\tg = (1 - s1) / 3\n\t\tb = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tr = 1 - (g + b)\n\t}\n\treturn [3 * i1 * r * 255, 3 * i1 * g * 255, 3 * i1 * b * 255, alpha1]\n}\n\n/**\n * For HSI, we use the direct angle calculation. I.e. atan2(beta, alpha). See wikipedia link. This is why we don't use\n * rgb2hexhue.\n */\nfunction rgb2hsi(r255: number, g255: number, b255: number): HSI {\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Lightness\n\tconst r1 = r255 / 255\n\tconst g1 = g255 / 255\n\tconst b1 = b255 / 255\n\tconst i1 = (r1 + g1 + b1) / 3\n\tif (r1 == g1 && g1 == b1) {\n\t\treturn [0, 0, i1]\n\t} else {\n\t\tconst alpha = (1 / 2) * (2 * r1 - g1 - b1)\n\t\tconst beta = (sqrt(3) / 2) * (g1 - b1)\n\t\tconst hRad = atan2(beta, alpha)\n\t\tconst min1 = min(r1, g1, b1)\n\t\tconst s1 = 1 - min1 / i1\n\t\treturn [(hRad < 0 ? 2 * PI + hRad : hRad) * RAD2DEG, s1, i1]\n\t}\n}\n\n_input.hsi = hsi2rgb\n\ninterpolators.hsv = interpolators.hsl = interpolators.hsi = interpolators.lch = interpolators.hcg = function interpolate_hsx(\n\tcolor1: Color,\n\tcolor2: Color,\n\tf: number,\n\tm: \"hsv\" | \"hsl\" | \"hsi\" | \"lch\" | \"hcg\",\n) {\n\tconst [a1, b1, c1] = color1[m]()\n\tconst [a2, b2, c2] = color2[m]()\n\tfunction lerpHue(hue1: number, hue2: number, f: number) {\n\t\tconst dh = norm360(hue2 - hue1 + 180) - 180\n\t\treturn hue1 + f * dh\n\t}\n\treturn color(\n\t\t(\"h\" == m.charAt(0) ? lerpHue : lerp)(a1, a2, f),\n\t\tlerp(b1, b2, f),\n\t\t(\"h\" == m.charAt(2) ? lerpHue : lerp)(c1, c2, f),\n\t\tm,\n\t)\n}\n\nfunction indexOfMax<T>(arr: ArrayLike<T>, f: (el: T) => number) {\n\tlet maxValue = -Infinity,\n\t\tmaxValueIndex = -1\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst value = f(arr[i])\n\t\tif (value > maxValue) {\n\t\t\tmaxValue = value\n\t\t\tmaxValueIndex = i\n\t\t}\n\t}\n\treturn maxValueIndex\n}\nfunction withMax<T>(arr: ArrayLike<T>, f: (el: T) => number): T {\n\treturn arr[indexOfMax(arr, f)]\n}\n","import { assert, int, NLA_DEBUG, V3 } from 'ts3dutils'\nimport { currentGL, TSGLContext } from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\n\nexport class Buffer {\n\tbuffer: WebGLBuffer | undefined = undefined\n\tdata: any[] = []\n\n\t/** Number of elements in buffer. 2 V3s is still 2, not 6. */\n\tcount: int = 0\n\n\t/** Space between elements in buffer. 3 for V3s. */\n\tspacing: 1 | 2 | 3 | 4 = 1\n\n\thasBeenCompiled: boolean = false\n\n\tname?: string\n\n\tmaxValue?: number\n\n\tbindSize: GL['UNSIGNED_INT'] | GL['UNSIGNED_SHORT']\n\n\t/**\n\t * Provides a simple method of uploading data to a GPU buffer.\n\t *\n\t * @example\n\t *     const vertices = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t *     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]]\n\t *     vertices.compile()\n\t *\n\t * @example\n\t *     const indices = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t *     indices.data = [[0, 1, 2], [2, 1, 3]]\n\t *     indices.compile()\n\t *\n\t * @param target Specifies the target to which the buffer object is bound.\n\t * @param type\n\t */\n\tconstructor(\n\t\tpublic readonly target: GL.BufferTarget,\n\t\tpublic readonly type: typeof Float32Array | typeof Uint16Array | typeof Uint32Array,\n\t) {\n\t\tassert(\n\t\t\ttarget == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER,\n\t\t\t'target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER',\n\t\t)\n\t\tassert(\n\t\t\ttype == Float32Array || type == Uint16Array || type == Uint32Array,\n\t\t\t'type == Float32Array || type == Uint16Array || type == Uint32Array',\n\t\t)\n\t\tif (Uint16Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_SHORT\n\t\t} else if (Uint32Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_INT\n\t\t}\n\t}\n\n\t/**\n\t * Upload the contents of `data` to the GPU in preparation for rendering. The data must be a list of lists\n\t * where each inner list has the same length. For example, each element of data for vertex normals would be a\n\t * list of length three. This will remember the data length and element length for later use by shaders.\n\t *\n\t * This could have used `[].concat.apply([], this.data)` to flatten the array but Google\n\t * Chrome has a maximum number of arguments so the concatenations are chunked to avoid that limit.\n\t *\n\t * @param usage Either `WGL.STATIC_DRAW` or `WGL.DYNAMIC_DRAW`. Defaults to `WGL.STATIC_DRAW`\n\t */\n\tcompile(usage: GL.BufferDataUsage = WGL.STATIC_DRAW, gl: TSGLContext = currentGL()): void {\n\t\tassert(\n\t\t\tWGL.STATIC_DRAW == usage || WGL.DYNAMIC_DRAW == usage,\n\t\t\t'WGL.STATIC_DRAW == type || WGL.DYNAMIC_DRAW == type',\n\t\t)\n\t\tthis.buffer = this.buffer || gl.createBuffer()!\n\t\tlet buffer: Float32Array | Uint16Array | Uint32Array\n\t\tif (this.data.length == 0) {\n\t\t\tconsole.warn('empty buffer ' + this.name)\n\t\t\t//console.trace()\n\t\t}\n\t\tif (this.data.length == 0 || this.data[0] instanceof V3) {\n\t\t\tassert(!(this.data[0] instanceof V3) || this.type == Float32Array)\n\t\t\tV3.pack(this.data, (buffer = new this.type(this.data.length * 3) as Float32Array)) // asserts that all\n\t\t\t// elements are V3s\n\t\t\tthis.spacing = 3\n\t\t\tthis.count = this.data.length\n\t\t\tthis.maxValue = 0\n\t\t} else {\n\t\t\t//assert(Array != this.data[0].constructor, this.name + this.data[0])\n\t\t\tif (Array.isArray(this.data[0])) {\n\t\t\t\tconst bufferLength = this.data.length * this.data[0].length\n\t\t\t\tbuffer = new this.type(bufferLength)\n\t\t\t\tlet i = this.data.length,\n\t\t\t\t\tdestPtr = bufferLength\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst subArray = this.data[i]\n\t\t\t\t\tlet j = subArray.length\n\t\t\t\t\twhile (j--) {\n\t\t\t\t\t\tbuffer[--destPtr] = subArray[j]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(0 == destPtr)\n\t\t\t} else {\n\t\t\t\tbuffer = new this.type(this.data)\n\t\t\t}\n\n\t\t\tconst spacing = this.data.length ? buffer.length / this.data.length : 0\n\t\t\tassert(spacing % 1 == 0, `buffer ${this.name} elements not of consistent size, average size is ` + spacing)\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\tif (10000 <= buffer.length) {\n\t\t\t\t\tthis.maxValue = 0\n\t\t\t\t} else {\n\t\t\t\t\tthis.maxValue = Math.max.apply(undefined, buffer)\n\t\t\t\t}\n\t\t\t}\n\t\t\tassert([1, 2, 3, 4].includes(spacing))\n\t\t\tthis.spacing = spacing as 1 | 2 | 3 | 4\n\t\t\tthis.count = this.data.length\n\t\t}\n\t\tgl.bindBuffer(this.target, this.buffer)\n\t\tgl.bufferData(this.target, buffer, usage)\n\t\tthis.hasBeenCompiled = true\n\t}\n}\n","import {\r\n\tAABB,\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertVectors,\r\n\teq0,\r\n\tint,\r\n\tlerp,\r\n\tM4,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n\tTransformable,\r\n\tTuple3,\r\n\tV,\r\n\tV3,\r\n} from 'ts3dutils'\r\n\r\nimport { Buffer, currentGL, GL_COLOR, pushQuad, TSGLContext } from './index'\r\n\r\nconst { cos, sin, PI, min, max } = Math\r\n\r\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\r\nimport GL = WebGLRenderingContextStrict\r\n\r\nconst tempM4_1 = new M4()\r\nconst tempM4_2 = new M4()\r\n\r\nexport interface MeshData {\r\n\tnormals: V3[]\r\n\tcoords: [number, number][]\r\n\tcolors: GL_COLOR[]\r\n\tTRIANGLES: int[]\r\n\tLINES: int[]\r\n}\r\nexport type MeshWith<T extends keyof MeshData = never> = Mesh & Pick<MeshData, T>\r\n\r\n/**\r\n * @example new Mesh()\r\n *        .addIndexBuffer('TRIANGLES')\r\n *        .addIndexBuffer('LINES')\r\n *        .addVertexBuffer('normals', 'ts_Normal')\r\n */\r\nexport class Mesh extends Transformable {\r\n\thasBeenCompiled: boolean = false\r\n\tvertexBuffers: { [name: string]: Buffer } = {}\r\n\tindexBuffers: { [name: string]: Buffer } = {}\r\n\r\n\tvertices: V3[]\r\n\tnormals?: V3[]\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.addVertexBuffer('vertices', 'ts_Vertex')\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate area, volume and centroid of the mesh.\r\n\t *\r\n\t * The area is the sum of the areas of the triangles.\r\n\t *\r\n\t * For closed meshes, the volume is the contained volume. If the volume is inside-out, i.e. the face normals point\r\n\t * inwards, the returned value is negative. In general, this calculates the sum of the z-direction shadow volumes\r\n\t * of the triangles. The z-dir shadow volume is the cut-off prism with the triangle projected onto the XY plane as\r\n\t * the base face and the triangle itself as the top face.\r\n\t *\r\n\t * The centroid is the \"mean point of all points inside the volume\". If a uniform density is assumed, this is\r\n\t * equivalent to the center of gravity. In general, this calculates the weighted average of the centroids of all the\r\n\t * triangle shadow volumes.\r\n\t */\r\n\tcalcVolume(this: Mesh & { TRIANGLES: int[] }): { volume: number; centroid: V3; area: number } {\r\n\t\tlet totalVolumeX2 = 0,\r\n\t\t\ttotalCentroidWithZX2 = V3.O,\r\n\t\t\ttotalAreaX2 = 0\r\n\t\tconst triangles = this.TRIANGLES\r\n\t\tconst vertices = this.vertices\r\n\t\tfor (let i = 0; i < triangles.length; i += 3) {\r\n\t\t\tconst ai = triangles[i + 0],\r\n\t\t\t\tbi = triangles[i + 1],\r\n\t\t\t\tci = triangles[i + 2]\r\n\t\t\tconst a = vertices[ai],\r\n\t\t\t\tb = vertices[bi],\r\n\t\t\t\tc = vertices[ci]\r\n\t\t\tconst ab = b.minus(a),\r\n\t\t\t\tac = c.minus(a)\r\n\t\t\tconst normal = ab.cross(ac)\r\n\t\t\t//const centroidZ = (v0.z + v1.z + v2.z) / 3\r\n\t\t\tconst faceCentroid = V3.add(a, b, c).div(3)\r\n\t\t\t//totalVolume += centroidZ * (area === v01.cross(v02).length() / 2) * v01.cross(v02).unit().z\r\n\t\t\ttotalVolumeX2 += faceCentroid.z * normal.z\r\n\t\t\tconst faceAreaX2 = normal.length()\r\n\t\t\ttotalAreaX2 += faceAreaX2\r\n\r\n\t\t\t// NB: the shadow volume centroid does NOT have the same XY coordinates\r\n\t\t\t// as the face centroid.\r\n\t\t\t// calculate the weighted centroid of the shadow volume:\r\n\t\t\t// faceShadowCentroid = INTEGRATE [0; 1] (\r\n\t\t\t//   INTEGRATE [0; 1 - s] (\r\n\t\t\t//     normal.z *\r\n\t\t\t//     ((1 - s - t) a + s b + t c) *\r\n\t\t\t//     ((1 - s - t) a + s b + t c).z\r\n\t\t\t//   ) dt\r\n\t\t\t// ) ds\r\n\t\t\t// = (a (2 a.z + b.z + c.z) + b (a.z + 2 b.z + c.z) + c (a.z + b.z + 2 c.z)) / 24\r\n\t\t\tconst faceShadowCentroid = V3.add(\r\n\t\t\t\ta.times(2 * a.z + b.z + c.z),\r\n\t\t\t\tb.times(a.z + 2 * b.z + c.z),\r\n\t\t\t\tc.times(a.z + b.z + 2 * c.z),\r\n\t\t\t).times(normal.z) // 1/24 factor is done at very end\r\n\t\t\ttotalCentroidWithZX2 = totalCentroidWithZX2.plus(faceShadowCentroid)\r\n\t\t}\r\n\t\t// sumInPlaceTree adds negligible additional accuracy for XY sphere\r\n\t\tconst volume = totalVolumeX2 / 2\r\n\t\treturn {\r\n\t\t\tvolume,\r\n\t\t\tcentroid: eq0(volume) ? V3.O : totalCentroidWithZX2.div(24 * volume).schur(new V3(1, 1, 0.5)),\r\n\t\t\tarea: totalAreaX2 / 2,\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add a new vertex buffer with a list as a property called `name` on this object and map it to\r\n\t * the attribute called `attribute` in all shaders that draw this mesh.\r\n\t * @example new Mesh().addVertexBuffer('coords', 'ts_TexCoord')\r\n\t */\r\n\taddVertexBuffer<K extends string>(name: K, attribute: string): this & { [k in K]: any[] } {\r\n\t\tassert(!this.vertexBuffers[attribute], 'Buffer ' + attribute + ' already exists.')\r\n\t\t//assert(!this[name])\r\n\t\tthis.hasBeenCompiled = false\r\n\t\tassert('string' == typeof name)\r\n\t\tassert('string' == typeof attribute)\r\n\t\tconst buffer = (this.vertexBuffers[attribute] = new Buffer(WGL.ARRAY_BUFFER, Float32Array))\r\n\t\tbuffer.name = name\r\n\t\t;(this as any)[name] = []\r\n\t\treturn this as any\r\n\t}\r\n\r\n\t/**\r\n\t * Add a new index buffer.\r\n\t * @example new Mesh().addIndexBuffer('TRIANGLES')\r\n\t * @example new Mesh().addIndexBuffer('LINES')\r\n\t */\r\n\taddIndexBuffer<K extends string>(\r\n\t\tname: K,\r\n\t\ttype: GL['UNSIGNED_SHORT'] | GL['UNSIGNED_INT'] = WGL.UNSIGNED_SHORT,\r\n\t): this & { [k in K]: int[] } {\r\n\t\tthis.hasBeenCompiled = false\r\n\t\tconst arrayType = WGL.UNSIGNED_SHORT == type ? Uint16Array : Uint32Array\r\n\t\tconst buffer = (this.indexBuffers[name] = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, arrayType))\r\n\t\tbuffer.name = name\r\n\t\t;(this as any)[name] = []\r\n\t\treturn this as any\r\n\t}\r\n\r\n\tconcat(...others: this[]): this {\r\n\t\tconst result = new Mesh() as any\r\n\t\tconst allMeshes = [this as Mesh].concat(others)\r\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\r\n\t\t\tassert(others.every(other => !!other.vertexBuffers[attribute]))\r\n\t\t\tconst bufferName = this.vertexBuffers[attribute].name!\r\n\t\t\tif ('ts_Vertex' !== attribute) {\r\n\t\t\t\tresult.addVertexBuffer(bufferName, attribute)\r\n\t\t\t}\r\n\t\t\tresult[bufferName] = allMeshes.map(mesh => (mesh as any)[bufferName]).concatenated()\r\n\t\t})\r\n\t\tObject.getOwnPropertyNames(this.indexBuffers).forEach(name => {\r\n\t\t\tassert(others.every(other => !!other.indexBuffers[name]))\r\n\t\t\tresult.addIndexBuffer(name, this.indexBuffers[name].bindSize)\r\n\t\t\tconst newIndexBufferData = new Array(allMeshes.reduce((sum, mesh) => sum + (mesh as any)[name].length, 0))\r\n\t\t\tlet ptr = 0\r\n\t\t\tlet startIndex = 0\r\n\t\t\tfor (const mesh of allMeshes) {\r\n\t\t\t\tfor (const index of (mesh as any)[name] as int[]) {\r\n\t\t\t\t\tnewIndexBufferData[ptr++] = startIndex + index\r\n\t\t\t\t}\r\n\t\t\t\tstartIndex += mesh.vertices.length\r\n\t\t\t}\r\n\t\t\tresult[name] = newIndexBufferData\r\n\t\t})\r\n\t\tresult.compile()\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Upload all attached buffers to the GPU in preparation for rendering. This doesn't need to be called every\r\n\t * frame, only needs to be done when the data changes.\r\n\t *\r\n\t * Sets `this.hasBeenCompiled` to true.\r\n\t */\r\n\tcompile(gl: TSGLContext = currentGL()) {\r\n\t\t// figure out shortest vertex buffer to make sure indexBuffers are in bounds\r\n\t\tlet minVertexBufferLength = Infinity // TODO, _minBufferName\r\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\r\n\t\t\tconst buffer = this.vertexBuffers[attribute]\r\n\t\t\tbuffer.data = (this as any)[buffer.name!]\r\n\t\t\tbuffer.compile(undefined, gl)\r\n\t\t\tif ((this as any)[buffer.name!].length < minVertexBufferLength) {\r\n\t\t\t\t// _minBufferName = attribute\r\n\t\t\t\tminVertexBufferLength = (this as any)[buffer.name!].length\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tfor (const name in this.indexBuffers) {\r\n\t\t\tconst buffer = this.indexBuffers[name]\r\n\t\t\tbuffer.data = (this as any)[buffer.name!]\r\n\t\t\tbuffer.compile(undefined, gl)\r\n\t\t\t// if (NLA_DEBUG && buffer.maxValue >= minVertexBufferLength) {\r\n\t\t\t// \tthrow new Error(`max index value for buffer ${name}\r\n\t\t\t// \tis too large ${buffer.maxValue} min Vbuffer size: ${minVertexBufferLength} ${minBufferName}`)\r\n\t\t\t// }\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = true\r\n\t\treturn this\r\n\t}\r\n\r\n\tstatic async fromBinarySTL(stl: Blob) {\r\n\t\treturn new Promise<Mesh & { normals: V3[] }>((resolve, reject) => {\r\n\t\t\tconst mesh = new Mesh().addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\tconst fileReader = new FileReader()\r\n\t\t\tfileReader.onerror = reject\r\n\t\t\tfileReader.onload = function(_progressEvent) {\r\n\t\t\t\tconst dataView = new DataView(this.result as ArrayBuffer)\r\n\t\t\t\tconst HEADER_BYTE_SIZE = 80\r\n\t\t\t\tconst triangleCount = dataView.getUint32(HEADER_BYTE_SIZE, true)\r\n\t\t\t\tmesh.normals.length = triangleCount * 3\r\n\t\t\t\tmesh.vertices.length = triangleCount * 3\r\n\t\t\t\tlet i = triangleCount * 3,\r\n\t\t\t\t\tbufferPtr = HEADER_BYTE_SIZE + 4\r\n\r\n\t\t\t\tfunction readV3() {\r\n\t\t\t\t\tconst x = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\tconst y = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\tconst z = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\treturn new V3(x, y, z)\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (i) {\r\n\t\t\t\t\ti -= 3\r\n\t\t\t\t\tconst normal = readV3()\r\n\t\t\t\t\tmesh.normals[i + 0] = normal\r\n\t\t\t\t\tmesh.normals[i + 1] = normal\r\n\t\t\t\t\tmesh.normals[i + 2] = normal\r\n\t\t\t\t\tmesh.vertices[i + 0] = readV3()\r\n\t\t\t\t\tmesh.vertices[i + 1] = readV3()\r\n\t\t\t\t\tmesh.vertices[i + 2] = readV3()\r\n\r\n\t\t\t\t\tbufferPtr += 2\r\n\t\t\t\t}\r\n\t\t\t\tresolve(mesh)\r\n\t\t\t}\r\n\t\t\tfileReader.readAsArrayBuffer(stl)\r\n\t\t})\r\n\t}\r\n\r\n\ttoBinarySTL(this: Mesh & { TRIANGLES: number[] }): Blob {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tconst HEADER_BYTE_SIZE = 80,\r\n\t\t\tFLOAT_BYTE_SIZE = 4\r\n\t\tconst triangles = this.TRIANGLES\r\n\t\tconst triangleCount = triangles.length / 3\r\n\t\tconst buffer = new ArrayBuffer(HEADER_BYTE_SIZE + 4 + triangleCount * (4 * 3 * FLOAT_BYTE_SIZE + 2))\r\n\t\tconst dataView = new DataView(buffer)\r\n\t\tdataView.setUint32(HEADER_BYTE_SIZE, triangleCount, true)\r\n\t\tlet bufferPtr = HEADER_BYTE_SIZE + 4\r\n\t\tlet i = triangles.length\r\n\t\twhile (i) {\r\n\t\t\ti -= 3\r\n\t\t\tconst a = this.vertices[triangles[i]],\r\n\t\t\t\tb = this.vertices[triangles[i + 1]],\r\n\t\t\t\tc = this.vertices[triangles[i + 2]]\r\n\t\t\tconst normal = V3.normalOnPoints(a, b, c)\r\n\t\t\t;[normal, a, b, c].forEach(v => {\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.x, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.y, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.z, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t})\r\n\t\t\t// skip 2 bytes, already initalized to zero\r\n\t\t\tbufferPtr += 2\r\n\t\t}\r\n\t\tassert(bufferPtr == buffer.byteLength, bufferPtr + ' ' + buffer.byteLength)\r\n\t\treturn new Blob([buffer], { type: 'application/octet-stream' })\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Mesh with transformed vertices.\r\n\t *\r\n\t * Transform all vertices by `matrix` and all normals by the inverse transpose of `matrix`.\r\n\t *\r\n\t * Index buffer data is referenced.\r\n\t */\r\n\ttransform(m4: M4): this {\r\n\t\tconst mesh = new Mesh()\r\n\t\tmesh.vertices = m4.transformedPoints(this.vertices)\r\n\t\tif (this.normals) {\r\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\tconst invTrans = m4\r\n\t\t\t\t.as3x3(tempM4_1)\r\n\t\t\t\t.inversed(tempM4_2)\r\n\t\t\t\t.transposed(tempM4_1)\r\n\t\t\tmesh.normals = this.normals.map(n => invTrans.transformVector(n).unit())\r\n\t\t\t// mesh.normals.forEach(n => assert(n.hasLength(1)))\r\n\t\t}\r\n\t\tfor (const name in this.indexBuffers) {\r\n\t\t\tmesh.addIndexBuffer(name)\r\n\t\t\t;(mesh as any)[name] = (this as any)[name]\r\n\t\t}\r\n\t\tfor (const attribute in this.vertexBuffers) {\r\n\t\t\tif ('ts_Vertex' !== attribute && 'ts_Normal' !== attribute) {\r\n\t\t\t\tconst name = this.vertexBuffers[attribute].name!\r\n\t\t\t\tmesh.addVertexBuffer(name, attribute)\r\n\t\t\t\t;(mesh as any)[name] = (this as any)[name]\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.hasBeenCompiled && mesh.compile()\r\n\t\treturn mesh as this\r\n\t}\r\n\r\n\t/**\r\n\t * Computes a new normal for each vertex from the average normal of the neighboring triangles. This means\r\n\t * adjacent triangles must share vertices for the resulting normals to be smooth.\r\n\t */\r\n\tcomputeNormalsFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { normals: V3[] } {\r\n\t\tif (!this.normals) this.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t// tslint:disable:no-string-literal\r\n\t\t//this.vertexBuffers['ts_Normal'].data = arrayFromFunction(this.vertices.length, i => V3.O)\r\n\r\n\t\tconst TRIANGLES = this.TRIANGLES,\r\n\t\t\tvertices = this.vertices,\r\n\t\t\tnormals = this.normals!\r\n\t\tnormals.length = vertices.length\r\n\t\tfor (let i = 0; i < TRIANGLES.length; i += 3) {\r\n\t\t\tconst ai = TRIANGLES[i],\r\n\t\t\t\tbi = TRIANGLES[i + 1],\r\n\t\t\t\tci = TRIANGLES[i + 2]\r\n\t\t\tconst a = vertices[ai]\r\n\t\t\tconst b = vertices[bi]\r\n\t\t\tconst c = vertices[ci]\r\n\t\t\tconst normal = b\r\n\t\t\t\t.minus(a)\r\n\t\t\t\t.cross(c.minus(a))\r\n\t\t\t\t.unit()\r\n\t\t\tnormals[ai] = normals[ai].plus(normal)\r\n\t\t\tnormals[bi] = normals[bi].plus(normal)\r\n\t\t\tnormals[ci] = normals[ci].plus(normal)\r\n\t\t}\r\n\t\tfor (let i = 0; i < vertices.length; i++) {\r\n\t\t\tnormals[i] = normals[i].unit()\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this as any\r\n\t}\r\n\r\n\t/**\r\n\t * Populate the specified index buffer (default 'LINES') from the `triangles` index buffer.\r\n\t */\r\n\tcomputeWireframeFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\r\n\tcomputeWireframeFromFlatTriangles<T extends string>(\r\n\t\tthis: Mesh & { TRIANGLES: int[] },\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeWireframeFromFlatTriangles(this: any, indexBufferName: string = 'LINES'): this {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tconst canonEdges = new Set()\r\n\r\n\t\tfunction canonEdge(i0: int, i1: int) {\r\n\t\t\tconst iMin = min(i0, i1),\r\n\t\t\t\tiMax = max(i0, i1)\r\n\t\t\treturn (iMin << 16) | iMax\r\n\t\t}\r\n\r\n\t\t// function uncanonEdge(key) {\r\n\t\t// \treturn [key >> 16, key & 0xffff]\r\n\t\t// }\r\n\t\tconst t = this.TRIANGLES\r\n\t\tfor (let i = 0; i < t.length; i += 3) {\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 0], t[i + 1]))\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 1], t[i + 2]))\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 2], t[i + 0]))\r\n\t\t}\r\n\t\tconst data = indexBufferName\r\n\t\tif (!this[data]) this.addIndexBuffer(indexBufferName)\r\n\t\t//this.LINES = new Array(canonEdges.size)\r\n\t\tcanonEdges.forEach(val => this[data].push(val >> 16, val & 0xffff))\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh<T extends string>(\r\n\t\tthis: Mesh & { TRIANGLES: int[] },\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: any, indexBufferName: string = 'LINES'): this {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tif (!this.LINES) this.addIndexBuffer('LINES')\r\n\t\tconst tris = this.TRIANGLES\r\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\r\n\t\tconst lines = this[indexBufferName]\r\n\t\tfor (let i = 0; i < tris.length; i += 3) {\r\n\t\t\tif (tris[i + 0] < tris[i + 1]) lines.push(tris[i + 0], tris[i + 1])\r\n\t\t\tif (tris[i + 1] < tris[i + 2]) lines.push(tris[i + 1], tris[i + 2])\r\n\t\t\tif (tris[i + 2] < tris[i + 0]) lines.push(tris[i + 2], tris[i + 0])\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tcomputeNormalLines(this: Mesh & { normals: V3[] }, length: number): this & { LINES: int[] }\r\n\tcomputeNormalLines<T extends string>(\r\n\t\tthis: Mesh & { normals: V3[] },\r\n\t\tlength: number,\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeNormalLines(this: any, length: number = 1, indexBufferName: string = 'LINES') {\r\n\t\tif (!this.normals) {\r\n\t\t\tthrow new Error('normals must be defined.')\r\n\t\t}\r\n\t\tconst vs = this.vertices,\r\n\t\t\tsi = this.vertices.length\r\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\r\n\r\n\t\tfor (let i = 0; i < this.normals.length; i++) {\r\n\t\t\tvs[si + i] = vs[i].plus(this.normals[i].toLength(length))\r\n\t\t\tthis[indexBufferName].push(si + i, i)\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetAABB(): AABB {\r\n\t\treturn new AABB().addPoints(this.vertices)\r\n\t}\r\n\r\n\tgetBoundingSphere(): { center: V3; radius: number } {\r\n\t\tconst sphere = { center: this.getAABB().getCenter(), radius: 0 }\r\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\r\n\t\t\tsphere.radius = Math.max(sphere.radius, this.vertices[i].minus(sphere.center).length())\r\n\t\t}\r\n\t\treturn sphere\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a square mesh in the XY plane.\r\n\t * Texture coordinates (buffer \"coords\") are set to go from 0 to 1 in either direction.\r\n\t *\r\n\t * @param options foo\r\n\t * @param options.detail Defaults to 1\r\n\t * @param options.detailX Defaults to options.detail. Number of subdivisions in X direction.\r\n\t * @param options.detailY Defaults to options.detail. Number of subdivisions in Y direction.j\r\n\t * @param options.width defaults to 1\r\n\t * @param options.height defaults to 1\r\n\t * @param options.startX defaults to 0\r\n\t * @param options.startY defaults to 0\r\n\t */\r\n\tstatic plane(\r\n\t\toptions: {\r\n\t\t\tdetail?: int\r\n\t\t\tdetailX?: int\r\n\t\t\tdetailY?: int\r\n\t\t\twidth?: number\r\n\t\t\theight?: number\r\n\t\t\tstartX?: number\r\n\t\t\tstartY?: number\r\n\t\t} = {},\r\n\t) {\r\n\t\tconst detailX = options.detailX || options.detail || 1\r\n\t\tconst detailY = options.detailY || options.detail || 1\r\n\t\tconst startX = options.startX || 0\r\n\t\tconst startY = options.startY || 0\r\n\t\tconst width = options.width || 1\r\n\t\tconst height = options.height || 1\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\r\n\r\n\t\tfor (let j = 0; j <= detailY; j++) {\r\n\t\t\tconst t = j / detailY\r\n\t\t\tfor (let i = 0; i <= detailX; i++) {\r\n\t\t\t\tconst s = i / detailX\r\n\t\t\t\tmesh.vertices.push(new V3(startX + s * width, startY + t * height, 0))\r\n\t\t\t\tmesh.coords.push([s, t])\r\n\t\t\t\tmesh.normals.push(V3.Z)\r\n\t\t\t\tif (i < detailX && j < detailY) {\r\n\t\t\t\t\tconst offset = i + j * (detailX + 1)\r\n\t\t\t\t\tmesh.TRIANGLES.push(\r\n\t\t\t\t\t\toffset,\r\n\t\t\t\t\t\toffset + detailX + 1,\r\n\t\t\t\t\t\toffset + 1,\r\n\t\t\t\t\t\toffset + detailX + 1,\r\n\t\t\t\t\t\toffset + detailX + 2,\r\n\t\t\t\t\t\toffset + 1,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < detailX; i++) {\r\n\t\t\tmesh.LINES.push(i, i + 1)\r\n\t\t\tmesh.LINES.push((detailX + 1) * detailY + i, (detailX + 1) * detailY + i + 1)\r\n\t\t}\r\n\t\tfor (let j = 0; j < detailY; j++) {\r\n\t\t\tmesh.LINES.push(detailX * j, detailX * (j + 1) + 1)\r\n\t\t\tmesh.LINES.push(detailX * (j + 1), detailX * (j + 2) + 1)\r\n\t\t}\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t// unique corners of a unit cube. Used by Mesh.cube to generate a cube mesh.\r\n\tstatic UNIT_CUBE_CORNERS = [\r\n\t\tV3.O,\r\n\t\tnew V3(0, 0, 1),\r\n\t\tnew V3(0, 1, 0),\r\n\t\tnew V3(0, 1, 1),\r\n\r\n\t\tnew V3(1, 0, 0),\r\n\t\tnew V3(1, 0, 1),\r\n\t\tnew V3(1, 1, 0),\r\n\t\tV3.XYZ,\r\n\t]\r\n\r\n\tstatic box(xDetail: int = 1, yDetail: int = 1, zDetail: int = 1) {\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tmesh.vertices.length = mesh.normals.length =\r\n\t\t\t2 * ((xDetail + 1) * (yDetail + 1) + (yDetail + 1) * (zDetail + 1) + (zDetail + 1) * (xDetail + 1))\r\n\t\tmesh.TRIANGLES.length = 4 * (xDetail * yDetail + yDetail * zDetail + zDetail * xDetail)\r\n\t\tlet vi = 0,\r\n\t\t\tti = 0\r\n\t\tfunction x(detailX: int, detailY: int, m: M4, startX = 0, width = 1, startY = 0, height = 1) {\r\n\t\t\tconst normal = m.transformVector(V3.Z)\r\n\t\t\tfor (let j = 0; j <= detailY; j++) {\r\n\t\t\t\tconst t = j / detailY\r\n\t\t\t\tfor (let i = 0; i <= detailX; i++) {\r\n\t\t\t\t\tconst s = i / detailX\r\n\t\t\t\t\tmesh.vertices[vi] = m.transformPoint(new V3(startX + s * width, startY + t * height, 0))\r\n\t\t\t\t\tmesh.normals[vi] = normal\r\n\t\t\t\t\tvi++\r\n\t\t\t\t\tif (i < detailX && j < detailY) {\r\n\t\t\t\t\t\tconst offset = i + j * (detailX + 1)\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 2\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tx(yDetail, xDetail, M4.forSys(V3.Y, V3.X, V3.Z.negated()))\r\n\t\tx(xDetail, yDetail, M4.translate(V3.Z))\r\n\t\tx(zDetail, yDetail, M4.forSys(V3.Z, V3.Y, V3.X.negated()))\r\n\t\tx(yDetail, zDetail, M4.forSys(V3.Y, V3.Z, V3.X, V3.X))\r\n\t\tx(xDetail, zDetail, M4.forSys(V3.X, V3.Z, V3.Y.negated()))\r\n\t\tx(zDetail, xDetail, M4.forSys(V3.Z, V3.X, V3.Y, V3.Y))\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a unit cube (1x1x1) starting at the origin and extending into the (+ + +) octant.\r\n\t * I.e. box from V3.O to V3(1,1,1)\r\n\t * Creates line (only cube edges), triangle, vertex and normal1 buffers.\r\n\t */\r\n\tstatic cube() {\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addIndexBuffer('LINES')\r\n\r\n\t\t// basically indexes for faces of the cube. vertices each need to be added 3 times,\r\n\t\t// as they have different normals depending on the face being rendered\r\n\t\t// prettier-ignore\r\n\t\tconst VERTEX_CORNERS = [\r\n\t\t\t0, 1, 2, 3, // X = 0\r\n\t\t\t4, 5, 6, 7, // X = 1\r\n\r\n\t\t\t0, 4, 1, 5, // Y = 0\r\n\t\t\t2, 6, 3, 7, // Y = 1\r\n\r\n\t\t\t2, 6, 0, 4, // Z = 0\r\n\t\t\t3, 7, 1, 5, // Z = 1\r\n\t\t]\r\n\t\tmesh.vertices = VERTEX_CORNERS.map(i => Mesh.UNIT_CUBE_CORNERS[i])\r\n\t\tmesh.normals = [V3.X.negated(), V3.X, V3.Y.negated(), V3.Y, V3.Z.negated(), V3.Z].flatMap(v => [v, v, v, v])\r\n\t\tfor (let i = 0; i < 6 * 4; i += 4) {\r\n\t\t\tpushQuad(\r\n\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\t0 != i % 8,\r\n\t\t\t\tVERTEX_CORNERS[i],\r\n\t\t\t\tVERTEX_CORNERS[i + 1],\r\n\t\t\t\tVERTEX_CORNERS[i + 2],\r\n\t\t\t\tVERTEX_CORNERS[i + 3],\r\n\t\t\t)\r\n\t\t}\r\n\t\t// indexes of LINES relative to UNIT_CUBE_CORNERS. Mapped to VERTEX_CORNERS.indexOf\r\n\t\t// so they make sense in the context of the mesh\r\n\t\t// prettier-ignore\r\n\t\tmesh.LINES = [\r\n\t\t\t0, 1,\r\n\t\t\t0, 2,\r\n\t\t\t1, 3,\r\n\t\t\t2, 3,\r\n\r\n\t\t\t0, 4,\r\n\t\t\t1, 5,\r\n\t\t\t2, 6,\r\n\t\t\t3, 7,\r\n\r\n\t\t\t4, 5,\r\n\t\t\t4, 6,\r\n\t\t\t5, 7,\r\n\t\t\t6, 7,\r\n\t\t].map(i => VERTEX_CORNERS.indexOf(i))\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic isocahedron() {\r\n\t\treturn Mesh.sphere(0)\r\n\t}\r\n\r\n\tstatic sphere2(latitudes: int, longitudes: int) {\r\n\t\tconst baseVertices = arrayFromFunction(latitudes, i => {\r\n\t\t\tconst angle = (i / (latitudes - 1)) * PI - PI / 2\r\n\t\t\treturn new V3(0, cos(angle), sin(angle))\r\n\t\t})\r\n\t\treturn Mesh.rotation(baseVertices, { anchor: V3.O, dir1: V3.Z }, 2 * PI, longitudes, true, baseVertices)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a sphere mesh with radius 1 created by subdividing the faces of a isocahedron (20-sided) recursively\r\n\t * The sphere is positioned at the origin\r\n\t * @param subdivisions\r\n\t *      How many recursive divisions to do. A subdivision divides a triangle into 4,\r\n\t *      so the total number of triangles is 20 * 4^subdivisions\r\n\t * @returns\r\n\t *      Contains vertex and normal1 buffers and index buffers for triangles and LINES\r\n\t */\r\n\tstatic sphere(subdivisions: int = 3) {\r\n\t\tconst golden = (1 + Math.sqrt(5)) / 2,\r\n\t\t\tu = new V3(1, golden, 0).unit(),\r\n\t\t\ts = u.x,\r\n\t\t\tt = u.y\r\n\t\t// base vertices of isocahedron\r\n\t\tconst vertices = [\r\n\t\t\tnew V3(-s, t, 0),\r\n\t\t\tnew V3(s, t, 0),\r\n\t\t\tnew V3(-s, -t, 0),\r\n\t\t\tnew V3(s, -t, 0),\r\n\r\n\t\t\tnew V3(0, -s, t),\r\n\t\t\tnew V3(0, s, t),\r\n\t\t\tnew V3(0, -s, -t),\r\n\t\t\tnew V3(0, s, -t),\r\n\r\n\t\t\tnew V3(t, 0, -s),\r\n\t\t\tnew V3(t, 0, s),\r\n\t\t\tnew V3(-t, 0, -s),\r\n\t\t\tnew V3(-t, 0, s),\r\n\t\t]\r\n\t\t// base triangles of isocahedron\r\n\t\t// prettier-ignore\r\n\t\tconst triangles = [\r\n\t\t\t// 5 faces around point 0\r\n\t\t\t0, 11, 5,\r\n\t\t\t0, 5, 1,\r\n\t\t\t0, 1, 7,\r\n\t\t\t0, 7, 10,\r\n\t\t\t0, 10, 11,\r\n\r\n\t\t\t// 5 adjacent faces\r\n\t\t\t1, 5, 9,\r\n\t\t\t5, 11, 4,\r\n\t\t\t11, 10, 2,\r\n\t\t\t10, 7, 6,\r\n\t\t\t7, 1, 8,\r\n\r\n\t\t\t// 5 faces around point 3\r\n\t\t\t3, 9, 4,\r\n\t\t\t3, 4, 2,\r\n\t\t\t3, 2, 6,\r\n\t\t\t3, 6, 8,\r\n\t\t\t3, 8, 9,\r\n\r\n\t\t\t// 5 adjacent faces\r\n\t\t\t4, 9, 5,\r\n\t\t\t2, 4, 11,\r\n\t\t\t6, 2, 10,\r\n\t\t\t8, 6, 7,\r\n\t\t\t9, 8, 1,\r\n\t\t]\r\n\r\n\t\t/**\r\n\t\t * Tesselates triangle a b c\r\n\t\t * a b c must already be in vertices with the indexes ia ib ic\r\n\t\t * res is the number of subdivisions to do. 0 just results in triangle and line indexes being added to the\r\n\t\t * respective buffers.\r\n\t\t */\r\n\t\tfunction tesselateRecursively(\r\n\t\t\ta: V3,\r\n\t\t\tb: V3,\r\n\t\t\tc: V3,\r\n\t\t\tres: int,\r\n\t\t\tvertices: V3[],\r\n\t\t\ttriangles: int[],\r\n\t\t\tia: int,\r\n\t\t\tib: int,\r\n\t\t\tic: int,\r\n\t\t\tlines: int[],\r\n\t\t) {\r\n\t\t\tif (0 == res) {\r\n\t\t\t\ttriangles.push(ia, ib, ic)\r\n\t\t\t\tif (ia < ib) lines.push(ia, ib)\r\n\t\t\t\tif (ib < ic) lines.push(ib, ic)\r\n\t\t\t\tif (ic < ia) lines.push(ic, ia)\r\n\t\t\t} else {\r\n\t\t\t\t// subdivide the triangle abc into 4 by adding a vertex (with the correct distance from the origin)\r\n\t\t\t\t// between each segment ab, bc and cd, then calling the function recursively\r\n\t\t\t\tconst abMid1 = a.plus(b).toLength(1),\r\n\t\t\t\t\tbcMid1 = b.plus(c).toLength(1),\r\n\t\t\t\t\tcaMid1 = c.plus(a).toLength(1)\r\n\t\t\t\t// indexes of new vertices:\r\n\t\t\t\tconst iabm = vertices.length,\r\n\t\t\t\t\tibcm = iabm + 1,\r\n\t\t\t\t\ticam = iabm + 2\r\n\t\t\t\tvertices.push(abMid1, bcMid1, caMid1)\r\n\t\t\t\ttesselateRecursively(abMid1, bcMid1, caMid1, res - 1, vertices, triangles, iabm, ibcm, icam, lines)\r\n\t\t\t\ttesselateRecursively(a, abMid1, caMid1, res - 1, vertices, triangles, ia, iabm, icam, lines)\r\n\t\t\t\ttesselateRecursively(b, bcMid1, abMid1, res - 1, vertices, triangles, ib, ibcm, iabm, lines)\r\n\t\t\t\ttesselateRecursively(c, caMid1, bcMid1, res - 1, vertices, triangles, ic, icam, ibcm, lines)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\tmesh.vertices.push(...vertices)\r\n\t\tsubdivisions = undefined == subdivisions ? 4 : subdivisions\r\n\t\tfor (let i = 0; i < 20; i++) {\r\n\t\t\tconst [ia, ic, ib] = triangles.slice(i * 3, i * 3 + 3)\r\n\t\t\ttesselateRecursively(\r\n\t\t\t\tvertices[ia],\r\n\t\t\t\tvertices[ic],\r\n\t\t\t\tvertices[ib],\r\n\t\t\t\tsubdivisions,\r\n\t\t\t\tmesh.vertices,\r\n\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\tia,\r\n\t\t\t\tic,\r\n\t\t\t\tib,\r\n\t\t\t\tmesh.LINES,\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tmesh.normals = mesh.vertices\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic aabb(aabb: AABB) {\r\n\t\tconst matrix = M4.product(\r\n\t\t\tM4.translate(aabb.min),\r\n\t\t\tM4.scale(aabb.size().max(new V3(NLA_PRECISION, NLA_PRECISION, NLA_PRECISION))),\r\n\t\t)\r\n\t\tconst mesh = Mesh.cube().transform(matrix)\r\n\t\t// mesh.vertices = aabb.corners()\r\n\t\tmesh.computeNormalLines(20)\r\n\t\tmesh.compile()\r\n\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic offsetVertices(\r\n\t\tvertices: V3[],\r\n\t\toffset: V3,\r\n\t\tclose: boolean,\r\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][] }\r\n\tstatic offsetVertices(\r\n\t\tvertices: V3[],\r\n\t\toffset: V3,\r\n\t\tclose: boolean,\r\n\t\tnormals: V3[],\r\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][]; normals: V3[] }\r\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals?: V3[]) {\r\n\t\tassertVectors.apply(undefined, vertices)\r\n\t\tassertVectors(offset)\r\n\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\r\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tmesh.vertices = vertices.concat(vertices.map(v => v.plus(offset)))\r\n\t\tconst vl = vertices.length\r\n\t\tmesh.coords = arrayFromFunction(vl * 2, (i): [number, number] => [(i % vl) / vl, (i / vl) | 0])\r\n\r\n\t\tconst triangles = mesh.TRIANGLES\r\n\t\tfor (let i = 0; i < vertices.length - 1; i++) {\r\n\t\t\tpushQuad(triangles, false, i, i + 1, vertices.length + i, vertices.length + i + 1)\r\n\t\t}\r\n\t\tif (close) {\r\n\t\t\tpushQuad(triangles, false, vertices.length - 1, 0, vertices.length * 2 - 1, vertices.length)\r\n\t\t}\r\n\t\tif (normals) {\r\n\t\t\tmesh.normals = normals.concat(normals)\r\n\t\t}\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t// Creates a new $Mesh by rotating $vertices by $totalRads around $lineAxis (according to the right-hand\r\n\t// rule). $steps is the number of steps to take. $close is whether the vertices of the first and last step\r\n\t// should be connected by triangles. If $normals is set (pass an array of V3s of the same length as $vertices),\r\n\t// these will also be rotated and correctly added to the mesh.\r\n\t// @example const precious = Mesh.rotation([V(10, 0, -2), V(10, 0, 2), V(11, 0, 2), V(11, 0, -2)], , L3.Z, 512)\r\n\tstatic rotation(\r\n\t\tvertices: V3[],\r\n\t\tlineAxis: { anchor: V3; dir1: V3 },\r\n\t\ttotalRads: raddd,\r\n\t\tsteps: int,\r\n\t\tclose = true,\r\n\t\tnormals?: V3[],\r\n\t) {\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES')\r\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tconst vc = vertices.length,\r\n\t\t\tvTotal = vc * steps\r\n\r\n\t\tconst rotMat = new M4()\r\n\t\tconst triangles = mesh.TRIANGLES\r\n\t\tfor (let i = 0; i < steps; i++) {\r\n\t\t\t// add triangles\r\n\t\t\tconst rads = (totalRads / steps) * i\r\n\t\t\tM4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\r\n\t\t\tmesh.vertices.push(...rotMat.transformedPoints(vertices))\r\n\r\n\t\t\tnormals && mesh.normals!.push(...rotMat.transformedVectors(normals))\r\n\t\t\tif (close || i !== steps - 1) {\r\n\t\t\t\tfor (let j = 0; j < vc - 1; j++) {\r\n\t\t\t\t\tpushQuad(\r\n\t\t\t\t\t\ttriangles,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\ti * vc + j + 1,\r\n\t\t\t\t\t\ti * vc + j,\r\n\t\t\t\t\t\t((i + 1) * vc + j + 1) % vTotal,\r\n\t\t\t\t\t\t((i + 1) * vc + j) % vTotal,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: undefined,\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t): Mesh & { TRIANGLES: int[] }\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: ((d: number, z: number) => V3),\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t): Mesh & { normals: V3[]; TRIANGLES: int[] }\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: ((d: number, z: number) => V3) | undefined,\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t) {\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('normals', 'ts_Normal')\r\n\t\tfor (let si = 0; si <= sRes; si++) {\r\n\t\t\tconst s = lerp(sMin, sMax, si / sRes)\r\n\t\t\tfor (let ti = 0; ti <= tRes; ti++) {\r\n\t\t\t\tconst t = lerp(tMin, tMax, ti / tRes)\r\n\t\t\t\tmesh.vertices.push(pF(s, t))\r\n\t\t\t\tpN && mesh.normals.push(pN(s, t))\r\n\t\t\t\tif (ti < tRes && si < sRes) {\r\n\t\t\t\t\tconst offset = ti + si * (tRes + 1)\r\n\t\t\t\t\tpushQuad(mesh.TRIANGLES, false, offset, offset + tRes + 1, offset + 1, offset + tRes + 2)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic load(json: { vertices: Tuple3<number>[]; triangles?: Tuple3<number>[]; normals?: Tuple3<number>[] }) {\r\n\t\tconst mesh = new Mesh()\r\n\t\tif (Array.isArray(json.vertices[0])) {\r\n\t\t\tmesh.vertices = json.vertices.map(x => V(x))\r\n\t\t} else {\r\n\t\t\tthrow new Error()\r\n\t\t}\r\n\t\tif (json.triangles) {\r\n\t\t\tmesh.addIndexBuffer('TRIANGLES')\r\n\t\t\t;(mesh as any).TRIANGLES = json.triangles\r\n\t\t}\r\n\t\tif (json.normals) {\r\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t;(mesh as any).normals = json.normals\r\n\t\t}\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tvertices: this.vertices.map(x => x.toArray()),\r\n\t\t\tTRIANGLES: (this as any).TRIANGLES,\r\n\t\t}\r\n\t}\r\n}\r\n","/* tslint:disable:no-string-literal */\r\nimport { assert, assertf, assertInst, assertVectors, int, M4, NLA_DEBUG, V3 } from 'ts3dutils'\r\n\r\nimport { Buffer, currentGL, GL_COLOR, Mesh, TSGLContext } from './index'\r\n\r\nimport GL = WebGLRenderingContextStrict\r\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\r\n\r\n/**\r\n * These are all the draw modes usable in OpenGL ES\r\n */\r\nconst DRAW_MODE_NAMES = {\r\n\t[WGL.POINTS]: 'POINTS',\r\n\t[WGL.LINES]: 'LINES',\r\n\t[WGL.LINE_STRIP]: 'LINE_STRIP',\r\n\t[WGL.LINE_LOOP]: 'LINE_LOOP',\r\n\t[WGL.TRIANGLES]: 'TRIANGLES',\r\n\t[WGL.TRIANGLE_STRIP]: 'TRIANGLE_STRIP',\r\n\t[WGL.TRIANGLE_FAN]: 'TRIANGLE_FAN',\r\n}\r\nconst DRAW_MODE_CHECKS: { [type: string]: (x: int) => boolean } = {\r\n\t[WGL.POINTS]: _ => true,\r\n\t[WGL.LINES]: x => 0 == x % 2, // divisible by 2\r\n\t[WGL.LINE_STRIP]: x => x > 2, // need at least 2\r\n\t[WGL.LINE_LOOP]: x => x > 2, // more like > 3, but oh well\r\n\t[WGL.TRIANGLES]: x => 0 == x % 3, // divisible by 3\r\n\t[WGL.TRIANGLE_STRIP]: x => x > 3,\r\n\t[WGL.TRIANGLE_FAN]: x => x > 3,\r\n}\r\n\r\nexport const SHADER_VAR_TYPES = [\r\n\t'FLOAT',\r\n\t'FLOAT_MAT2',\r\n\t'FLOAT_MAT3',\r\n\t'FLOAT_MAT4',\r\n\t'FLOAT_VEC2',\r\n\t'FLOAT_VEC3',\r\n\t'FLOAT_VEC4',\r\n\t'INT',\r\n\t'INT_VEC2',\r\n\t'INT_VEC3',\r\n\t'INT_VEC4',\r\n\t'UNSIGNED_INT',\r\n]\r\n\r\nexport function isArray<T>(obj: any): obj is T[] {\r\n\treturn Array == obj.constructor || Float32Array == obj.constructor || Float64Array == obj.constructor\r\n}\r\n\r\nexport interface UniformTypesMap {\r\n\tFLOAT_VEC4: GL_COLOR | V3\r\n\tFLOAT_VEC3: [number, number, number] | V3\r\n\tFLOAT_VEC2: [number, number] | V3\r\n\tFLOAT: number\r\n\tINT: int\r\n\tFLOAT_MAT4: M4 | number[]\r\n\tFLOAT_MAT3: M4 | number[]\r\n\tSAMPLER_2D: int\r\n\tBOOL: boolean\r\n}\r\nexport type UniformTypes = keyof UniformTypesMap\r\n\r\nfunction isFloatArray(obj: any): obj is number[] | Float64Array | Float32Array {\r\n\treturn (\r\n\t\tFloat32Array == obj.constructor ||\r\n\t\tFloat64Array == obj.constructor ||\r\n\t\t(Array.isArray(obj) && obj.every(x => 'number' == typeof x))\r\n\t)\r\n}\r\n\r\nfunction isIntArray(x: any) {\r\n\tif (\r\n\t\t[Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array].some(\r\n\t\t\ty => x instanceof y,\r\n\t\t)\r\n\t) {\r\n\t\treturn true\r\n\t}\r\n\treturn (\r\n\t\t(x instanceof Float32Array || x instanceof Float64Array || Array.isArray(x)) &&\r\n\t\t(x as number[]).every(x => Number.isInteger(x))\r\n\t)\r\n}\r\n\r\nexport type ShaderType<UniformTypes, AttributeTypes = {}> = string & { T?: UniformTypes; A?: AttributeTypes }\r\nexport type VarTypeMap = { [name: string]: UniformTypes }\r\nexport type ShaderSource<\r\n\tU extends VarTypeMap,\r\n\tIN extends VarTypeMap,\r\n\tOUT extends VarTypeMap,\r\n\tkind extends 'vertex' | 'fragment'\r\n> = string & { U: U; IN: IN; OUT: OUT; kind: kind }\r\n\r\n//const x:UniformTypes = undefined as 'FLOAT_VEC4' | 'FLOAT_VEC3'\r\nexport class Shader<UniformTypes extends VarTypeMap = any, AttributeTypes extends VarTypeMap = any> {\r\n\tprogram: WebGLProgram\r\n\tactiveMatrices: { [matrixName: string]: boolean }\r\n\tattributeLocations: { [attributeName: string]: number }\r\n\tconstantAttributes: { [attributeName: string]: boolean }\r\n\tuniformLocations: { [uniformName: string]: WebGLUniformLocation }\r\n\tuniformInfos: { [uniformName: string]: GL.WebGLActiveInfo<GL.UniformType> }\r\n\tprojectionMatrixVersion = -1\r\n\tmodelViewMatrixVersion = -1\r\n\tgl: TSGLContext\r\n\r\n\t/**\r\n\t * Create shader drom typed vertex and fragment source. Weird generic arguments are because\r\n\t * the vertex shader is required to have the OUT types the fragment shader needs as IN,\r\n\t * but not vice-versa.\r\n\t */\r\n\tstatic create<\r\n\t\tFragSrc extends ShaderSource<{}, {}, {}, 'fragment'>,\r\n\t\tVertSrc extends ShaderSource<{}, {}, FragSrc['IN'], 'vertex'>\r\n\t>(\r\n\t\tvertexSource: VertSrc,\r\n\t\tfragmentSource: FragSrc,\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<VertSrc['U'] & FragSrc['U'], VertSrc['IN']>\r\n\t/**\r\n\t * Create shader from typed vertex and untyped fragment source. Uniform of the fragment shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<FU extends VarTypeMap, VertSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\r\n\t\tvertexSource: VertSrc,\r\n\t\tfragmentSource: string & { IN?: undefined },\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<FU & VertSrc['U'], VertSrc['IN']>\r\n\t/**\r\n\t * Create shader from untyped vertex and typed fragment source. Uniform and attribute types of the shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<VU extends VarTypeMap, VA extends VarTypeMap, FragSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\r\n\t\tvertexSource: string & { IN?: undefined },\r\n\t\tfragmentSource: FragSrc,\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<VU & FragSrc['U'], VA>\r\n\t/**\r\n\t * Create shader from untyped vertex and fragment source. Uniform and attribute types of the shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<U extends VarTypeMap = {}, A extends VarTypeMap = {}>(\r\n\t\tvertexSource: string & { IN?: undefined },\r\n\t\tfragmentSource: string & { IN?: undefined },\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<U, A>\r\n\tstatic create(vertexSource: string, fragmentSource: string, gl?: TSGLContext) {\r\n\t\treturn new Shader(vertexSource, fragmentSource, gl) as any\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\r\n\t * prefixed with `gl_`, are automatically added to all shader sources to make\r\n\t * simple shaders easier to write.\r\n\t * Headers for the following variables are automatically prepended to the passed source. The correct variables\r\n\t * are also automatically passed to the shader when drawing.\r\n\t *\r\n\t * For vertex and fragment shaders:\r\n\t uniform mat3 ts_NormalMatrix;\r\n\t uniform mat4 ts_ModelViewMatrix;\r\n\t uniform mat4 ts_ProjectionMatrix;\r\n\t uniform mat4 ts_ModelViewProjectionMatrix;\r\n\t uniform mat4 ts_ModelViewMatrixInverse;\r\n\t uniform mat4 ts_ProjectionMatrixInverse;\r\n\t uniform mat4 ts_ModelViewProjectionMatrixInverse;\r\n\t *\r\n\t *\r\n\t * Example usage:\r\n\t *\r\n\t *  const shader = new GL.Shader(\r\n\t *      `void main() { gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex; }`,\r\n\t *      `uniform vec4 color; void main() { gl_FragColor = color; }`)\r\n\t *\r\n\t *  shader.uniforms({ color: [1, 0, 0, 1] }).draw(mesh)\r\n\t *\r\n\t * Compiles a shader program using the provided vertex and fragment shaders.\r\n\t */\r\n\tprotected constructor(vertexSource: string, fragmentSource: string, gl = currentGL()) {\r\n\t\t// const versionRegex = /^(?:\\s+|\\/\\/[\\s\\S]*?[\\r\\n]+|\\/\\*[\\s\\S]*?\\*\\/)+(#version\\s+(\\d+)\\s+es)/\r\n\t\t// Headers are prepended to the sources to provide some automatic functionality.\r\n\t\tconst header = `\r\n\t\tuniform mat3 ts_NormalMatrix;\r\n\t\tuniform mat4 ts_ModelViewMatrix;\r\n\t\tuniform mat4 ts_ProjectionMatrix;\r\n\t\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\t\tuniform mat4 ts_ModelViewMatrixInverse;\r\n\t\tuniform mat4 ts_ProjectionMatrixInverse;\r\n\t\tuniform mat4 ts_ModelViewProjectionMatrixInverse;\r\n\t`\r\n\t\tconst matrixNames = header.match(/\\bts_\\w+/g)\r\n\r\n\t\t// Compile and link errors are thrown as strings.\r\n\t\tfunction compileSource(type: GL.ShaderType, source: string) {\r\n\t\t\tconst shader = gl.createShader(type)!\r\n\t\t\tgl.shaderSource(shader, source)\r\n\t\t\tgl.compileShader(shader)\r\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n\t\t\t\tthrow new Error('compile error: ' + gl.getShaderInfoLog(shader))\r\n\t\t\t}\r\n\t\t\treturn shader\r\n\t\t}\r\n\r\n\t\tthis.gl = gl\r\n\t\tthis.program = gl.createProgram()!\r\n\t\tgl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource))\r\n\t\tgl.attachShader(this.program, compileSource(gl.FRAGMENT_SHADER, fragmentSource))\r\n\t\tgl.linkProgram(this.program)\r\n\t\tif (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n\t\t\tthrow new Error('link error: ' + gl.getProgramInfoLog(this.program))\r\n\t\t}\r\n\t\tthis.attributeLocations = {}\r\n\t\tthis.uniformLocations = {}\r\n\t\tthis.constantAttributes = {}\r\n\r\n\t\t// Check for the use of built-in matrices that require expensive matrix\r\n\t\t// multiplications to compute, and record these in `activeMatrices`.\r\n\t\tthis.activeMatrices = {}\r\n\t\tmatrixNames &&\r\n\t\t\tmatrixNames.forEach(name => {\r\n\t\t\t\tif (gl.getUniformLocation(this.program, name)) {\r\n\t\t\t\t\tthis.activeMatrices[name] = true\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tthis.uniformInfos = {}\r\n\t\tfor (let i = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS); i-- > 0; ) {\r\n\t\t\t// see https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveUniform.xml\r\n\t\t\t// this.program has already been checked\r\n\t\t\t// i is in bounds\r\n\t\t\tconst info = gl.getActiveUniform(this.program, i)!\r\n\t\t\tthis.uniformInfos[info.name] = info\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set a uniform for each property of `uniforms`. The correct `viewerGL.uniform*()` method is inferred from the\r\n\t * value types and from the stored uniform sampler flags.\r\n\t */\r\n\tuniforms(uniforms: Partial<{ [K in keyof UniformTypes]: UniformTypesMap[UniformTypes[K]] }>): this {\r\n\t\tconst gl = this.gl\r\n\t\tgl.useProgram(this.program)\r\n\r\n\t\tfor (const name in uniforms) {\r\n\t\t\tconst location = this.uniformLocations[name] || gl.getUniformLocation(this.program, name)\r\n\t\t\t// !location && console.warn(name + ' uniform is not used in shader')\r\n\t\t\tif (!location) continue\r\n\t\t\tthis.uniformLocations[name] = location\r\n\t\t\tlet value: any = uniforms[name] as any\r\n\t\t\tconst info = this.uniformInfos[name]\r\n\t\t\tif (NLA_DEBUG) {\r\n\t\t\t\t// TODO: better errors\r\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\r\n\t\t\t\t\tif (1 == info.size) {\r\n\t\t\t\t\t\tassert(Number.isInteger(value))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tassert(\r\n\t\t\t\t\t\t\tisIntArray(value) && value.length == info.size,\r\n\t\t\t\t\t\t\t'value must be int array if info.size != 1',\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tassert(gl.FLOAT != info.type || ((1 == info.size && 'number' === typeof value) || isFloatArray(value)))\r\n\t\t\t\tassert(\r\n\t\t\t\t\tgl.FLOAT_VEC3 != info.type ||\r\n\t\t\t\t\t\t((1 == info.size && value instanceof V3) ||\r\n\t\t\t\t\t\t\t(Array.isArray(value) && info.size == value.length && assertVectors(...value))),\r\n\t\t\t\t)\r\n\t\t\t\tassert(gl.FLOAT_VEC4 != info.type || 1 != info.size || (isFloatArray(value) && value.length == 4))\r\n\t\t\t\tassert(gl.FLOAT_MAT4 != info.type || value instanceof M4, () => value.toSource())\r\n\t\t\t\tassert(gl.FLOAT_MAT3 != info.type || value.length == 9 || value instanceof M4)\r\n\t\t\t}\r\n\t\t\tif (value instanceof V3) {\r\n\t\t\t\tvalue = value.toArray()\r\n\t\t\t}\r\n\t\t\tif (gl.FLOAT_VEC4 == info.type && info.size != 1) {\r\n\t\t\t\tif (value instanceof Float32Array || value instanceof Float64Array) {\r\n\t\t\t\t\tgl.uniform4fv(location, value instanceof Float32Array ? value : Float32Array.from(value))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.uniform4fv(location, value.concatenated())\r\n\t\t\t\t}\r\n\t\t\t} else if (gl.FLOAT == info.type && info.size != 1) {\r\n\t\t\t\tgl.uniform1fv(location, value)\r\n\t\t\t} else if (gl.FLOAT_VEC3 == info.type && info.size != 1) {\r\n\t\t\t\tgl.uniform3fv(location, V3.pack(value))\r\n\t\t\t} else if (value.length) {\r\n\t\t\t\tswitch (value.length) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tgl.uniform1fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tgl.uniform2fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tgl.uniform3fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tgl.uniform4fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t// Matrices are automatically transposed, since WebGL uses column-major\r\n\t\t\t\t\t// indices instead of row-major indices.\r\n\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\t\tgl.uniformMatrix3fv(location, false, new Float32Array([\r\n\t\t\t\t\t\t\tvalue[0], value[3], value[6],\r\n\t\t\t\t\t\t\tvalue[1], value[4], value[7],\r\n\t\t\t\t\t\t\tvalue[2], value[5], value[8],\r\n\t\t\t\t\t\t]))\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 16:\r\n\t\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\t\tgl.uniformMatrix4fv(location, false, new Float32Array([\r\n\t\t\t\t\t\t\tvalue[0], value[4], value[8], value[12],\r\n\t\t\t\t\t\t\tvalue[1], value[5], value[9], value[13],\r\n\t\t\t\t\t\t\tvalue[2], value[6], value[10], value[14],\r\n\t\t\t\t\t\t\tvalue[3], value[7], value[11], value[15],\r\n\t\t\t\t\t\t]))\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error('don\\'t know how to load uniform \"' + name + '\" of length ' + value.length)\r\n\t\t\t\t}\r\n\t\t\t} else if ('number' == typeof value) {\r\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\r\n\t\t\t\t\tgl.uniform1i(location, value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.uniform1f(location, value)\r\n\t\t\t\t}\r\n\t\t\t} else if ('boolean' == typeof value) {\r\n\t\t\t\tgl.uniform1i(location, +value)\r\n\t\t\t} else if (value instanceof M4) {\r\n\t\t\t\tconst m = value.m\r\n\t\t\t\tif (gl.FLOAT_MAT4 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix4fv(location, false, [\r\n\t\t\t\t\t\tm[0], m[4], m[8], m[12],\r\n\t\t\t\t\t\tm[1], m[5], m[9], m[13],\r\n\t\t\t\t\t\tm[2], m[6], m[10], m[14],\r\n\t\t\t\t\t\tm[3], m[7], m[11], m[15]])\r\n\t\t\t\t} else if (gl.FLOAT_MAT3 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix3fv(location, false, [\r\n\t\t\t\t\t\tm[0], m[4], m[8],\r\n\t\t\t\t\t\tm[1], m[5], m[9],\r\n\t\t\t\t\t\tm[2], m[6], m[10]])\r\n\t\t\t\t} else if (gl.FLOAT_MAT2 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix2fv(location, false, new Float32Array([\r\n\t\t\t\t\t\tm[0], m[4],\r\n\t\t\t\t\t\tm[1], m[5]]))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(`Can't assign M4 to ${info.type}`)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('attempted to set uniform \"' + name + '\" to invalid value ' + value)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tattributes(attributes: Partial<{ [K in keyof AttributeTypes]: UniformTypesMap[AttributeTypes[K]] }>): this {\r\n\t\tconst gl = this.gl\r\n\t\tgl.useProgram(this.program)\r\n\r\n\t\tfor (const name in attributes) {\r\n\t\t\tconst location = this.attributeLocations[name] || gl.getAttribLocation(this.program, name)\r\n\t\t\tif (location == -1) {\r\n\t\t\t\tif (!name.startsWith('ts_')) {\r\n\t\t\t\t\tconsole.warn(`Vertex buffer ${name} was not bound because the attribute is not active.`)\r\n\t\t\t\t}\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.attributeLocations[name] = location\r\n\t\t\tgl.disableVertexAttribArray(location)\r\n\t\t\tlet value = attributes[name]\r\n\t\t\tif (value instanceof V3) {\r\n\t\t\t\t// TODO: figure out the types here...\r\n\t\t\t\tvalue = value.toArray() as any\r\n\t\t\t}\r\n\t\t\tif ('number' === typeof value) {\r\n\t\t\t\tgl.vertexAttrib1f(location, value)\r\n\t\t\t} else {\r\n\t\t\t\tgl.vertexAttrib4fv(location, value as number[])\r\n\t\t\t\t// switch ((value as number[]).length) {\r\n\t\t\t\t// \tcase 1:\r\n\t\t\t\t// \t\tgl.vertexAttrib1fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 2:\r\n\t\t\t\t// \t\tgl.vertexAttrib2fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 3:\r\n\t\t\t\t// \t\tgl.vertexAttrib3fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 4:\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\tthis.constantAttributes[name] = true\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the mesh geometry as indexed\r\n\t * triangles or indexed LINES. Set `mode` to `gl.LINES` (and either add indices to `LINES` or call\r\n\t * `computeWireframe()`) to draw the mesh in wireframe.\r\n\t *\r\n\t * @param mesh\r\n\t * @param mode Defaults to 'TRIANGLES'. Must be passed as string so the correct index buffer can be\r\n\t *     automatically drawn.\r\n\t * @param start int\r\n\t * @param count int\r\n\t */\r\n\tdraw(mesh: Mesh, mode: GL.DrawMode = WGL.TRIANGLES, start?: int, count?: int): this {\r\n\t\tassert(mesh.hasBeenCompiled, 'mesh.hasBeenCompiled')\r\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\r\n\t\tconst modeName: string = DRAW_MODE_NAMES[mode]\r\n\t\t// assert(mesh.indexBuffers[modeStr], `mesh.indexBuffers[${modeStr}] undefined`)\r\n\t\treturn this.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers[modeName], mode, start, count)\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the\r\n\t * indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\r\n\t * names to `Buffer` objects of type `WGL.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\r\n\t * object of type `WGL.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\r\n\t * like `WGL.TRIANGLES` or `WGL.LINES`. This method automatically creates and caches\r\n\t * vertex attribute pointers for attributes as needed.\r\n\t */\r\n\tdrawBuffers(\r\n\t\tvertexBuffers: { [attributeName: string]: Buffer },\r\n\t\tindexBuffer: Buffer | undefined,\r\n\t\tmode: GL.DrawMode = WGL.TRIANGLES,\r\n\t\tstart: int = 0,\r\n\t\tcount?: int,\r\n\t): this {\r\n\t\tconst gl = this.gl\r\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\r\n\t\tassertf(() => 1 <= Object.keys(vertexBuffers).length)\r\n\t\tObject.keys(vertexBuffers).forEach(key => assertInst(Buffer, vertexBuffers[key]))\r\n\r\n\t\t// Only varruct up the built-in matrices that are active in the shader\r\n\t\tconst on = this.activeMatrices\r\n\t\tconst modelViewMatrixInverse =\r\n\t\t\t(on['ts_ModelViewMatrixInverse'] || on['ts_NormalMatrix']) &&\r\n\t\t\t//&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\r\n\t\t\tgl.modelViewMatrix.inversed()\r\n\t\tconst projectionMatrixInverse =\r\n\t\t\ton['ts_ProjectionMatrixInverse'] &&\r\n\t\t\t//&& this.projectionMatrixVersion != gl.projectionMatrixVersion\r\n\t\t\tgl.projectionMatrix.inversed()\r\n\t\tconst modelViewProjectionMatrix =\r\n\t\t\t(on['ts_ModelViewProjectionMatrix'] || on['ts_ModelViewProjectionMatrixInverse']) &&\r\n\t\t\t//&& (this.projectionMatrixVersion != gl.projectionMatrixVersion || this.modelViewMatrixVersion !=\r\n\t\t\t// gl.modelViewMatrixVersion)\r\n\t\t\tgl.projectionMatrix.times(gl.modelViewMatrix)\r\n\r\n\t\tconst uni: { [matrixName: string]: M4 } = {} // Uniform Matrices\r\n\t\ton['ts_ModelViewMatrix'] &&\r\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\r\n\t\t\t(uni['ts_ModelViewMatrix'] = gl.modelViewMatrix)\r\n\t\ton['ts_ModelViewMatrixInverse'] && (uni['ts_ModelViewMatrixInverse'] = modelViewMatrixInverse as M4)\r\n\t\ton['ts_ProjectionMatrix'] &&\r\n\t\t\tthis.projectionMatrixVersion != gl.projectionMatrixVersion &&\r\n\t\t\t(uni['ts_ProjectionMatrix'] = gl.projectionMatrix)\r\n\t\tprojectionMatrixInverse && (uni['ts_ProjectionMatrixInverse'] = projectionMatrixInverse)\r\n\t\tmodelViewProjectionMatrix && (uni['ts_ModelViewProjectionMatrix'] = modelViewProjectionMatrix)\r\n\t\tmodelViewProjectionMatrix &&\r\n\t\t\ton['ts_ModelViewProjectionMatrixInverse'] &&\r\n\t\t\t(uni['ts_ModelViewProjectionMatrixInverse'] = modelViewProjectionMatrix.inversed())\r\n\t\ton['ts_NormalMatrix'] &&\r\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\r\n\t\t\t(uni['ts_NormalMatrix'] = (modelViewMatrixInverse as M4).transposed())\r\n\t\tthis.uniforms(uni as any)\r\n\t\tthis.projectionMatrixVersion = gl.projectionMatrixVersion\r\n\t\tthis.modelViewMatrixVersion = gl.modelViewMatrixVersion\r\n\r\n\t\t// Create and enable attribute pointers as necessary.\r\n\t\tlet minVertexBufferLength = Infinity\r\n\t\tfor (const attribute in vertexBuffers) {\r\n\t\t\tconst buffer = vertexBuffers[attribute]\r\n\t\t\tassert(buffer.hasBeenCompiled)\r\n\t\t\tconst location = this.attributeLocations[attribute] || gl.getAttribLocation(this.program, attribute)\r\n\t\t\tif (location == -1 || !buffer.buffer) {\r\n\t\t\t\tif (!attribute.startsWith('ts_')) {\r\n\t\t\t\t\tconsole.warn(`Vertex buffer ${attribute} was not bound because the attribute is not active.`)\r\n\t\t\t\t}\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.attributeLocations[attribute] = location\r\n\t\t\tgl.bindBuffer(WGL.ARRAY_BUFFER, buffer.buffer)\r\n\r\n\t\t\tgl.enableVertexAttribArray(location)\r\n\r\n\t\t\tgl.vertexAttribPointer(location, buffer.spacing, WGL.FLOAT, false, 0, 0)\r\n\r\n\t\t\tminVertexBufferLength = Math.min(minVertexBufferLength, buffer.count)\r\n\t\t}\r\n\r\n\t\t// Disable unused attribute pointers.\r\n\t\tfor (const attribute in this.attributeLocations) {\r\n\t\t\tif (!(attribute in vertexBuffers)) {\r\n\t\t\t\tgl.disableVertexAttribArray(this.attributeLocations[attribute])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (NLA_DEBUG) {\r\n\t\t\tconst numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES)\r\n\t\t\tfor (let i = 0; i < numAttribs; ++i) {\r\n\t\t\t\tconst buffer = gl.getVertexAttrib(i, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)\r\n\t\t\t\tif (!buffer) {\r\n\t\t\t\t\tconst info = gl.getActiveAttrib(this.program, i)!\r\n\t\t\t\t\tif (!this.constantAttributes[info.name]) {\r\n\t\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\t'No buffer is bound to attribute ' + info.name + ' and it was not set with .attributes()',\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log('name:', info.name, 'type:', info.type, 'size:', info.size)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Draw the geometry.\r\n\t\tif (minVertexBufferLength) {\r\n\t\t\tif (undefined === count) {\r\n\t\t\t\tcount = indexBuffer ? indexBuffer.count : minVertexBufferLength\r\n\t\t\t}\r\n\t\t\tassert(\r\n\t\t\t\tDRAW_MODE_CHECKS[mode](count),\r\n\t\t\t\t'count ' +\r\n\t\t\t\t\tcount +\r\n\t\t\t\t\t\"doesn't fulfill requirement +\" +\r\n\t\t\t\t\tDRAW_MODE_CHECKS[mode].toString() +\r\n\t\t\t\t\t' for mode ' +\r\n\t\t\t\t\tDRAW_MODE_NAMES[mode],\r\n\t\t\t)\r\n\r\n\t\t\tif (indexBuffer) {\r\n\t\t\t\tassert(indexBuffer.hasBeenCompiled)\r\n\t\t\t\tassert(minVertexBufferLength > indexBuffer.maxValue!)\r\n\t\t\t\tassert(count % indexBuffer.spacing == 0)\r\n\t\t\t\tassert(start % indexBuffer.spacing == 0)\r\n\t\t\t\tif (start + count > indexBuffer.count) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Buffer not long enough for passed parameters start/length/buffer length ' +\r\n\t\t\t\t\t\t\tstart +\r\n\t\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\t\tcount +\r\n\t\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\t\tindexBuffer.count,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tgl.bindBuffer(WGL.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer!)\r\n\t\t\t\t// start parameter has to be multiple of sizeof(WGL.UNSIGNED_SHORT)\r\n\t\t\t\tgl.drawElements(mode, count, indexBuffer.bindSize, indexBuffer.type.BYTES_PER_ELEMENT * start)\r\n\t\t\t} else {\r\n\t\t\t\tif (start + count > minVertexBufferLength) {\r\n\t\t\t\t\tthrow new Error('invalid')\r\n\t\t\t\t}\r\n\t\t\t\tgl.drawArrays(mode, start, count)\r\n\t\t\t}\r\n\t\t\tgl.drawCallCount++\r\n\t\t}\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n","import { assert, int } from 'ts3dutils'\r\n\r\nimport { currentGL, TSGLContext } from './index'\r\nimport GL = WebGLRenderingContextStrict\r\nimport GL2 = WebGL2RenderingContext\r\n\r\nexport interface TextureOptions {\r\n\twrap?: GL.TextureWrap // defaults to WGL.CLAMP_TO_EDGE, or set wrapS and wrapT individually.\r\n\twrapS?: GL.TextureWrap\r\n\twrapT?: GL.TextureWrap\r\n\tfilter?: GL.TextureMagFilter // defaults to WGL.LINEAR, or set minFilter and magFilter individually.\r\n\tminFilter?: GL.TextureMinFilter\r\n\tmagFilter?: GL.TextureMagFilter\r\n\tformat?: GL2.TextureFormat // defaults to WGL.RGBA.\r\n\tinternalFormat?: GL2.TextureInternalFormat\r\n\ttype?: GL.ReadPixelsType // defaults to WGL.UNSIGNED_BYTE.\r\n\tdata?: any\r\n}\r\n\r\nexport class Texture {\r\n\theight: int\r\n\twidth: int\r\n\ttexture: WebGLTexture\r\n\t// e.g. viewerGL.UNSIGNED_BYTE, viewerGL.FLOAT\r\n\tinternalFormat: GL2.TextureInternalFormat\r\n\tformat: GL2.TextureFormat\r\n\t// e.g. viewerGL.RGBA\r\n\ttype: GL.ReadPixelsType\r\n\r\n\t/**\r\n\t * Provides a simple wrapper around WebGL textures that supports render-to-texture.\r\n\t *\r\n\t * The arguments `width` and `height` give the size of the texture in texels.\r\n\t * WebGL texture dimensions must be powers of two unless `filter` is set to\r\n\t * either `WGL.NEAREST` or `WGL.LINEAR` and `wrap` is set to `WGL.CLAMP_TO_EDGE`\r\n\t * (which they are by default).\r\n\t *\r\n\t * Texture parameters can be passed in via the `options` argument.\r\n\t * Example usage:\r\n\t *\r\n\t *      let tex = new GL.Texture(256, 256, {\r\n\t *       magFilter: WGL.NEAREST,\r\n\t *       minFilter: WGL.LINEAR,\r\n\t *\r\n\t *       wrapS: WGL.REPEAT,\r\n\t *       wrapT: WGL.REPEAT,\r\n\t *\r\n\t *       format: WGL.RGB, // Defaults to WGL.RGBA\r\n\t *       type: WGL.FLOAT // Defaults to WGL.UNSIGNED_BYTE\r\n\t *     })\r\n\t *\r\n\t */\r\n\tconstructor(width: int, height: int, options: TextureOptions = {}, readonly gl = currentGL()) {\r\n\t\tthis.width = width\r\n\t\tthis.height = height\r\n\t\tthis.format = options.format || gl.RGBA\r\n\t\tthis.internalFormat = options.internalFormat || gl.RGBA\r\n\t\tthis.type = options.type || gl.UNSIGNED_BYTE\r\n\t\tconst magFilter = options.filter || options.magFilter || gl.LINEAR\r\n\t\tconst minFilter = options.filter || options.minFilter || gl.LINEAR\r\n\t\tif (this.type === gl.FLOAT) {\r\n\t\t\tif (gl.version != 2 && !gl.getExtension('OES_texture_float')) {\r\n\t\t\t\tthrow new Error('OES_texture_float is required but not supported')\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\r\n\t\t\t\t!gl.getExtension('OES_texture_float_linear')\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error('OES_texture_float_linear is required but not supported')\r\n\t\t\t}\r\n\t\t} else if (this.type === gl.HALF_FLOAT_OES) {\r\n\t\t\tif (!gl.getExtension('OES_texture_half_float')) {\r\n\t\t\t\tthrow new Error('OES_texture_half_float is required but not supported')\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\r\n\t\t\t\t!gl.getExtension('OES_texture_half_float_linear')\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error('OES_texture_half_float_linear is required but not supported')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.texture = gl.createTexture()!\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.wrap || options.wrapS || gl.CLAMP_TO_EDGE)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.wrap || options.wrapT || gl.CLAMP_TO_EDGE)\r\n\t\tgl.texImage2D(\r\n\t\t\tgl.TEXTURE_2D,\r\n\t\t\t0,\r\n\t\t\tthis.internalFormat as any,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.type as any,\r\n\t\t\toptions.data,\r\n\t\t)\r\n\t}\r\n\r\n\tsetData(data: ArrayBufferView) {\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\r\n\t\tthis.gl.texImage2D(\r\n\t\t\tthis.gl.TEXTURE_2D,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.width,\r\n\t\t\tthis.height,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.type as any,\r\n\t\t\tdata as any,\r\n\t\t)\r\n\t}\r\n\r\n\tbind(unit: int) {\r\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\r\n\t}\r\n\r\n\tunbind(unit: int) {\r\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, null)\r\n\t}\r\n\r\n\tprivate framebuffer: WebGLFramebuffer | undefined\r\n\tstatic checkerBoardCanvas: HTMLCanvasElement\r\n\r\n\tdrawTo(render: (gl: TSGLContext) => void): void {\r\n\t\tconst gl = this.gl\r\n\t\tconst prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\r\n\t\tif (!this.framebuffer) {\r\n\t\t\t// create a renderbuffer for the depth component\r\n\t\t\tconst prevRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING)\r\n\t\t\tconst depthRenderbuffer = gl.createRenderbuffer()\r\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderbuffer)\r\n\t\t\t// DEPTH_COMPONENT16 is the only depth format\r\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height)\r\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer)\r\n\r\n\t\t\t// create a framebuffer to render to\r\n\t\t\tthis.framebuffer = gl.createFramebuffer()!\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\r\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0)\r\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthRenderbuffer)\r\n\t\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\tthrow new Error('Rendering to this texture is not supported (incomplete this.framebuffer)')\r\n\t\t\t}\r\n\t\t} else if (prevFramebuffer !== this.framebuffer) {\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\r\n\t\t}\r\n\r\n\t\tconst prevViewport = gl.getParameter(gl.VIEWPORT)\r\n\r\n\t\tgl.viewport(0, 0, this.width, this.height)\r\n\t\trender(gl)\r\n\r\n\t\t// restore previous state\r\n\t\tprevFramebuffer !== this.framebuffer && gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\r\n\t\tgl.viewport(prevViewport[0], prevViewport[1], prevViewport[2], prevViewport[3])\r\n\t}\r\n\r\n\tswapWith(other: Texture): void {\r\n\t\tassert(this.gl == other.gl)\r\n\t\tlet temp\r\n\t\ttemp = other.texture\r\n\t\tother.texture = this.texture\r\n\t\tthis.texture = temp\r\n\r\n\t\ttemp = other.width\r\n\t\tother.width = this.width\r\n\t\tthis.width = temp\r\n\r\n\t\ttemp = other.height\r\n\t\tother.height = this.height\r\n\t\tthis.height = temp\r\n\t}\r\n\r\n\t/**\r\n\t * Return a new texture created from `imgElement`, an `<img>` tag.\r\n\t */\r\n\tstatic fromImage(\r\n\t\timgElement: HTMLImageElement | HTMLCanvasElement,\r\n\t\toptions: TextureOptions = {},\r\n\t\tgl: TSGLContext = currentGL(),\r\n\t): Texture {\r\n\t\tconst texture = new Texture(imgElement.width, imgElement.height, options, gl)\r\n\t\ttry {\r\n\t\t\tgl.texImage2D(\r\n\t\t\t\tgl.TEXTURE_2D,\r\n\t\t\t\t0,\r\n\t\t\t\ttexture.format as any,\r\n\t\t\t\ttexture.format as any,\r\n\t\t\t\ttexture.type as any,\r\n\t\t\t\timgElement,\r\n\t\t\t)\r\n\t\t} catch (e) {\r\n\t\t\tif (location.protocol == 'file:') {\r\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (serve this page over \"http://\" instead)')\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t'imgElement not loaded for security reasons (imgElement must originate from the same ' +\r\n\t\t\t\t\t\t'domain as this page or use Cross-Origin Resource Sharing)',\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.minFilter && options.minFilter != gl.NEAREST && options.minFilter != gl.LINEAR) {\r\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D)\r\n\t\t}\r\n\t\treturn texture\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a checkerboard texture that will switch to the correct texture when it loads.\r\n\t */\r\n\tstatic fromURLSwitch(url: string, options?: TextureOptions, gl = currentGL()): Texture {\r\n\t\tTexture.checkerBoardCanvas =\r\n\t\t\tTexture.checkerBoardCanvas ||\r\n\t\t\t(function() {\r\n\t\t\t\tconst c = document.createElement('canvas').getContext('2d')\r\n\t\t\t\tif (!c) throw new Error('Could not create 2d canvas.')\r\n\t\t\t\tc.canvas.width = c.canvas.height = 128\r\n\t\t\t\tfor (let y = 0; y < c.canvas.height; y += 16) {\r\n\t\t\t\t\tfor (let x = 0; x < c.canvas.width; x += 16) {\r\n\t\t\t\t\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\t\t\t\t\tc.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD'\r\n\t\t\t\t\t\tc.fillRect(x, y, 16, 16)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn c.canvas\r\n\t\t\t})()\r\n\t\tconst texture = Texture.fromImage(Texture.checkerBoardCanvas, options)\r\n\t\tconst image = new Image()\r\n\t\timage.onload = () => Texture.fromImage(image, options, gl).swapWith(texture)\r\n\t\t// error event doesn't return a reason. Most likely a 404.\r\n\t\timage.onerror = () => {\r\n\t\t\tthrow new Error('Could not load image ' + image.src + '. 404?')\r\n\t\t}\r\n\t\timage.src = url\r\n\t\treturn texture\r\n\t}\r\n\r\n\tstatic fromURL(url: string, options?: TextureOptions, gl = currentGL()): Promise<Texture> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst image = new Image()\r\n\t\t\timage.onload = () => resolve(Texture.fromImage(image, options, gl))\r\n\t\t\timage.onerror = ev => reject('Could not load image ' + image.src + '. 404?' + ev)\r\n\t\t\timage.src = url\r\n\t\t})\r\n\t}\r\n}\r\n","/*\r\n** Copyright (c) 2012 The Khronos Group Inc.\r\n**\r\n** Permission is hereby granted, free of charge, to any person obtaining a\r\n** copy of this software and/or associated documentation files (the\r\n** 'Materials'), to deal in the Materials without restriction, including\r\n** without limitation the rights to use, copy, modify, merge, publish,\r\n** distribute, sublicense, and/or sell copies of the Materials, and to\r\n** permit persons to whom the Materials are furnished to do so, subject to\r\n** the following conditions:\r\n**\r\n** The above copyright notice and this permission notice shall be included\r\n** in all copies or substantial portions of the Materials.\r\n**\r\n** THE MATERIALS ARE PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\r\n*/\r\n\r\n// tslint:disable\r\nimport GL = WebGLRenderingContextStrict\r\n\r\n// Various functions for helping debug WebGL apps.\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction log(msg: string) {\r\n\tif (window.console && window.console.log) {\r\n\t\twindow.console.log(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Wrapped error logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction error(msg: string) {\r\n\tif (window.console && window.console.error) {\r\n\t\twindow.console.error(msg)\r\n\t} else {\r\n\t\tlog(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Which arguments are enums based on the number of arguments to the function.\r\n * So\r\n *    'texImage2D': {\r\n *       9: { 0:true, 2:true, 6:true, 7:true },\r\n *       6: { 0:true, 2:true, 3:true, 4:true },\r\n *    },\r\n *\r\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\r\n * arguments 3 and 4 are enums\r\n *\r\n * @type {!Object.<number, !Object.<number, string>}\r\n */\r\nconst glValidEnumContexts: {\r\n\t[funcName: string]: { [argCount: number]: { [argIndex: number]: boolean | { enumBitwiseOr: string[] } } }\r\n} = {\r\n\t// Generic setters and getters\r\n\r\n\tenable: { 1: { 0: true } },\r\n\tdisable: { 1: { 0: true } },\r\n\tgetParameter: { 1: { 0: true } },\r\n\r\n\t// Rendering\r\n\r\n\tdrawArrays: { 3: { 0: true } },\r\n\tdrawElements: { 4: { 0: true, 2: true } },\r\n\r\n\t// Shaders\r\n\r\n\tcreateShader: { 1: { 0: true } },\r\n\tgetShaderParameter: { 2: { 1: true } },\r\n\tgetProgramParameter: { 2: { 1: true } },\r\n\tgetShaderPrecisionFormat: { 2: { 0: true, 1: true } },\r\n\r\n\t// Vertex attributes\r\n\r\n\tgetVertexAttrib: { 2: { 1: true } },\r\n\tvertexAttribPointer: { 6: { 2: true } },\r\n\r\n\t// Textures\r\n\r\n\tbindTexture: { 2: { 0: true } },\r\n\tactiveTexture: { 1: { 0: true } },\r\n\tgetTexParameter: { 2: { 0: true, 1: true } },\r\n\ttexParameterf: { 3: { 0: true, 1: true } },\r\n\ttexParameteri: { 3: { 0: true, 1: true, 2: true } },\r\n\t// texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\r\n\tcopyTexImage2D: { 8: { 0: true, 2: true } },\r\n\tcopyTexSubImage2D: { 8: { 0: true } },\r\n\tgenerateMipmap: { 1: { 0: true } },\r\n\t// compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\r\n\r\n\t// Buffer objects\r\n\r\n\tbindBuffer: { 2: { 0: true } },\r\n\t// bufferData and bufferSubData are defined below with WebGL 2 entrypoints\r\n\tgetBufferParameter: { 2: { 0: true, 1: true } },\r\n\r\n\t// Renderbuffers and framebuffers\r\n\r\n\tpixelStorei: { 2: { 0: true, 1: true } },\r\n\t// readPixels is defined below with WebGL 2 entrypoints\r\n\tbindRenderbuffer: { 2: { 0: true } },\r\n\tbindFramebuffer: { 2: { 0: true } },\r\n\tcheckFramebufferStatus: { 1: { 0: true } },\r\n\tframebufferRenderbuffer: { 4: { 0: true, 1: true, 2: true } },\r\n\tframebufferTexture2D: { 5: { 0: true, 1: true, 2: true } },\r\n\tgetFramebufferAttachmentParameter: { 3: { 0: true, 1: true, 2: true } },\r\n\tgetRenderbufferParameter: { 2: { 0: true, 1: true } },\r\n\trenderbufferStorage: { 4: { 0: true, 1: true } },\r\n\r\n\t// Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n\tclear: { 1: { 0: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] } } },\r\n\tdepthFunc: { 1: { 0: true } },\r\n\tblendFunc: { 2: { 0: true, 1: true } },\r\n\tblendFuncSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\tblendEquation: { 1: { 0: true } },\r\n\tblendEquationSeparate: { 2: { 0: true, 1: true } },\r\n\tstencilFunc: { 3: { 0: true } },\r\n\tstencilFuncSeparate: { 4: { 0: true, 1: true } },\r\n\tstencilMaskSeparate: { 2: { 0: true } },\r\n\tstencilOp: { 3: { 0: true, 1: true, 2: true } },\r\n\tstencilOpSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\r\n\t// Culling\r\n\r\n\tcullFace: { 1: { 0: true } },\r\n\tfrontFace: { 1: { 0: true } },\r\n\r\n\t// ANGLE_instanced_arrays extension\r\n\r\n\tdrawArraysInstancedANGLE: { 4: { 0: true } },\r\n\tdrawElementsInstancedANGLE: { 5: { 0: true, 2: true } },\r\n\r\n\t// EXT_blend_minmax extension\r\n\r\n\tblendEquationEXT: { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Buffer objects\r\n\r\n\tbufferData: {\r\n\t\t3: { 0: true, 2: true }, // WebGL 1\r\n\t\t4: { 0: true, 2: true }, // WebGL 2\r\n\t\t5: { 0: true, 2: true }, // WebGL 2\r\n\t},\r\n\tbufferSubData: {\r\n\t\t3: { 0: true }, // WebGL 1\r\n\t\t4: { 0: true }, // WebGL 2\r\n\t\t5: { 0: true }, // WebGL 2\r\n\t},\r\n\tcopyBufferSubData: { 5: { 0: true, 1: true } },\r\n\tgetBufferSubData: { 3: { 0: true }, 4: { 0: true }, 5: { 0: true } },\r\n\r\n\t// WebGL 2 Framebuffer objects\r\n\r\n\tblitFramebuffer: {\r\n\t\t10: { 8: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9: true },\r\n\t},\r\n\tframebufferTextureLayer: { 5: { 0: true, 1: true } },\r\n\tinvalidateFramebuffer: { 2: { 0: true } },\r\n\tinvalidateSubFramebuffer: { 6: { 0: true } },\r\n\treadBuffer: { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Renderbuffer objects\r\n\r\n\tgetInternalformatParameter: { 3: { 0: true, 1: true, 2: true } },\r\n\trenderbufferStorageMultisample: { 5: { 0: true, 2: true } },\r\n\r\n\t// WebGL 2 Texture objects\r\n\r\n\ttexStorage2D: { 5: { 0: true, 2: true } },\r\n\ttexStorage3D: { 6: { 0: true, 2: true } },\r\n\ttexImage2D: {\r\n\t\t9: { 0: true, 2: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t6: { 0: true, 2: true, 3: true, 4: true }, // WebGL 1\r\n\t\t10: { 0: true, 2: true, 6: true, 7: true }, // WebGL 2\r\n\t},\r\n\ttexImage3D: {\r\n\t\t10: { 0: true, 2: true, 7: true, 8: true },\r\n\t\t11: { 0: true, 2: true, 7: true, 8: true },\r\n\t},\r\n\ttexSubImage2D: {\r\n\t\t9: { 0: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t7: { 0: true, 4: true, 5: true }, // WebGL 1\r\n\t\t10: { 0: true, 6: true, 7: true }, // WebGL 2\r\n\t},\r\n\ttexSubImage3D: {\r\n\t\t11: { 0: true, 8: true, 9: true },\r\n\t\t12: { 0: true, 8: true, 9: true },\r\n\t},\r\n\tcopyTexSubImage3D: { 9: { 0: true } },\r\n\tcompressedTexImage2D: {\r\n\t\t7: { 0: true, 2: true }, // WebGL 1 & 2\r\n\t\t8: { 0: true, 2: true }, // WebGL 2\r\n\t\t9: { 0: true, 2: true }, // WebGL 2\r\n\t},\r\n\tcompressedTexImage3D: {\r\n\t\t8: { 0: true, 2: true },\r\n\t\t9: { 0: true, 2: true },\r\n\t\t10: { 0: true, 2: true },\r\n\t},\r\n\tcompressedTexSubImage2D: {\r\n\t\t8: { 0: true, 6: true }, // WebGL 1 & 2\r\n\t\t9: { 0: true, 6: true }, // WebGL 2\r\n\t\t10: { 0: true, 6: true }, // WebGL 2\r\n\t},\r\n\tcompressedTexSubImage3D: {\r\n\t\t10: { 0: true, 8: true },\r\n\t\t11: { 0: true, 8: true },\r\n\t\t12: { 0: true, 8: true },\r\n\t},\r\n\r\n\t// WebGL 2 Vertex attribs\r\n\r\n\tvertexAttribIPointer: { 5: { 2: true } },\r\n\r\n\t// WebGL 2 Writing to the drawing buffer\r\n\r\n\tdrawArraysInstanced: { 4: { 0: true } },\r\n\tdrawElementsInstanced: { 5: { 0: true, 2: true } },\r\n\tdrawRangeElements: { 6: { 0: true, 4: true } },\r\n\r\n\t// WebGL 2 Reading back pixels\r\n\r\n\treadPixels: {\r\n\t\t7: { 4: true, 5: true }, // WebGL 1 & 2\r\n\t\t8: { 4: true, 5: true }, // WebGL 2\r\n\t},\r\n\r\n\t// WebGL 2 Multiple Render Targets\r\n\r\n\tclearBufferfv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferiv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferuiv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferfi: { 4: { 0: true } },\r\n\r\n\t// WebGL 2 Query objects\r\n\r\n\tbeginQuery: { 2: { 0: true } },\r\n\tendQuery: { 1: { 0: true } },\r\n\tgetQuery: { 2: { 0: true, 1: true } },\r\n\tgetQueryParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sampler objects\r\n\r\n\tsamplerParameteri: { 3: { 1: true, 2: true } },\r\n\tsamplerParameterf: { 3: { 1: true } },\r\n\tgetSamplerParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sync objects\r\n\r\n\tfenceSync: { 2: { 0: true, 1: { enumBitwiseOr: [] } } },\r\n\tclientWaitSync: { 3: { 1: { enumBitwiseOr: ['SYNC_FLUSH_COMMANDS_BIT'] } } },\r\n\twaitSync: { 3: { 1: { enumBitwiseOr: [] } } },\r\n\tgetSyncParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Transform Feedback\r\n\r\n\tbindTransformFeedback: { 2: { 0: true } },\r\n\tbeginTransformFeedback: { 1: { 0: true } },\r\n\ttransformFeedbackVaryings: { 3: { 2: true } },\r\n\r\n\t// WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\r\n\r\n\tbindBufferBase: { 3: { 0: true } },\r\n\tbindBufferRange: { 5: { 0: true } },\r\n\tgetIndexedParameter: { 2: { 0: true } },\r\n\tgetActiveUniforms: { 3: { 2: true } },\r\n\tgetActiveUniformBlockParameter: { 3: { 2: true } },\r\n}\r\n\r\n/**\r\n * Map of numbers to names.\r\n * @type {Object}\r\n */\r\nlet glEnums: { [k: number]: string } = null as any\r\n\r\n/**\r\n * Map of names to numbers.\r\n * @type {Object}\r\n */\r\nlet enumStringToValue: { [k: string]: GL.GLenum<string> } = null as any\r\n\r\n/**\r\n * Initializes this module. Safe to call more than once.\r\n * @param ctx A WebGL context. If\r\n *    you have more than one context it doesn't matter which one\r\n *    you pass in, it is only used to pull out constants.\r\n */\r\nexport function init() {\r\n\tif (null === glEnums) {\r\n\t\tglEnums = {}\r\n\t\tenumStringToValue = {}\r\n\t\tconst c = (window as any).WebGL2RenderingContext || (window as any).WebGLRenderingContext\r\n\t\tif (!c) throw new Error('Neither WebGL2RenderingContext nor WebGLRenderingContext exists on window.')\r\n\t\tfor (const propertyName in c) {\r\n\t\t\tconst prop = c[propertyName]\r\n\t\t\tif ('number' === typeof prop) {\r\n\t\t\t\tglEnums[prop] = propertyName\r\n\t\t\t\tenumStringToValue[propertyName] = prop as any\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns true or false if value matches any WebGL enum\r\n * @param value Value to check if it might be an enum.\r\n * @return True if value matches one of the WebGL defined enums\r\n */\r\nexport function mightBeEnum(value: number): boolean {\r\n\tinit()\r\n\treturn glEnums[value] !== undefined\r\n}\r\n\r\n/**\r\n * Gets an string version of an WebGL enum.\r\n *\r\n * Example:\r\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError())\r\n *\r\n * @param value Value to return an enum for\r\n * @return The string version of the enum.\r\n */\r\nexport function glEnumToString(value: GL.GLenum<string>): string {\r\n\tinit()\r\n\tvar name = glEnums[value as any]\r\n\treturn name !== undefined ? 'gl.' + name : '/*UNKNOWN WebGL ENUM*/ 0x' + (value as any).toString(16) + ''\r\n}\r\n\r\n/**\r\n * Converts the argument of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * Example:\r\n *   WebGLDebugUtil.init(ctx)\r\n *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D)\r\n *\r\n * would return 'TEXTURE_2D'\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param numArgs the number of arguments passed to the function.\r\n * @param argumentIndex the index of the argument.\r\n * @param value The value of the argument.\r\n * @return The value as a string.\r\n */\r\nexport function glFunctionArgToString(\r\n\tfunctionName: string,\r\n\tnumArgs: number,\r\n\targumentIndex: number,\r\n\tvalue: any,\r\n): string {\r\n\tconst funcInfo = glValidEnumContexts[functionName]\r\n\tif (funcInfo !== undefined) {\r\n\t\tconst funcOverloadInfo = funcInfo[numArgs]\r\n\t\tif (funcOverloadInfo !== undefined) {\r\n\t\t\tconst argInfo = funcOverloadInfo[argumentIndex]\r\n\t\t\tif (argInfo) {\r\n\t\t\t\tif (typeof argInfo === 'object') {\r\n\t\t\t\t\tconst enums = argInfo.enumBitwiseOr\r\n\t\t\t\t\tconst orEnums = []\r\n\t\t\t\t\tlet orResult = 0\r\n\t\t\t\t\tfor (let i = 0; i < enums.length; ++i) {\r\n\t\t\t\t\t\tconst enumValue = enumStringToValue[enums[i]]\r\n\t\t\t\t\t\tif ((value & enumValue) !== 0) {\r\n\t\t\t\t\t\t\torResult |= enumValue\r\n\t\t\t\t\t\t\torEnums.push(glEnumToString(enumValue))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (orResult === value) {\r\n\t\t\t\t\t\treturn orEnums.join(' | ')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (value === null) {\r\n\t\treturn 'null'\r\n\t} else if (value === undefined) {\r\n\t\treturn 'undefined'\r\n\t} else {\r\n\t\treturn value.toString()\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts the arguments of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param args The arguments.\r\n * @return The arguments as a string.\r\n */\r\nexport function glFunctionArgsToString(functionName: string, args: number[]): string {\r\n\t// apparently we can't do args.join(',')\r\n\tvar argStr = ''\r\n\tvar numArgs = args.length\r\n\tfor (var ii = 0; ii < numArgs; ++ii) {\r\n\t\targStr += (ii == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, ii, args[ii])\r\n\t}\r\n\treturn argStr\r\n}\r\n\r\nfunction makePropertyWrapper(wrapper: any, original: any, propertyName: string) {\r\n\t//log('wrap prop: ' + propertyName)\r\n\twrapper.__defineGetter__(propertyName, function() {\r\n\t\treturn original[propertyName]\r\n\t})\r\n\t// TODO(gmane): this needs to handle properties that take more than\r\n\t// one value?\r\n\twrapper.__defineSetter__(propertyName, function(value: any) {\r\n\t\t//log('set: ' + propertyName)\r\n\t\toriginal[propertyName] = value\r\n\t})\r\n}\r\n\r\n/**\r\n * Given a WebGL context returns a wrapped context that calls\r\n * gl.getError after every command and calls a function if the\r\n * result is not NO_ERROR.\r\n *\r\n * You can supply your own function if you want. For example, if you'd like\r\n * an exception thrown on any GL error you could do this\r\n *\r\n *    function throwOnGLError(err, funcName, args) {\r\n *      throw new Error(WebGLDebugUtils.glEnumToString(err) +\r\n *            ' was caused by call to ' + funcName)\r\n *    }\r\n *\r\n *    ctx = WebGLDebugUtils.makeDebugContext(\r\n *        canvas.getContext('webgl'), throwOnGLError)\r\n *\r\n * @param ctx The webgl context to wrap.\r\n * @param opt_onErrorFunc The function\r\n *     to call when gl.getError returns an error. If not specified the default\r\n *     function calls console.log with a message.\r\n * @param opt_onFunc The\r\n *     function to call when each webgl function is called. You\r\n *     can use this to log all calls for example.\r\n * @param opt_err_ctx The webgl context\r\n *        to call getError on if different than ctx.\r\n */\r\nexport function makeDebugContext(\r\n\tctx: WebGLRenderingContextStrict,\r\n\topt_onErrorFunc?: (err: GL.Error, funcName: string, args: any[]) => void,\r\n\topt_onFunc?: (funcName: string, args: any[]) => void,\r\n\topt_err_ctx: WebGLRenderingContextStrict = ctx,\r\n): WebGLRenderingContext {\r\n\tinit()\r\n\topt_onErrorFunc =\r\n\t\topt_onErrorFunc ||\r\n\t\tfunction(err, functionName, args) {\r\n\t\t\t// apparently we can't do args.join(',')\r\n\t\t\tvar argStr = ''\r\n\t\t\tvar numArgs = args.length\r\n\t\t\tfor (let i = 0; i < numArgs; ++i) {\r\n\t\t\t\targStr += (i == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, i, args[i])\r\n\t\t\t}\r\n\t\t\terror('WebGL error ' + glEnumToString(err) + ' in ' + functionName + '(' + argStr + ')')\r\n\t\t}\r\n\r\n\t// Holds booleans for each GL error so after we get the error ourselves\r\n\t// we can still return it to the client app.\r\n\tconst glErrorShadow: { [k: number]: boolean } = {}\r\n\r\n\t// Makes a function that calls a WebGL function and then calls getError.\r\n\tfunction makeErrorWrapper(ctx: WebGLRenderingContextStrict, functionName: string) {\r\n\t\treturn function(...args: any[]) {\r\n\t\t\tif (opt_onFunc) {\r\n\t\t\t\topt_onFunc(functionName, args)\r\n\t\t\t}\r\n\t\t\tconst result = (ctx as any)[functionName].apply(ctx, args)\r\n\t\t\tconst err = opt_err_ctx.getError()\r\n\t\t\tif (err != 0) {\r\n\t\t\t\tglErrorShadow[err] = true\r\n\t\t\t\topt_onErrorFunc!(err, functionName, args)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t}\r\n\r\n\t// Make a an object that has a copy of every property of the WebGL context\r\n\t// but wraps all functions.\r\n\tconst wrapper: any = {}\r\n\tfor (let propertyName in ctx) {\r\n\t\tconst prop = ctx[propertyName as keyof WebGLRenderingContextStrict]\r\n\t\tif ('function' === typeof prop) {\r\n\t\t\tif (propertyName != 'getExtension') {\r\n\t\t\t\twrapper[propertyName] = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tlet wrapped = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t\twrapper[propertyName as any] = function() {\r\n\t\t\t\t\tconst result = wrapped.apply(ctx, arguments)\r\n\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmakePropertyWrapper(wrapper, ctx, propertyName)\r\n\t\t}\r\n\t}\r\n\r\n\t// Override the getError function with one that returns our saved results.\r\n\twrapper.getError = function() {\r\n\t\tfor (const err in glErrorShadow) {\r\n\t\t\tif (glErrorShadow.hasOwnProperty(err)) {\r\n\t\t\t\tif (glErrorShadow[err]) {\r\n\t\t\t\t\tglErrorShadow[err] = false\r\n\t\t\t\t\treturn parseInt(err)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ctx.NO_ERROR\r\n\t}\r\n\r\n\treturn wrapper\r\n}\r\nexport function isWebGL2RenderingContext(o: any): o is WebGL2RenderingContext {\r\n\treturn !!o.createTransformFeedback\r\n}\r\n/**\r\n * Resets a context to the initial state.\r\n * @param ctx The webgl context to\r\n *     reset.\r\n */\r\nexport function resetToInitialState(ctx2: WebGL2RenderingContext | WebGLRenderingContextStrict) {\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.bindVertexArray(null)\r\n\t}\r\n\r\n\tconst numAttribs = ctx2.getParameter(ctx2.MAX_VERTEX_ATTRIBS)\r\n\tconst tmp = ctx2.createBuffer()\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, tmp)\r\n\tfor (let ii = 0; ii < numAttribs; ++ii) {\r\n\t\tctx2.disableVertexAttribArray(ii)\r\n\t\tctx2.vertexAttribPointer(ii, 4, ctx2.FLOAT, false, 0, 0)\r\n\t\tctx2.vertexAttrib1f(ii, 0)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.vertexAttribDivisor(ii, 0)\r\n\t\t}\r\n\t}\r\n\tctx2.deleteBuffer(tmp)\r\n\r\n\tconst numTextureUnits = ctx2.getParameter(ctx2.MAX_TEXTURE_IMAGE_UNITS)\r\n\tfor (let ii = 0; ii < numTextureUnits; ++ii) {\r\n\t\tctx2.activeTexture((ctx2.TEXTURE0 + ii) as GL.TextureUnit)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_CUBE_MAP, null)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_2D, null)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_2D_ARRAY, null)\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_3D, null)\r\n\t\t\tctx2.bindSampler(ii, null)\r\n\t\t}\r\n\t}\r\n\r\n\tctx2.activeTexture(ctx2.TEXTURE0)\r\n\tctx2.useProgram(null)\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, null)\r\n\tctx2.bindBuffer(ctx2.ELEMENT_ARRAY_BUFFER, null)\r\n\tctx2.bindFramebuffer(ctx2.FRAMEBUFFER, null)\r\n\tctx2.bindRenderbuffer(ctx2.RENDERBUFFER, null)\r\n\tctx2.disable(ctx2.BLEND)\r\n\tctx2.disable(ctx2.CULL_FACE)\r\n\tctx2.disable(ctx2.DEPTH_TEST)\r\n\tctx2.disable(ctx2.DITHER)\r\n\tctx2.disable(ctx2.SCISSOR_TEST)\r\n\tctx2.blendColor(0, 0, 0, 0)\r\n\tctx2.blendEquation(ctx2.FUNC_ADD)\r\n\tctx2.blendFunc(ctx2.ONE, ctx2.ZERO)\r\n\tctx2.clearColor(0, 0, 0, 0)\r\n\tctx2.clearDepth(1)\r\n\tctx2.clearStencil(-1)\r\n\tctx2.colorMask(true, true, true, true)\r\n\tctx2.cullFace(ctx2.BACK)\r\n\tctx2.depthFunc(ctx2.LESS)\r\n\tctx2.depthMask(true)\r\n\tctx2.depthRange(0, 1)\r\n\tctx2.frontFace(ctx2.CCW)\r\n\tctx2.hint(ctx2.GENERATE_MIPMAP_HINT, ctx2.DONT_CARE)\r\n\tctx2.lineWidth(1)\r\n\tctx2.pixelStorei(ctx2.PACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_FLIP_Y_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx2.BROWSER_DEFAULT_WEBGL)\r\n\tctx2.polygonOffset(0, 0)\r\n\tctx2.sampleCoverage(1, false)\r\n\tctx2.scissor(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.stencilFunc(ctx2.ALWAYS, 0, 0xffffffff)\r\n\tctx2.stencilMask(0xffffffff)\r\n\tctx2.stencilOp(ctx2.KEEP, ctx2.KEEP, ctx2.KEEP)\r\n\tctx2.viewport(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.clear(ctx2.COLOR_BUFFER_BIT | ctx2.DEPTH_BUFFER_BIT | ctx2.STENCIL_BUFFER_BIT)\r\n\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.drawBuffers([ctx2.BACK])\r\n\t\tctx2.readBuffer(ctx2.BACK)\r\n\t\tctx2.bindBuffer(ctx2.COPY_READ_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.COPY_WRITE_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_PACK_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_UNPACK_BUFFER, null)\r\n\t\tconst numTransformFeedbacks = ctx2.getParameter(ctx2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)\r\n\t\tfor (let ii = 0; ii < numTransformFeedbacks; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.TRANSFORM_FEEDBACK_BUFFER, ii, null)\r\n\t\t}\r\n\t\tconst numUBOs = ctx2.getParameter(ctx2.MAX_UNIFORM_BUFFER_BINDINGS)\r\n\t\tfor (let ii = 0; ii < numUBOs; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.UNIFORM_BUFFER, ii, null)\r\n\t\t}\r\n\t\tctx2.disable(ctx2.RASTERIZER_DISCARD)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_IMAGE_HEIGHT, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_IMAGES, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_PIXELS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_PIXELS, 0)\r\n\t\tctx2.hint(ctx2.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx2.DONT_CARE)\r\n\t}\r\n\r\n\t// TODO: This should NOT be needed but Firefox fails with 'hint'\r\n\twhile (ctx2.getError()) {}\r\n}\r\n\r\n/**\r\n * Given a canvas element returns a wrapped canvas element that will\r\n * simulate lost context. The canvas returned adds the following functions.\r\n *\r\n * loseContext:\r\n *   simulates a lost context event.\r\n *\r\n * restoreContext:\r\n *   simulates the context being restored.\r\n *\r\n * lostContextInNCalls:\r\n *   loses the context after N gl calls.\r\n *\r\n * getNumCalls:\r\n *   tells you how many gl calls there have been so far.\r\n *\r\n * setRestoreTimeout:\r\n *   sets the number of milliseconds until the context is restored\r\n *   after it has been lost. Defaults to 0. Pass -1 to prevent\r\n *   automatic restoring.\r\n *\r\n * @param canvas The canvas element to wrap.\r\n */\r\nexport function makeLostContextSimulatingCanvas(canvas: HTMLCanvasElement) {\r\n\tconst canvas2 = canvas as any\r\n\tlet unwrappedContext_: any\r\n\tconst onLost_: WebGLContextEventListener[] = []\r\n\tconst onRestored_: WebGLContextEventListener[] = []\r\n\tlet wrappedContext_: any = {}\r\n\tlet contextId_ = 1\r\n\tlet contextLost_ = false\r\n\t// const resourceId_ = 0\r\n\tconst resourceDb_: WebGLObject[] = []\r\n\tlet numCallsToLoseContext_ = 0\r\n\tlet numCalls_ = 0\r\n\tlet canRestore_ = false\r\n\tlet restoreTimeout_ = 0\r\n\r\n\t// Holds booleans for each GL error so can simulate errors.\r\n\tconst glErrorShadow_: { [e: number]: boolean } = {}\r\n\r\n\tcanvas2.getContext = (function(f) {\r\n\t\treturn function() {\r\n\t\t\tconst ctx = f.apply(canvas2, arguments)\r\n\t\t\t// Did we get a context and is it a WebGL context?\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (\r\n\t\t\t\tctx instanceof WebGLRenderingContext ||\r\n\t\t\t\t// TODO:?\r\n\t\t\t\t((window as any).WebGL2RenderingContext && ctx instanceof WebGL2RenderingContext)\r\n\t\t\t) {\r\n\t\t\t\tif (ctx != unwrappedContext_) {\r\n\t\t\t\t\tif (unwrappedContext_) {\r\n\t\t\t\t\t\tthrow new Error('got different context')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tunwrappedContext_ = ctx\r\n\t\t\t\t\twrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_)\r\n\t\t\t\t}\r\n\t\t\t\treturn wrappedContext_\r\n\t\t\t}\r\n\t\t\treturn ctx\r\n\t\t}\r\n\t})(canvas2.getContext)\r\n\r\n\tfunction wrapEvent(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tif (typeof listener == 'function') {\r\n\t\t\treturn listener\r\n\t\t} else {\r\n\t\t\treturn function(e: CustomWebGLContextEvent) {\r\n\t\t\t\tlistener.handleEvent(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addOnContextLostListener(\r\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\r\n\t) {\r\n\t\tonLost_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction addOnContextRestoredListener(\r\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\r\n\t) {\r\n\t\tonRestored_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction wrapAddEventListener(canvas: HTMLCanvasElement) {\r\n\t\tconst f = canvas.addEventListener\r\n\t\tcanvas.addEventListener = function(type: string, listener: any) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'webglcontextlost':\r\n\t\t\t\t\taddOnContextLostListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'webglcontextrestored':\r\n\t\t\t\t\taddOnContextRestoredListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tf.apply(canvas, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twrapAddEventListener(canvas2)\r\n\r\n\tcanvas2.loseContext = function() {\r\n\t\tif (!contextLost_) {\r\n\t\t\tcontextLost_ = true\r\n\t\t\tnumCallsToLoseContext_ = 0\r\n\t\t\t++contextId_\r\n\t\t\twhile (unwrappedContext_.getError()) clearErrors()\r\n\t\t\tglErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true\r\n\t\t\tconst event = makeWebGLContextEvent('context lost')\r\n\t\t\tconst callbacks = onLost_.slice()\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t//log('numCallbacks:' + callbacks.length)\r\n\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t//log('calling callback:' + ii)\r\n\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t}\r\n\t\t\t\tif (restoreTimeout_ >= 0) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tcanvas2.restoreContext()\r\n\t\t\t\t\t}, restoreTimeout_)\r\n\t\t\t\t}\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.restoreContext = function() {\r\n\t\tif (contextLost_) {\r\n\t\t\tif (onRestored_.length) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tif (!canRestore_) {\r\n\t\t\t\t\t\tthrow new Error('can not restore. webglcontestlost listener did not call event.preventDefault')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfreeResources()\r\n\t\t\t\t\tresetToInitialState(unwrappedContext_)\r\n\t\t\t\t\tcontextLost_ = false\r\n\t\t\t\t\tnumCalls_ = 0\r\n\t\t\t\t\tcanRestore_ = false\r\n\t\t\t\t\tconst callbacks = onRestored_.slice()\r\n\t\t\t\t\tconst event = makeWebGLContextEvent('context restored')\r\n\t\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.loseContextInNCalls = function(numCalls: number) {\r\n\t\tif (contextLost_) {\r\n\t\t\tthrow new Error('You can not ask a lost context to be lost')\r\n\t\t}\r\n\t\tnumCallsToLoseContext_ = numCalls_ + numCalls\r\n\t}\r\n\r\n\tcanvas2.getNumCalls = function() {\r\n\t\treturn numCalls_\r\n\t}\r\n\r\n\tcanvas2.setRestoreTimeout = function(timeout: number) {\r\n\t\trestoreTimeout_ = timeout\r\n\t}\r\n\r\n\tfunction isWebGLObject(obj: any): obj is WebGLObject {\r\n\t\t//return false\r\n\t\treturn (\r\n\t\t\tobj instanceof WebGLBuffer ||\r\n\t\t\tobj instanceof WebGLFramebuffer ||\r\n\t\t\tobj instanceof WebGLProgram ||\r\n\t\t\tobj instanceof WebGLRenderbuffer ||\r\n\t\t\tobj instanceof WebGLShader ||\r\n\t\t\tobj instanceof WebGLTexture\r\n\t\t)\r\n\t}\r\n\r\n\tfunction checkResources(args: any[]) {\r\n\t\tfor (let i = 0; i < args.length; ++i) {\r\n\t\t\tconst arg = args[i]\r\n\t\t\tif (isWebGLObject(arg)) {\r\n\t\t\t\treturn (arg as any).__webglDebugContextLostId__ == contextId_\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tfunction clearErrors() {\r\n\t\tconst k = (Object.keys(glErrorShadow_) as any) as number[]\r\n\t\tfor (let i = 0; i < k.length; ++i) {\r\n\t\t\tdelete glErrorShadow_[k[i]]\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loseContextIfTime() {\r\n\t\t++numCalls_\r\n\t\tif (!contextLost_) {\r\n\t\t\tif (numCallsToLoseContext_ == numCalls_) {\r\n\t\t\t\tcanvas2.loseContext()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Makes a function that simulates WebGL when out of context.\r\n\tfunction makeLostContextFunctionWrapper(ctx: WebGLRenderingContext, functionName: string) {\r\n\t\tconst f = (ctx as any)[functionName]\r\n\t\treturn function() {\r\n\t\t\t// log('calling:' + functionName)\r\n\t\t\t// Only call the functions if the context is not lost.\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\t//if (!checkResources(arguments)) {\r\n\t\t\t\t//  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true\r\n\t\t\t\t//  return\r\n\t\t\t\t//}\r\n\t\t\t\tconst result = f.apply(ctx, arguments)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction freeResources() {\r\n\t\tfor (let ii = 0; ii < resourceDb_.length; ++ii) {\r\n\t\t\tconst resource = resourceDb_[ii]\r\n\t\t\tif (resource instanceof WebGLBuffer) {\r\n\t\t\t\tunwrappedContext_.deleteBuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLFramebuffer) {\r\n\t\t\t\tunwrappedContext_.deleteFramebuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLProgram) {\r\n\t\t\t\tunwrappedContext_.deleteProgram(resource)\r\n\t\t\t} else if (resource instanceof WebGLRenderbuffer) {\r\n\t\t\t\tunwrappedContext_.deleteRenderbuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLShader) {\r\n\t\t\t\tunwrappedContext_.deleteShader(resource)\r\n\t\t\t} else if (resource instanceof WebGLTexture) {\r\n\t\t\t\tunwrappedContext_.deleteTexture(resource)\r\n\t\t\t} else if (isWebGL2RenderingContext) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (resource instanceof WebGLQuery) {\r\n\t\t\t\t\tunwrappedContext_.deleteQuery(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSampler) {\r\n\t\t\t\t\tunwrappedContext_.deleteSampler(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSync) {\r\n\t\t\t\t\tunwrappedContext_.deleteSync(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLTransformFeedback) {\r\n\t\t\t\t\tunwrappedContext_.deleteTransformFeedback(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLVertexArrayObject) {\r\n\t\t\t\t\tunwrappedContext_.deleteVertexArray(resource)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tinterface CustomWebGLContextEvent {\r\n\t\tstatusMessage: string\r\n\t\tpreventDefault: () => void\r\n\t}\r\n\ttype WebGLContextEventListener = (e: CustomWebGLContextEvent) => void\r\n\tfunction makeWebGLContextEvent(statusMessage: string): CustomWebGLContextEvent {\r\n\t\treturn {\r\n\t\t\tstatusMessage: statusMessage,\r\n\t\t\tpreventDefault: function() {\r\n\t\t\t\tcanRestore_ = true\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\r\n\treturn canvas2\r\n\r\n\tfunction makeLostContextSimulatingContext(ctx: WebGLRenderingContext) {\r\n\t\t// copy all functions and properties to wrapper\r\n\t\tfor (const propertyName in ctx) {\r\n\t\t\tif (typeof (ctx as any)[propertyName] == 'function') {\r\n\t\t\t\twrappedContext_[propertyName] = makeLostContextFunctionWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tmakePropertyWrapper(wrappedContext_, ctx, propertyName)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Wrap a few functions specially.\r\n\t\twrappedContext_.getError = function() {\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\tlet err\r\n\t\t\t\twhile ((err = unwrappedContext_.getError())) {\r\n\t\t\t\t\tglErrorShadow_[err] = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const err in glErrorShadow_) {\r\n\t\t\t\tif (glErrorShadow_[err]) {\r\n\t\t\t\t\tdelete glErrorShadow_[err]\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn wrappedContext_.NO_ERROR\r\n\t\t}\r\n\r\n\t\tconst creationFunctions = [\r\n\t\t\t'createBuffer',\r\n\t\t\t'createFramebuffer',\r\n\t\t\t'createProgram',\r\n\t\t\t'createRenderbuffer',\r\n\t\t\t'createShader',\r\n\t\t\t'createTexture',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tcreationFunctions.push(\r\n\t\t\t\t'createQuery',\r\n\t\t\t\t'createSampler',\r\n\t\t\t\t'fenceSync',\r\n\t\t\t\t'createTransformFeedback',\r\n\t\t\t\t'createVertexArray',\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let i = 0; i < creationFunctions.length; ++i) {\r\n\t\t\tconst functionName = creationFunctions[i]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst obj = f.apply(ctx, arguments)\r\n\t\t\t\t\tobj.__webglDebugContextLostId__ = contextId_\r\n\t\t\t\t\tresourceDb_.push(obj)\r\n\t\t\t\t\treturn obj\r\n\t\t\t\t}\r\n\t\t\t})((ctx as any)[functionName])\r\n\t\t}\r\n\r\n\t\tconst functionsThatShouldReturnNull = [\r\n\t\t\t'getActiveAttrib',\r\n\t\t\t'getActiveUniform',\r\n\t\t\t'getBufferParameter',\r\n\t\t\t'getContextAttributes',\r\n\t\t\t'getAttachedShaders',\r\n\t\t\t'getFramebufferAttachmentParameter',\r\n\t\t\t'getParameter',\r\n\t\t\t'getProgramParameter',\r\n\t\t\t'getProgramInfoLog',\r\n\t\t\t'getRenderbufferParameter',\r\n\t\t\t'getShaderParameter',\r\n\t\t\t'getShaderInfoLog',\r\n\t\t\t'getShaderSource',\r\n\t\t\t'getTexParameter',\r\n\t\t\t'getUniform',\r\n\t\t\t'getUniformLocation',\r\n\t\t\t'getVertexAttrib',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tfunctionsThatShouldReturnNull.push(\r\n\t\t\t\t'getInternalformatParameter',\r\n\t\t\t\t'getQuery',\r\n\t\t\t\t'getQueryParameter',\r\n\t\t\t\t'getSamplerParameter',\r\n\t\t\t\t'getSyncParameter',\r\n\t\t\t\t'getTransformFeedbackVarying',\r\n\t\t\t\t'getIndexedParameter',\r\n\t\t\t\t'getUniformIndices',\r\n\t\t\t\t'getActiveUniforms',\r\n\t\t\t\t'getActiveUniformBlockParameter',\r\n\t\t\t\t'getActiveUniformBlockName',\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n\t\t\tconst functionName = functionsThatShouldReturnNull[ii]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\tconst isFunctions = [\r\n\t\t\t'isBuffer',\r\n\t\t\t'isEnabled',\r\n\t\t\t'isFramebuffer',\r\n\t\t\t'isProgram',\r\n\t\t\t'isRenderbuffer',\r\n\t\t\t'isShader',\r\n\t\t\t'isTexture',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tisFunctions.push('isQuery', 'isSampler', 'isSync', 'isTransformFeedback', 'isVertexArray')\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < isFunctions.length; ++ii) {\r\n\t\t\tconst functionName = isFunctions[ii]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\twrappedContext_.checkFramebufferStatus = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn wrappedContext_.FRAMEBUFFER_UNSUPPORTED\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.checkFramebufferStatus)\r\n\r\n\t\twrappedContext_.getAttribLocation = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.getAttribLocation)\r\n\r\n\t\twrappedContext_.getVertexAttribOffset = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.getVertexAttribOffset)\r\n\r\n\t\twrappedContext_.isContextLost = function() {\r\n\t\t\treturn contextLost_\r\n\t\t}\r\n\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\twrappedContext_.getFragDataLocation = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.getFragDataLocation)\r\n\r\n\t\t\twrappedContext_.clientWaitSync = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.WAIT_FAILED\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.clientWaitSync)\r\n\r\n\t\t\twrappedContext_.getUniformBlockIndex = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.INVALID_INDEX\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.getUniformBlockIndex)\r\n\t\t}\r\n\r\n\t\treturn wrappedContext_\r\n\t}\r\n}\r\n","\r\nattribute vec2 ts_TexCoord;\r\nattribute vec4 ts_Vertex;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nvarying vec2 coord;\r\nvoid main() {\r\n    coord = ts_TexCoord.xy;\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","import chroma from 'chroma.ts'\r\nimport { addOwnProperties, assert, DEG, int, M4, P3ZX, V, V3 } from 'ts3dutils'\r\nimport { glEnumToString } from './KhronosGroupWebGLDebug'\r\n\r\n// @ts-ignore\r\nimport posCoordVS from '../src/shaders/posCoordVS.glslx'\r\n// @ts-ignore\r\nimport sdfRenderFS from '../src/shaders/sdfRenderFS.glslx'\r\nimport { makeDebugContext, Mesh, Shader, Texture } from './index'\r\n\r\nimport GL = WebGLRenderingContextStrict\r\nexport type GL_COLOR = [number, number, number, number]\r\n/**\r\n * There's only one constant, use it for default values. Use chroma-js or similar for actual colors.\r\n */\r\nexport const GL_COLOR_BLACK: GL_COLOR = [0, 0, 0, 1]\r\n\r\nexport function currentGL(): TSGLContext {\r\n\treturn TSGLContextBase.gl\r\n}\r\n\r\nexport function isNumber(obj: any) {\r\n\tconst str = Object.prototype.toString.call(obj)\r\n\treturn str == '[object Number]' || str == '[object Boolean]'\r\n}\r\n\r\nexport type UniformType = V3 | M4 | number[] | boolean | number\r\nexport type TSGLContext = TSGLContextBase & (WebGLRenderingContextStrict | WebGL2RenderingContext)\r\nexport interface TSGLContextBase extends WebGLRenderingContextStrict {}\r\nexport class TSGLContextBase {\r\n\tmodelViewMatrix: M4 = M4.identity()\r\n\tprojectionMatrix: M4 = M4.identity()\r\n\tstatic readonly MODELVIEW: { __MATRIX_MODE_CONSTANT: any } = 0 as any\r\n\tstatic readonly PROJECTION: { __MATRIX_MODE_CONSTANT: any } = 1 as any\r\n\tMODELVIEW: typeof TSGLContextBase.MODELVIEW\r\n\tPROJECTION: typeof TSGLContextBase.PROJECTION\r\n\r\n\treadonly version: 1 | 2\r\n\r\n\tstatic HALF_FLOAT_OES: int = 0x8d61\r\n\tHALF_FLOAT_OES: int\r\n\r\n\tprivate tempMatrix = new M4()\r\n\tprivate resultMatrix = new M4()\r\n\tprivate modelViewStack: M4[] = []\r\n\tprivate projectionStack: M4[] = []\r\n\tprivate currentMatrixName: 'modelViewMatrix' | 'projectionMatrix'\r\n\tprivate stack: M4[]\r\n\r\n\tmeshes: { [name: string]: Mesh }\r\n\tshaders: { [name: string]: Shader }\r\n\tpublic drawCallCount: int = 0\r\n\tpublic projectionMatrixVersion: int = 0\r\n\tpublic modelViewMatrixVersion: int = 0\r\n\ttextCtx!: CanvasRenderingContext2D\r\n\tTEXT_TEXTURE_HEIGHT: string\r\n\tTEXT_TEXTURE_FONT: string\r\n\ttextMetrics: FontJsonMetrics\r\n\ttextAtlas: Texture\r\n\ttextRenderShader: Shader<any, any>\r\n\r\n\tprotected constructor(\r\n\t\tgl: TSGLContextBase,\r\n\t\tprivate immediate = {\r\n\t\t\tmesh: new Mesh().addVertexBuffer('coords', 'ts_TexCoord').addVertexBuffer('colors', 'ts_Color'),\r\n\t\t\tmode: -1 as GL.DrawMode | -1,\r\n\t\t\tcoord: [0, 0] as [number, number],\r\n\t\t\tcolor: [1, 1, 1, 1] as GL_COLOR,\r\n\t\t\tpointSize: 1,\r\n\t\t\tshader: Shader.create(\r\n\t\t\t\t`\r\n\t\t\tattribute vec4 ts_Color;\r\n\t\t\tattribute vec4 ts_Vertex;\r\n\t\t\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\t\t\tattribute vec2 ts_TexCoord;\r\n            uniform float pointSize;\r\n            varying vec4 color;\r\n            varying vec2 coord;\r\n            void main() {\r\n                color = ts_Color;\r\n                coord = ts_TexCoord;\r\n                gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n                gl_PointSize = pointSize;\r\n            }\r\n\t\t`,\r\n\t\t\t\t`\r\n\t\t\tprecision highp float;\r\n            uniform sampler2D texture;\r\n            uniform float pointSize;\r\n            // uniform bool useTexture;\r\n            varying vec4 color;\r\n            varying vec2 coord;\r\n            void main() {\r\n                gl_FragColor = color;\r\n                // if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\r\n            }\r\n        `,\r\n\t\t\t\tgl,\r\n\t\t\t),\r\n\t\t},\r\n\t) {\r\n\t\tthis.matrixMode(TSGLContextBase.MODELVIEW)\r\n\t}\r\n\r\n\t/// Implement the OpenGL modelview and projection matrix stacks, along with some other useful GLU matrix functions.\r\n\tmatrixMode(mode: { __MATRIX_MODE_CONSTANT: any }): void {\r\n\t\tswitch (mode) {\r\n\t\t\tcase this.MODELVIEW:\r\n\t\t\t\tthis.currentMatrixName = 'modelViewMatrix'\r\n\t\t\t\tthis.stack = this.modelViewStack\r\n\t\t\t\tbreak\r\n\t\t\tcase this.PROJECTION:\r\n\t\t\t\tthis.currentMatrixName = 'projectionMatrix'\r\n\t\t\t\tthis.stack = this.projectionStack\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('invalid matrix mode ' + mode)\r\n\t\t}\r\n\t}\r\n\r\n\tloadIdentity(): void {\r\n\t\tM4.identity(this[this.currentMatrixName])\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tloadMatrix(m4: M4) {\r\n\t\tM4.copy(m4, this[this.currentMatrixName])\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tmultMatrix(m4: M4) {\r\n\t\tM4.multiply(this[this.currentMatrixName], m4, this.resultMatrix)\r\n\t\tconst temp = this.resultMatrix\r\n\t\tthis.resultMatrix = this[this.currentMatrixName]\r\n\t\tthis[this.currentMatrixName] = temp\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tmirror(plane: { normal1: V3; w: number }) {\r\n\t\tthis.multMatrix(M4.mirror(plane))\r\n\t}\r\n\r\n\tperspective(fovDegrees: number, aspect: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tfrustum(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.frustum(left, right, bottom, top, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tortho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.ortho(left, right, bottom, top, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tscale(x: number, y: number, z?: number): void\r\n\tscale(scale: number): void\r\n\tscale(v: V3): void\r\n\tscale(...args: any[]) {\r\n\t\tthis.multMatrix((M4.scale as any)(...args, this.tempMatrix))\r\n\t}\r\n\r\n\tmirroredX() {\r\n\t\tthis.multMatrix(M4.mirror(P3ZX))\r\n\t}\r\n\r\n\ttranslate(x: number, y?: number, z?: number): void\r\n\ttranslate(v: V3): void\r\n\ttranslate(x: any, y?: any, z?: any) {\r\n\t\tif (undefined !== y) {\r\n\t\t\tthis.multMatrix(M4.translate(x, y, z, this.tempMatrix))\r\n\t\t} else {\r\n\t\t\tthis.multMatrix(M4.translate(x, this.tempMatrix))\r\n\t\t}\r\n\t}\r\n\r\n\trotate(angleDegrees: number, x: number, y: number, z: number) {\r\n\t\tthis.multMatrix(M4.rotate(angleDegrees * DEG, { x, y, z }, this.tempMatrix))\r\n\t}\r\n\r\n\tlookAt(eye: V3, center: V3, up: V3) {\r\n\t\tthis.multMatrix(M4.lookAt(eye, center, up, this.tempMatrix))\r\n\t}\r\n\r\n\tpushMatrix() {\r\n\t\tthis.stack.push(M4.copy(this[this.currentMatrixName]))\r\n\t}\r\n\r\n\tpopMatrix() {\r\n\t\tconst pop = this.stack.pop()\r\n\t\tassert(undefined !== pop)\r\n\t\tthis[this.currentMatrixName] = pop as M4\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\t/**\r\n\t * World coordinates (WC) to screen/window coordinates matrix\r\n\t */\r\n\twcToWindowMatrix() {\r\n\t\tconst viewport = this.getParameter(this.VIEWPORT)\r\n\t\tconst [x, y, w, h] = viewport\r\n\t\t// prettier-ignore\r\n\t\tconst viewportToScreenMatrix = new M4([\r\n\t\t\tw / 2, 0, 0, x + w / 2,\r\n\t\t\th / 2, 0, 0, y + h / 2,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t])\r\n\t\treturn M4.product(viewportToScreenMatrix, this.projectionMatrix, this.modelViewMatrix)\r\n\t}\r\n\r\n\t/////////// IMMEDIATE MODE\r\n\t// ### Immediate mode\r\n\t//\r\n\t// Provide an implementation of OpenGL's deprecated immediate mode. This is\r\n\t// deprecated for a reason: constantly re-specifying the geometry is a bad\r\n\t// idea for performance. You should use a `GL.Mesh` instead, which specifies\r\n\t// the geometry once and caches it on the graphics card. Still, nothing\r\n\t// beats a quick `viewerGL.begin(WGL.POINTS); viewerGL.vertex(1, 2, 3); viewerGL.end();` for\r\n\t// debugging. This intentionally doesn't implement fixed-function lighting\r\n\t// because it's only meant for quick debugging tasks.\r\n\r\n\tpointSize(pointSize: number): void {\r\n\t\tthis.immediate.shader.uniforms({ pointSize: pointSize })\r\n\t}\r\n\r\n\tbegin(mode: GL.DrawMode) {\r\n\t\tif (this.immediate.mode != -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\r\n\t\tthis.immediate.mode = mode\r\n\t\tthis.immediate.mesh.colors = []\r\n\t\tthis.immediate.mesh.coords = []\r\n\t\tthis.immediate.mesh.vertices = []\r\n\t}\r\n\r\n\tcolor(cssColor: string): void\r\n\tcolor(r: number, g: number, b: number, a?: number): void\r\n\tcolor(hexInt: int): void\r\n\tcolor(glColor: GL_COLOR): void\r\n\tcolor(...args: any[]) {\r\n\t\tthis.immediate.color =\r\n\t\t\t1 == args.length && Array.isArray(args[0])\r\n\t\t\t\t? args[0]\r\n\t\t\t\t: 1 == args.length && 'number' == typeof args[0]\r\n\t\t\t\t\t? hexIntToGLColor(args[0])\r\n\t\t\t\t\t: 1 == args.length && 'string' == typeof args[0]\r\n\t\t\t\t\t\t? chroma.color(args[0]).gl()\r\n\t\t\t\t\t\t: [args[0], args[1], args[2], args[3] || 1]\r\n\t}\r\n\r\n\ttexCoord(s: number, t: number): void\r\n\ttexCoord(coords: [number, number]): void\r\n\ttexCoord(coords: { x: number; y: number }): void\r\n\ttexCoord(...args: any[]) {\r\n\t\tthis.immediate.coord = V.apply(undefined, args).toArray(2)\r\n\t}\r\n\r\n\tvertex(v: V3): void\r\n\tvertex(x: number, y: number, z: number): void\r\n\tvertex(...args: any[]) {\r\n\t\tthis.immediate.mesh.colors.push(this.immediate.color)\r\n\t\tthis.immediate.mesh.coords.push(this.immediate.coord)\r\n\t\tthis.immediate.mesh.vertices.push(V.apply(undefined, args))\r\n\t}\r\n\r\n\tend(): void {\r\n\t\tif (this.immediate.mode == -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\r\n\t\tthis.immediate.mesh.compile()\r\n\t\tthis.immediate.shader\r\n\t\t\t.uniforms({\r\n\t\t\t\tuseTexture: !!TSGLContextBase.gl.getParameter(this.TEXTURE_BINDING_2D),\r\n\t\t\t})\r\n\t\t\t.drawBuffers(this.immediate.mesh.vertexBuffers, undefined, this.immediate.mode)\r\n\t\tthis.immediate.mode = -1\r\n\t}\r\n\r\n\t////////// MISCELLANEOUS METHODS\r\n\tstatic gl: TSGLContextBase\r\n\r\n\tmakeCurrent() {\r\n\t\tTSGLContextBase.gl = this\r\n\t}\r\n\r\n\t/**\r\n\t * Starts an animation loop.\r\n\t */\r\n\tanimate(callback: (this: TSGLContextBase, domHighResTimeStamp: number, timeSinceLast: number) => void): () => void {\r\n\t\tconst requestAnimationFrame: typeof window.requestAnimationFrame =\r\n\t\t\twindow.requestAnimationFrame ||\r\n\t\t\t(window as any).mozRequestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\tfunction(callback: FrameRequestCallback) {\r\n\t\t\t\tsetTimeout(() => callback(performance.now()), 1000 / 60)\r\n\t\t\t}\r\n\t\tlet time = performance.now(),\r\n\t\t\tkeepUpdating = true\r\n\t\tconst update = (now: number) => {\r\n\t\t\tif (keepUpdating) {\r\n\t\t\t\tcallback.call(this, now, now - time)\r\n\t\t\t\ttime = now\r\n\t\t\t\trequestAnimationFrame(update)\r\n\t\t\t}\r\n\t\t}\r\n\t\trequestAnimationFrame(update)\r\n\t\treturn () => {\r\n\t\t\tkeepUpdating = false\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provide an easy way to get a fullscreen app running, including an\r\n\t * automatic 3D perspective projection matrix by default. This should be\r\n\t * called once.\r\n\t *\r\n\t * Just fullscreen, no automatic camera:\r\n\t *\r\n\t *     viewerGL.fullscreen({ camera: false })\r\n\t *\r\n\t * Adjusting field of view, near plane distance, and far plane distance:\r\n\t *\r\n\t *     viewerGL.fullscreen({ fov: 45, near: 0.1, far: 1000 })\r\n\t *\r\n\t * Adding padding from the edge of the window:\r\n\t *\r\n\t *     viewerGL.fullscreen({ paddingLeft: 250, paddingBottom: 60 })\r\n\t */\r\n\tfullscreen(\r\n\t\toptions: {\r\n\t\t\tpaddingTop?: number\r\n\t\t\tpaddingLeft?: number\r\n\t\t\tpaddingRight?: number\r\n\t\t\tpaddingBottom?: number\r\n\t\t\tcamera?: boolean\r\n\t\t\tfov?: number\r\n\t\t\tnear?: number\r\n\t\t\tfar?: number\r\n\t\t} = {},\r\n\t) {\r\n\t\tconst top = options.paddingTop || 0\r\n\t\tconst left = options.paddingLeft || 0\r\n\t\tconst right = options.paddingRight || 0\r\n\t\tconst bottom = options.paddingBottom || 0\r\n\t\tif (!document.body) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t\"document.body doesn't exist yet (call viewerGL.fullscreen() from \" +\r\n\t\t\t\t\t'window.onload() or from inside the <body> tag)',\r\n\t\t\t)\r\n\t\t}\r\n\t\tdocument.body.appendChild(this.canvas)\r\n\t\tdocument.body.style.overflow = 'hidden'\r\n\t\tthis.canvas.style.position = 'absolute'\r\n\t\tthis.canvas.style.left = left + 'px'\r\n\t\tthis.canvas.style.top = top + 'px'\r\n\t\tthis.canvas.style.width = window.innerWidth - left - right + 'px'\r\n\t\tthis.canvas.style.bottom = window.innerHeight - top - bottom + 'px'\r\n\r\n\t\tconst gl = this\r\n\r\n\t\tfunction windowOnResize() {\r\n\t\t\tgl.canvas.width = (window.innerWidth - left - right) * window.devicePixelRatio\r\n\t\t\tgl.canvas.height = (window.innerHeight - top - bottom) * window.devicePixelRatio\r\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\r\n\t\t\tif (options.camera) {\r\n\t\t\t\tgl.matrixMode(TSGLContextBase.PROJECTION)\r\n\t\t\t\tgl.loadIdentity()\r\n\t\t\t\tgl.perspective(\r\n\t\t\t\t\toptions.fov || 45,\r\n\t\t\t\t\tgl.canvas.width / gl.canvas.height,\r\n\t\t\t\t\toptions.near || 0.1,\r\n\t\t\t\t\toptions.far || 1000,\r\n\t\t\t\t)\r\n\t\t\t\tgl.matrixMode(TSGLContextBase.MODELVIEW)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', windowOnResize)\r\n\t\twindowOnResize()\r\n\t\treturn this\r\n\t}\r\n\tgetMouseLine(e: MouseEvent): { anchor: V3; dir: V3 }\r\n\tgetMouseLine(canvasPosX: number, canvasPosY: number): { anchor: V3; dir: V3 }\r\n\tgetMouseLine(canvasPosXOrE: number | MouseEvent, canvasPosY?: number): { anchor: V3; dir: V3 } {\r\n\t\tif (canvasPosXOrE instanceof MouseEvent) {\r\n\t\t\treturn this.getMouseLine(canvasPosXOrE.offsetX, canvasPosXOrE.offsetY)\r\n\t\t}\r\n\t\tconst ndc1 = V(\r\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\r\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\r\n\t\t\t0,\r\n\t\t)\r\n\t\tconst ndc2 = V(\r\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\r\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\r\n\t\t\t1,\r\n\t\t)\r\n\t\tconst inverseProjectionMatrix = this.projectionMatrix.inversed()\r\n\t\tconst anchor = inverseProjectionMatrix.transformPoint(ndc1)\r\n\t\tconst dir = inverseProjectionMatrix.transformPoint(ndc2).minus(anchor)\r\n\t\treturn { anchor, dir }\r\n\t}\r\n\r\n\tviewportFill() {\r\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\r\n\t}\r\n\r\n\tasync setupTextRendering(pngURL: string, jsonURL: string) {\r\n\t\tthis.textRenderShader = Shader.create(posCoordVS, sdfRenderFS)\r\n\t\t;[this.textAtlas, this.textMetrics] = await Promise.all([\r\n\t\t\tTexture.fromURL(pngURL, {\r\n\t\t\t\tformat: this.LUMINANCE,\r\n\t\t\t\tinternalFormat: this.LUMINANCE,\r\n\t\t\t\ttype: this.UNSIGNED_BYTE,\r\n\t\t\t}),\r\n\t\t\tfetch(jsonURL).then(r => r.json()),\r\n\t\t])\r\n\t\t// const cs = this.textMetrics.chars\r\n\t\t// const maxY = Object.keys(cs).reduce((a, b) => Math.max(a, cs[b][3]), 0)\r\n\t\t// const minY = Object.keys(cs).reduce((a, b) => Math.min(a, cs[b][3] - cs[b][1]), 0)\r\n\t\t// console.log(maxY, minY)\r\n\t}\r\n\r\n\tcachedSDFMeshes: {\r\n\t\t[str: string]: Mesh & { TRIANGLES: int[]; coords: number[]; width: number; lineCount: int }\r\n\t} = {}\r\n\r\n\tgetSDFMeshForString(str: string) {\r\n\t\tassert(this.textMetrics)\r\n\t\treturn (\r\n\t\t\tthis.cachedSDFMeshes[str] ||\r\n\t\t\t(this.cachedSDFMeshes[str] = createTextMesh(this.textMetrics, this.textAtlas, str))\r\n\t\t)\r\n\t}\r\n\r\n\trenderText(\r\n\t\tstring: string,\r\n\t\tcolor: GL_COLOR,\r\n\t\tsize = 1,\r\n\t\txAlign: 'left' | 'center' | 'right' = 'left',\r\n\t\tbaseline: 'top' | 'middle' | 'alphabetic' | 'bottom' = 'bottom',\r\n\t\tgamma = 0.05,\r\n\t\tlineHeight = 1.2,\r\n\t) {\r\n\t\tconst strMesh = this.getSDFMeshForString(string)\r\n\t\tthis.pushMatrix()\r\n\t\tthis.scale(size)\r\n\t\tconst xTranslate = { left: 0, center: -0.5, right: -1 }\r\n\t\tconst yTranslate = {\r\n\t\t\ttop: -this.textMetrics.ascender / this.textMetrics.size,\r\n\t\t\tmiddle: (-this.textMetrics.ascender - this.textMetrics.descender) / 2 / this.textMetrics.size,\r\n\t\t\talphabetic: 0,\r\n\t\t\tbottom: -this.textMetrics.descender / this.textMetrics.size,\r\n\t\t}\r\n\t\t// console.log('yTranslate[baseline]', yTranslate[baseline])\r\n\t\tthis.translate(xTranslate[xAlign] * strMesh.width, yTranslate[baseline], 0)\r\n\t\tthis.multMatrix(M4.forSys(V3.X, V3.Y, new V3(0, -lineHeight, 0)))\r\n\t\tthis.textAtlas.bind(0)\r\n\t\tthis.textRenderShader\r\n\t\t\t.uniforms({ texture: 0, u_color: color, u_debug: 0, u_gamma: gamma, u_buffer: 192 / 256 })\r\n\t\t\t.draw(strMesh)\r\n\t\tthis.popMatrix()\r\n\r\n\t\t// gl.uniform1f(shader.u_debug, debug ? 1 : 0)\r\n\r\n\t\t// gl.uniform4fv(shader.u_color, [1, 1, 1, 1])\r\n\t\t// gl.uniform1f(shader.u_buffer, buffer)\r\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\r\n\r\n\t\t// gl.uniform4fv(shader.u_color, [0, 0, 0, 1])\r\n\t\t// gl.uniform1f(shader.u_buffer, 192 / 256)\r\n\t\t// gl.uniform1f(shader.u_gamma, (gamma * 1.4142) / scale)\r\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\r\n\t}\r\n\r\n\tstatic create(\r\n\t\toptions: Partial<GL.WebGLContextAttributes & { canvas: HTMLCanvasElement; throwOnError: boolean }> = {},\r\n\t): TSGLContext {\r\n\t\tconst canvas = options.canvas || document.createElement('canvas')\r\n\t\tif (!options.canvas) {\r\n\t\t\tcanvas.width = 800\r\n\t\t\tcanvas.height = 600\r\n\t\t}\r\n\t\tif (!('alpha' in options)) options.alpha = false\r\n\t\tlet newGL: any = undefined\r\n\t\ttry {\r\n\t\t\tnewGL = canvas.getContext('webgl2', options)\r\n\t\t\tnewGL && (newGL.version = 2)\r\n\t\t\tif (!newGL) {\r\n\t\t\t\tnewGL = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options)\r\n\t\t\t\tnewGL && (newGL.version = 1)\r\n\t\t\t}\r\n\t\t\tconsole.log('getting context')\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e, 'Failed to get context')\r\n\t\t}\r\n\t\tif (!newGL) throw new Error('WebGL not supported')\r\n\t\tif (options.throwOnError) {\r\n\t\t\tnewGL = makeDebugContext(newGL, (err, funcName) => {\r\n\t\t\t\tthrow new Error(glEnumToString(err) + ' was caused by ' + funcName)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tTSGLContextBase.gl = newGL\r\n\t\taddOwnProperties(newGL, TSGLContextBase.prototype)\r\n\t\taddOwnProperties(newGL, new TSGLContextBase(newGL))\r\n\t\t//addEventListeners(newGL)\r\n\t\treturn newGL\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the canvas render resolution (canvas.width and canvas.height) to match the display. I.e. it takes into\r\n\t * account window.devicePixelRatio.\r\n\t * @param maxPixelRatio A limit for the pixelRatio. Useful for very high DPI devices such as mobile devices.\r\n\t */\r\n\tfixCanvasRes(maxPixelRatio = Infinity) {\r\n\t\tthis.canvas.width = this.canvas.clientWidth * Math.min(window.devicePixelRatio, maxPixelRatio)\r\n\t\tthis.canvas.height = this.canvas.clientHeight * Math.min(window.devicePixelRatio, maxPixelRatio)\r\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\r\n\t}\r\n}\r\nexport namespace TSGLContext {\r\n\t/**\r\n\t * `create()` creates a new WebGL context and augments it with more methods. The alpha channel is disabled\r\n\t * by default because it usually causes unintended transparencies in the canvas.\r\n\t */\r\n\texport const create = TSGLContextBase.create\r\n}\r\n\r\n// enum WGL_ERROR {\r\n// \tNO_ERROR = WGL.NO_ERROR,\r\n// \tINVALID_ENUM = WGL.INVALID_ENUM,\r\n// \tINVALID_VALUE = WGL.INVALID_VALUE,\r\n// \tINVALID_OPERATION = WGL.INVALID_OPERATION,\r\n// \tINVALID_FRAMEBUFFER_OPERATION = WGL.INVALID_FRAMEBUFFER_OPERATION,\r\n// \tOUT_OF_MEMORY = WGL.OUT_OF_MEMORY,\r\n// \tCONTEXT_LOST_WEBGL = WGL.CONTEXT_LOST_WEBGL,\r\n// }\r\n\r\nTSGLContextBase.prototype.MODELVIEW = TSGLContextBase.MODELVIEW\r\nTSGLContextBase.prototype.PROJECTION = TSGLContextBase.PROJECTION\r\nTSGLContextBase.prototype.HALF_FLOAT_OES = TSGLContextBase.HALF_FLOAT_OES\r\n\r\n/**\r\n *\r\n * Push two triangles:\r\n * ```\r\n c - d\r\n | \\ |\r\n a - b\r\n ```\r\n */\r\nexport function pushQuad(triangles: int[], flipped: boolean, a: int, b: int, c: int, d: int) {\r\n\t// prettier-ignore\r\n\tif (flipped) {\r\n\t\ttriangles.push(\r\n\t\t\ta, c, b,\r\n\t\t\tb, c, d)\r\n\t} else {\r\n\t\ttriangles.push(\r\n\t\t\ta, b, c,\r\n\t\t\tb, d, c)\r\n\t}\r\n}\r\n\r\nfunction hexIntToGLColor(color: int): GL_COLOR {\r\n\treturn [(color >> 16) / 255.0, ((color >> 8) & 0xff) / 255.0, (color & 0xff) / 255.0, 1.0]\r\n}\r\n\r\nexport interface FontJsonMetrics {\r\n\tfamily: string\r\n\tstyle: string\r\n\r\n\t// buffer refers to the width of the margin around glyph bounding boxes with distance values\r\n\tbuffer: int\r\n\tsize: number\r\n\r\n\t// [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY]\r\n\t// see https://www.freetype.org/freetype2/docs/tutorial/step2.html\r\n\tchars: { [char: string]: [number, number, number, number, number, number, number] }\r\n\r\n\tdescender: number\r\n\tascender: number\r\n}\r\n// function measureText(metrics: FontJsonMetrics, text: string, size: number) {\r\n// \tconst dimensions = {\r\n// \t\tadvance: 0,\r\n// \t}\r\n\r\n// \tconst scale = size / metrics.size\r\n// \tfor (let i = 0; i < text.length; i++) {\r\n// \t\tconst horiAdvance = metrics.chars[text[i]][4]\r\n// \t\tdimensions.advance += horiAdvance * scale\r\n// \t}\r\n\r\n// \treturn dimensions\r\n// }\r\n\r\n// gl.getExtension('OES_standard_derivatives')\r\n\r\n// gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\r\n\r\n// gl.enable(gl.BLEND)\r\n\r\n// const texture = gl.createTexture()\r\n\r\n// const vertexBuffer = gl.createBuffer()\r\n// const textureBuffer = gl.createBuffer()\r\n\r\nfunction createTextMesh(fontMetrics: FontJsonMetrics, fontTextureAtlas: Texture, str: string, lineHeight = 1) {\r\n\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\r\n\r\n\tlet cursorX = 0\r\n\tlet cursorY = 0\r\n\r\n\tfunction drawGlyph(chr: string) {\r\n\t\tconst metric = fontMetrics.chars[chr]\r\n\t\tif (!metric) return\r\n\r\n\t\tconst [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY] = metric\r\n\t\tconst { size, buffer } = fontMetrics\r\n\t\tconst quadStartIndex = mesh.vertices.length\r\n\r\n\t\t// buffer = margin on texture\r\n\t\tif (width > 0 && height > 0) {\r\n\t\t\t// Add a quad (= two triangles) per glyph.\r\n\t\t\tconst left = (cursorX + horiBearingX - buffer) / size\r\n\t\t\tconst right = (cursorX + horiBearingX + width + buffer) / size\r\n\t\t\tconst bottom = (horiBearingY - height - buffer) / size\r\n\t\t\tconst top = (horiBearingY + buffer) / size\r\n\t\t\tmesh.vertices.push(\r\n\t\t\t\tnew V3(left, bottom, cursorY / size),\r\n\t\t\t\tnew V3(right, bottom, cursorY / size),\r\n\t\t\t\tnew V3(left, top, cursorY / size),\r\n\t\t\t\tnew V3(right, top, cursorY / size),\r\n\t\t\t)\r\n\r\n\t\t\tconst coordsLeft = posX / fontTextureAtlas.width\r\n\t\t\tconst coordsRight = (posX + width + 2 * buffer) / fontTextureAtlas.width\r\n\t\t\tconst coordsBottom = (posY + height + 2 * buffer) / fontTextureAtlas.height\r\n\t\t\tconst coordsTop = posY / fontTextureAtlas.height\r\n\t\t\tmesh.coords.push(\r\n\t\t\t\t[coordsLeft, coordsBottom],\r\n\t\t\t\t[coordsRight, coordsBottom],\r\n\t\t\t\t[coordsLeft, coordsTop],\r\n\t\t\t\t[coordsRight, coordsTop],\r\n\t\t\t)\r\n\t\t\t// mesh.coords.push([0, 0], [0, 1], [1, 0], [1, 1])\r\n\r\n\t\t\tpushQuad(mesh.TRIANGLES, false, quadStartIndex, quadStartIndex + 1, quadStartIndex + 2, quadStartIndex + 3)\r\n\t\t}\r\n\r\n\t\t// pen.x += Math.ceil(horiAdvance * scale);\r\n\t\tcursorX += horiAdvance\r\n\t}\r\n\r\n\tfor (let i = 0; i < str.length; i++) {\r\n\t\tconst chr = str[i]\r\n\t\tif ('\\n' == chr) {\r\n\t\t\tcursorX = 0\r\n\t\t\tcursorY += lineHeight * fontMetrics.size\r\n\t\t} else {\r\n\t\t\tdrawGlyph(chr)\r\n\t\t}\r\n\t}\r\n\r\n\treturn Object.assign(mesh.compile(), { width: cursorX / fontMetrics.size, lineCount: cursorY + 1 })\r\n}\r\n","// A fragment shader for rendering signed distance fields. Main use case: text.\r\n\r\nprecision mediump float;\r\n\r\n// the atlas texture\r\nuniform sampler2D u_texture;\r\n\r\n// the color the text should be rendered\r\nuniform vec4 u_color;\r\n\r\n// the zero distance value in the texture\r\nuniform float u_buffer;\r\n\r\n// control the bluriness of the output 0.05 is a good value\r\nuniform float u_gamma;\r\n\r\n// set to > 1.0 to just output the texture \r\nuniform float u_debug;\r\n\r\nvarying vec2 coord;\r\n\r\nvoid main() {\r\n    float dist = texture2D(u_texture, coord).r;\r\n    if (u_debug > 0.0) {\r\n        gl_FragColor = vec4(dist, dist, dist, 1);\r\n    } else {\r\n        float alpha = smoothstep(u_buffer - u_gamma, u_buffer + u_gamma, dist);\r\n        gl_FragColor = vec4(u_color.rgb, alpha * u_color.a);\r\n        if (gl_FragColor.a == 0.0) {\r\n            discard;\r\n        }\r\n    }\r\n}","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = memoize;\n","precision mediump float;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nattribute vec4 ts_Vertex;\r\nvoid main() {\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","precision mediump float;\r\nuniform vec4 color;\r\nvoid main() {\r\n    gl_FragColor = color;\r\n}","precision mediump float;\r\n\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nuniform mat3 ts_NormalMatrix;\r\nuniform float f;\r\n\r\nattribute vec3 ts_Normal;\r\nattribute vec4 ts_Vertex;\r\nattribute vec4 ts_Vertex2;\r\nattribute vec4 ts_Color;\r\n\r\nvarying vec3 normal;\r\nvarying vec4 color;\r\n\r\nvoid main() {\r\n    vec4 v = mix(ts_Vertex, ts_Vertex2, f);\r\n\tgl_Position = ts_ModelViewProjectionMatrix * v;\r\n\tnormal = ts_NormalMatrix * ts_Normal;\r\n\tcolor = ts_Color;\r\n}","precision mediump float;\r\nvarying vec4 color;\r\nvoid main() {\r\n    gl_FragColor = color;\r\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","__assign","assign","t","s","i","n","arguments","length","call","apply","__rest","e","indexOf","getOwnPropertySymbols","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","[object Object]","Symbol","toStringTag","_map","Map","_size","from","entries2","map","key","join","callbackfn","bucket","values","iterator","entries","set2","val","hashCode","get","pairIndex","findIndex","pair","equals","push","set","undefined","some","find","hashCodes","canonVal","x","like","getLike","index","delete","splice","deleted","clear","size","v","dims","f","Float64Array","Vector","fromFunction","Math","random","args","every","a","dir","vectors","dest","srcStart","destStart","vectorCount","dim","Float32Array","srcIndex","destIndex","vs","v3","weight","y","z","w","Error","vector","u","factor","obj","eq","roundFunction","toFixed","callsce","isZero","acos","clamp","dot","sqrt","lengthSquared","abs","eq0","hypot","div","Matrix","times","minus","V3","width","height","m","elIndex","floor","k","rowArrays","arrayCopy","rowIndex","new","colVectors","fromColArrays","colArrays","arrayCopyStep","colIndex","ms","isArray","copy","reduce","x0","fx0","EPSILON","jacobi","forWidthHeight","fx","setEl","src","r","scalar","colNames","rowNames","rounded","rows","arrayFromFunction","slice","unshift","forEach","row","colWidths","max","String","padEnd","padStart","matrix","precision","NLA_PRECISION","isSquare","transposed","equalsMatrix","identityN","toSource","uRowArrays","asRowArrays","lRowArrays","pRowArrays","currentRowIndex","maxAbsValue","pivotRowIndex","numberOfNonZeroRows","el","arraySwap","l","colIndex2","L","fromRowArrays","U","R","c","qTransposed","xi","xk","col2","x1","x2","matrixForCS","Q","filter","asColArrays","col","isLowerUnitriangular","isUpperTriangular","luDecomposition","solveForwards","timesVector","solveBackwards","str","temp","fromColVectors","toString","gauss","rank","arrayConstructor","rowArray","colArray","firstColIndex","subWidth","firstRowIndex","subHeight","sstart","sstep","dst","dstart","dstep","blockSize","blockCount","arrayCopyBlocks","fn","inversed2","inversed3","inversed4","solveForwardsMatrix","solveBackwardsMatrix","det","canMultiply","nWidth","nHeight","nM","nRowIndex","nColIndex","tWidth","tHeight","tM","tRowIndex","tColIndex","h","min","vIndex","absSum","isLowerTriangular","product","getTriangularDeterminant","searchIndexStart","searchIndex","dependents","uRowIndex","lRowIndex","lColIndex","console","log","indexMap","permutationAsIndexMap","originalNumberToString","Number","radix","EPS","lt","eq2","exp","isNaN","NaN","split","arr","j","count","dIndex","target","props","exclude","getOwnPropertyNames","includes","warn","defineProperty","getOwnPropertyDescriptor","decimalAdjust","bind","round","ceil","defaultRoundFunction","DEG","o","JSON","stringify","sce","name","params","SCE","context","emod","sliceStep","start","end","chunkSize","splicePure","deleteCount","items","arrayLength","_deleteCount","_start","newLength","getPrototypeOf","mapFilter","flatMap","concat","newItems","concatenated","Infinity","indexWithMax","maxVal","withMax","sum","sumInPlaceTree","lHalfFloor","lHalfCeil","isEmpty","unique","uniqueSet","Set","remove","removeIndex","bagRemoveIndex","pop","removeMatch","matcher","removeAll","toggle","bagToggle","binaryIndexOf","searchElement","cmp","currentIndex","currentElement","minIndex","maxIndex","binaryInsert","firstUnsorted","capitalizeFirstLetter","charAt","toUpperCase","zRotation","PI","zRadius","cos","sin","theta","phi","angleTo","to","cross","v3arr","v3count","packedArray","delta","perturbed","radius","longitude","latitude","ab","squared","1","2","lerp","NAMEMAP","X","Y","Z","omega","plus","atan2","likeO","normal1","other","O","b1","hasLength","xAbs","yAbs","zAbs","floatHashCode","hc","eps","asin","parseFloat","CustomMap","XYZ","INF","P3YZ","P3ZX","P3XY","plane","transform","M4","mirror","project","translate","scale","radians","rotateX","rotateY","rotateZ","rotationCenter","rotationAxis","rotateLine","rotateAB","alpha","beta","gamma","FOO","BAR","visitor","proto","Transformable","var_args","flattened","super","identity","left","right","m4s","multiply","temp0","temp1","last","e0","e1","e2","origin","n0","n1","n2","n3","fovDegrees","aspect","near","far","perspectiveRad","fov","tan","frustum","vanishingPlane","bottom","top","np","eye","focus","up","unit","rotationAxisLength","rotationAnchor","ax","ay","az","dx","dy","dz","nx","ny","nz","nd","line","anchor","dir1","transformVector","getTranslation","inverse","m4","g","q","discriminantX4","root","pqFormula","divisor","pDiv3","pDiv3Pow3","qDiv2","discriminant","t1","cbrt","u1","sd","solveCubicReal2","eigenValues","realEigenValues3","this3x3","IDENTITY3","mats","ev","determinant3","gauss0","eigenVector0","planeNormal","eigenVector1","getPerpendicular","eigenVector2","rejectedFrom","mat","A","as3x3","S","V","it","likeM4","maxOffDiagonal","maxOffDiagonalIndex","a_ii","a_kk","a_ik","atan","givensRotation","likeIdentity","sigma","SIGMA","VSTAR","fromFunction4","transpose","vx","vy","vz","checkW","transformedAnchor","VV","transformedVector","transformPoint","determinant","IDENTITY","temp2","$","klop","jlnp","jkno","ilmp","ikmo","ijmn","detAbs","divScalar","replace","repeat","expected","isTranslation","isScaling","isNoProj","isMirror","inversed","forSys","JavaMap","ZXY","YZX","addOwnProperties","KEYWORD_REGEXP","seen","indent","clazz","method","writable","configurable","enumerable","addToSourceMethodToPrototype","Boolean","Function","RegExp","Date","getTime","keys","sort","test","negated","AABB","aabbs","aabb","addAABB","ps","addPoint","volume","remainingVolume","cond","dimMin","dimMax","newRemainingVolume","withElement","precisision","center","distanceToPoint","containsPoint","distanceTo","minTs","divv","maxTs","tMin","maxElement","tMax","minElement","hasVolume","isAxisAligned","addPoints","transformedPoints","corners","sign","newtonIterate1d","xStart","max_steps","dfdx","TWOPI","DEG2RAD","RAD2DEG","color","Color","guess","mix","doRound","clamp_","mode","r255","g255","b255","a1","rgbString","alphaString","rgb2hex","hue","min1","max1","rgb2hexhue","l1","s1","rgb2hsl","min255","max255","rgb2hsv","c1","rgb2hcg","rgb2css","rnd","hsl2css","hsl","closest","thisNum","num","w3cx11","thisLStar","thisAStar","thisBStar","lab","indexOfMax","lStar","aStar","bStar","rgb2cmyk","lum1","rgb2xyz","inverseLerp","white","black","modeAndChannel","channel","luminance","alpha1","rgb","amount","LAB_Kn","darker","lch","saturate","r1","g1","i1","hRad","rgb2hsi","rgb2lab","rgbNum","rgb2num","b2","lab2lch","rgb2lch","r2","g2","a2","css","kelvin","temperature","brewer","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Viridis","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflower","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","laserlemon","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrod","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","maroon2","maroon3","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","purple2","purple3","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","CubeHelix","_rotations","_gamma","_hue","_lightness","fract","amp","cos_a","sin_a","col1","c2","res","interpolators","num2rgb","blend_fs","scales","_at","Scale","_init","blend_f","each","_","_screen","_overlay","_dodge","_burn","classes","_classes","domain","limits","_colors","_pos","_min","_max","lerpInv","_mode","_resetCache","outputFormat","_out","enableCorrectLightness","_correctLightness","colors","sign2","paddingLeft","paddingRight","_paddingLeft","_paddingRight","numColors","format","_color","samples","enableCache","_cache","colorsOrFunction","cls","bypassMap","_getClass","_tCorrectedLightness","tHash","cacheResult","t0_1","L_ideal","steps","fA","fC","bisect","analyze","data","add","info","startsWith","min_log","LOG10E","max_log","pb","assignments","clusterSizes","nb_iters","centroids","fill","minDistIndex","newCentroids","nc","kClusters","tmpKMeansBreaks","kCluster","_input","channels","hex2rgb","hex","match","parseInt","norm360","degrees","xyz","xyz1","xyz2","lrgb","rgba","hsl2rgb","hsv","hueDegrees","v1","hcxm2rgb","WS","FLOAT","CSS_RGB_REGEX","CSS_RGB_WS_REGEX","CSS_RGB_PERCENT_REGEX","CSS_RGB_WS_PERCENT_REGEX","CSS_HSL_REGEX","CSS_HSL_WS_REGEX","css2rgb","toLowerCase","CONVERSION","deg","rad","turn","angleUnit","rgbChannel2RgbLinear","x255","rgbLinearChannel2Rgb","xLinear1","kelvin2rgb","M","hueTurnX6","m1","m255","cm255","xm255","cielab2rgb","LStar100","fInv","LAB_delta","LAB_3DeltaPow2","LAB_Xn","LAB_Yn","LAB_Zn","cielab2xyz","xyz2rgb","hDegrees","lch2lab","cmyk","y1","k1","gl","K","hcg","LAB_deltaPow3","xyz2cielab","r1Linear","g1Linear","b1Linear","X1","Y1","Z1","maxValue","maxValueIndex","hsi","color1","color2","lerpHue","hue1","hue2","rotations","lightness","at","randomSource","cssString","chromables","rSquareSum","gSquareSum","bSquareSum","alphaSum","_average_lrgb","numSum","_bezier","lab0","lab1","lab2","lab3","bezier2","p0","p1","p2","bezier3","p3","I0","I1","l2","channelDifferences","channelValue","channelIndex","reference","sample","C","L1","L2","sl","sc","h1","c4","sh","delC","delA","delB","v2","WGL","WebGLRenderingContext","Buffer","type","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","Uint16Array","bindSize","UNSIGNED_SHORT","Uint32Array","UNSIGNED_INT","usage","STATIC_DRAW","currentGL","buffer","DYNAMIC_DRAW","createBuffer","pack","spacing","bufferLength","destPtr","subArray","bindBuffer","bufferData","hasBeenCompiled","tempM4_1","tempM4_2","Mesh","addVertexBuffer","totalVolumeX2","totalCentroidWithZX2","totalAreaX2","triangles","TRIANGLES","vertices","ai","bi","ci","ac","normal","faceShadowCentroid","centroid","schur","area","attribute","vertexBuffers","arrayType","indexBuffers","others","allMeshes","bufferName","mesh","addIndexBuffer","newIndexBufferData","ptr","startIndex","compile","minVertexBufferLength","stl","fileReader","FileReader","onerror","onload","_progressEvent","dataView","DataView","triangleCount","getUint32","normals","bufferPtr","HEADER_BYTE_SIZE","readV3","getFloat32","readAsArrayBuffer","ArrayBuffer","setUint32","normalOnPoints","setFloat32","Blob","invTrans","indexBufferName","canonEdges","canonEdge","i0","LINES","tris","lines","si","toLength","sphere","getAABB","getCenter","options","detailX","detail","detailY","startX","startY","coords","offset","xDetail","yDetail","zDetail","vi","ti","VERTEX_CORNERS","UNIT_CUBE_CORNERS","pushQuad","latitudes","longitudes","baseVertices","angle","rotation","subdivisions","tesselateRecursively","ia","ib","ic","abMid1","bcMid1","caMid1","iabm","ibcm","icam","cube","computeNormalLines","close","vl","lineAxis","totalRads","vc","vTotal","rotMat","rads","transformedVectors","pF","pN","sMin","sMax","sRes","tRes","json","toArray","DRAW_MODE_NAMES","POINTS","LINE_STRIP","LINE_LOOP","TRIANGLE_STRIP","TRIANGLE_FAN","DRAW_MODE_CHECKS","Shader","vertexSource","fragmentSource","matrixNames","compileSource","source","shader","createShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","program","createProgram","attachShader","VERTEX_SHADER","FRAGMENT_SHADER","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","uniformLocations","constantAttributes","activeMatrices","getUniformLocation","uniformInfos","ACTIVE_UNIFORMS","getActiveUniform","uniforms","useProgram","location","FLOAT_VEC4","uniform4fv","uniform1fv","FLOAT_VEC3","uniform3fv","uniform2fv","uniformMatrix3fv","uniformMatrix4fv","SAMPLER_2D","SAMPLER_CUBE","INT","uniform1i","uniform1f","FLOAT_MAT4","FLOAT_MAT3","FLOAT_MAT2","uniformMatrix2fv","attributes","getAttribLocation","disableVertexAttribArray","vertexAttrib1f","vertexAttrib4fv","modeName","drawBuffers","indexBuffer","on","modelViewMatrixInverse","modelViewMatrix","projectionMatrixInverse","projectionMatrix","modelViewProjectionMatrix","uni","modelViewMatrixVersion","projectionMatrixVersion","enableVertexAttribArray","vertexAttribPointer","drawElements","BYTES_PER_ELEMENT","drawArrays","drawCallCount","Texture","RGBA","internalFormat","UNSIGNED_BYTE","magFilter","LINEAR","minFilter","version","getExtension","NEAREST","HALF_FLOAT_OES","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","wrap","wrapS","CLAMP_TO_EDGE","TEXTURE_WRAP_T","wrapT","texImage2D","activeTexture","TEXTURE0","render","prevFramebuffer","getParameter","FRAMEBUFFER_BINDING","framebuffer","bindFramebuffer","FRAMEBUFFER","prevRenderbuffer","RENDERBUFFER_BINDING","depthRenderbuffer","createRenderbuffer","bindRenderbuffer","RENDERBUFFER","renderbufferStorage","DEPTH_COMPONENT16","createFramebuffer","framebufferTexture2D","COLOR_ATTACHMENT0","framebufferRenderbuffer","DEPTH_ATTACHMENT","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","prevViewport","VIEWPORT","viewport","imgElement","protocol","generateMipmap","url","checkerBoardCanvas","document","createElement","getContext","canvas","fillStyle","fillRect","fromImage","image","Image","swapWith","glValidEnumContexts","enable","0","disable","3","4","getShaderPrecisionFormat","getVertexAttrib","6","getTexParameter","texParameterf","copyTexImage2D","8","copyTexSubImage2D","getBufferParameter","pixelStorei","5","getFramebufferAttachmentParameter","getRenderbufferParameter","enumBitwiseOr","depthFunc","blendFunc","blendFuncSeparate","blendEquation","blendEquationSeparate","stencilFunc","stencilFuncSeparate","stencilMaskSeparate","stencilOp","stencilOpSeparate","cullFace","frontFace","drawArraysInstancedANGLE","drawElementsInstancedANGLE","blendEquationEXT","bufferSubData","copyBufferSubData","getBufferSubData","blitFramebuffer","10","9","framebufferTextureLayer","invalidateFramebuffer","invalidateSubFramebuffer","readBuffer","getInternalformatParameter","renderbufferStorageMultisample","texStorage2D","texStorage3D","7","texImage3D","11","texSubImage2D","texSubImage3D","12","copyTexSubImage3D","compressedTexImage2D","compressedTexImage3D","compressedTexSubImage2D","compressedTexSubImage3D","vertexAttribIPointer","drawArraysInstanced","drawElementsInstanced","drawRangeElements","readPixels","clearBufferfv","clearBufferiv","clearBufferuiv","clearBufferfi","beginQuery","endQuery","getQuery","getQueryParameter","samplerParameteri","samplerParameterf","getSamplerParameter","fenceSync","clientWaitSync","waitSync","getSyncParameter","bindTransformFeedback","beginTransformFeedback","transformFeedbackVaryings","bindBufferBase","bindBufferRange","getIndexedParameter","getActiveUniforms","getActiveUniformBlockParameter","glEnums","enumStringToValue","init","window","WebGL2RenderingContext","propertyName","prop","glEnumToString","glFunctionArgToString","functionName","numArgs","argumentIndex","funcInfo","funcOverloadInfo","argInfo","enums","orEnums","orResult","enumValue","makePropertyWrapper","wrapper","original","__defineGetter__","__defineSetter__","TSGLContext","TSGLContextBase","immediate","coord","pointSize","matrixMode","MODELVIEW","currentMatrixName","stack","modelViewStack","PROJECTION","projectionStack","resultMatrix","multMatrix","tempMatrix","ortho","angleDegrees","rotate","lookAt","viewportToScreenMatrix","chroma","useTexture","TEXTURE_BINDING_2D","callback","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","setTimeout","performance","now","time","keepUpdating","update","paddingTop","paddingBottom","body","appendChild","style","overflow","position","innerWidth","innerHeight","windowOnResize","devicePixelRatio","camera","loadIdentity","perspective","addEventListener","canvasPosXOrE","canvasPosY","MouseEvent","getMouseLine","offsetX","offsetY","ndc1","offsetWidth","offsetHeight","ndc2","inverseProjectionMatrix","pngURL","jsonURL","textRenderShader","posCoordVS","sdfRenderFS","textAtlas","textMetrics","all","fromURL","LUMINANCE","fetch","cachedSDFMeshes","fontMetrics","fontTextureAtlas","lineHeight","cursorX","cursorY","drawGlyph","chr","metric","chars","horiBearingX","horiBearingY","horiAdvance","posX","posY","quadStartIndex","coordsLeft","coordsRight","coordsBottom","coordsTop","lineCount","createTextMesh","string","xAlign","baseline","strMesh","getSDFMeshForString","pushMatrix","yTranslate","ascender","middle","descender","alphabetic","u_color","u_debug","u_gamma","u_buffer","draw","popMatrix","newGL","throwOnError","makeDebugContext","ctx","opt_onErrorFunc","opt_onFunc","opt_err_ctx","err","msg","argStr","error","glErrorShadow","makeErrorWrapper","getError","wrapped","NO_ERROR","funcName","maxPixelRatio","clientWidth","clientHeight","flipped","uid","FUNC_ERROR_TEXT","funcTag","genTag","reIsHostCtor","freeGlobal","global","freeSelf","self","arrayProto","funcProto","objectProto","coreJsData","maskSrcKey","exec","IE_PROTO","funcToString","objectToString","reIsNative","getNative","nativeCreate","Hash","entry","ListCache","MapCache","assocIndexOf","array","getMapData","__data__","object","getValue","isObject","func","tag","isFunction","isHostObject","baseIsNative","memoize","resolver","TypeError","memoized","cache","has","Cache","hash","label","sent","trys","ops","verb","throw","return","op","hasOwn","classNames","arg","argType","inner","module","exports","default"],"mappings":"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CA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SAEDC,OAAQ,CACP,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,OAEDC,KAAM,CACL,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QAEDC,KAAM,CACL,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SAEDC,KAAM,CACL,QACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,OAEDC,OAAQ,CACP,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SAEDC,KAAM,CACL,QACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,MACA,OAEDC,KAAM,CACL,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SAEDC,KAAM,CACL,QACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,SAEDC,KAAM,CAAC,QAAU,SAAU,QAAU,SAAU,SAAU,SAAU,SAAU,UAC7EC,OAAQ,CAAC,QAAU,SAAU,SAAU,SAAU,QAAU,SAAU,SAAU,SAC/EC,KAAM,CAAC,SAAU,QAAU,QAAU,QAAU,SAAU,SAAU,SAAU,SAAU,UACvFC,KAAM,CACL,QACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,UAEDC,MAAO,CAAC,QAAU,SAAU,QAAU,SAAU,QAAU,SAAU,SAAU,SAC9EC,OAAQ,CACP,SACA,QACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,QACA,SACA,UAEDC,QAAS,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,UAChFC,QAAS,CAAC,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,SAAU,WAS9E9E,EAAS,CACrB+E,UAAW,SACXC,aAAc,SACdC,KAAM,MACNC,WAAY,QACZC,MAAO,SACPC,MAAO,SACPC,OAAQ,SACRvE,MAAO,EACPwE,eAAgB,SAChBC,KAAM,IACNC,WAAY,QACZC,MAAO,SACPC,UAAW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"}