{"version":3,"file":"bundle.js","sources":["node_modules/tslib/tslib.es6.js","node_modules/tosource/tosource.js","node_modules/javasetmap.ts/src/JavaMap.ts","node_modules/ts3dutils/src/Vector.ts","node_modules/ts3dutils/src/Matrix.ts","node_modules/ts3dutils/src/NLA.ts","node_modules/ts3dutils/src/V3.ts","node_modules/ts3dutils/src/Transformable.ts","node_modules/ts3dutils/src/M4.ts","node_modules/ts3dutils/src/toSource.ts","node_modules/ts3dutils/src/AABB.ts","node_modules/chroma.ts/src/index.ts","node_modules/tsgl/src/Buffer.ts","node_modules/tsgl/src/Mesh.ts","node_modules/tsgl/src/Shader.ts","node_modules/tsgl/src/Texture.ts","node_modules/tsgl/src/KhronosGroupWebGLDebug.ts","node_modules/tsgl/src/shaders/posCoordVS.glslx","node_modules/tsgl/src/shaders/sdfRenderFS.glslx","node_modules/tsgl/src/TSGLContext.ts","node_modules/tsgl/src/shaders/posVS.glslx","node_modules/lodash.memoize/index.js","node_modules/tsgl/src/shaders/colorFS.glslx","src/interpolationVS.glslx","node_modules/tsgl/src/shaders/varyingColorFS.glslx","node_modules/classnames/index.js"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/* toSource by Marcello Bastea-Forte - zlib license */\nmodule.exports = function (object, filter, indent, startingIndent) {\n  var seen = []\n  return walk(object, filter, indent === undefined ? '  ' : (indent || ''), startingIndent || '', seen)\n\n  function walk (object, filter, indent, currentIndent, seen) {\n    var nextIndent = currentIndent + indent\n    object = filter ? filter(object) : object\n\n    switch (typeof object) {\n      case 'string':\n        return JSON.stringify(object)\n      case 'boolean':\n      case 'number':\n      case 'undefined':\n        return '' + object\n      case 'function':\n        return object.toString()\n    }\n\n    if (object === null) {\n      return 'null'\n    }\n    if (object instanceof RegExp) {\n      return stringifyRegExp(object)\n    }\n    if (object instanceof Date) {\n      return 'new Date(' + object.getTime() + ')'\n    }\n\n    var seenIndex = seen.indexOf(object) + 1\n    if (seenIndex > 0) {\n      return '{$circularReference:' + seenIndex + '}'\n    }\n    seen.push(object)\n\n    function join (elements) {\n      return indent.slice(1) + elements.join(',' + (indent && '\\n') + nextIndent) + (indent ? ' ' : '')\n    }\n\n    if (Array.isArray(object)) {\n      return '[' + join(object.map(function (element) {\n        return walk(element, filter, indent, nextIndent, seen.slice())\n      })) + ']'\n    }\n    var keys = Object.keys(object)\n    return keys.length ? '{' + join(keys.map(function (key) {\n      return (legalKey(key) ? key : JSON.stringify(key)) + ':' + walk(object[key], filter, indent, nextIndent, seen.slice())\n    })) + '}' : '{}'\n  }\n}\n\nvar KEYWORD_REGEXP = /^(abstract|boolean|break|byte|case|catch|char|class|const|continue|debugger|default|delete|do|double|else|enum|export|extends|false|final|finally|float|for|function|goto|if|implements|import|in|instanceof|int|interface|long|native|new|null|package|private|protected|public|return|short|static|super|switch|synchronized|this|throw|throws|transient|true|try|typeof|undefined|var|void|volatile|while|with)$/\n\nfunction legalKey (string) {\n  return /^[a-z_$][0-9a-z_$]*$/gi.test(string) && !KEYWORD_REGEXP.test(string)\n}\n\n// Node.js 0.10 doesn't escape slashes in re.toString() or re.source\n// when they were not escaped initially.\n// Here we check if the workaround is needed once and for all,\n// then apply it only for non-escaped slashes.\nvar isRegExpEscaped = (new RegExp('/')).source === '\\\\/'\n\nfunction stringifyRegExp (re) {\n  if (isRegExpEscaped) {\n    return re.toString()\n  }\n  var source = re.source.replace(/\\//g, function (found, offset, str) {\n    if (offset === 0 || str[offset - 1] !== '\\\\') {\n      return '\\\\/'\n    }\n    return '/'\n  })\n  var flags = (re.global && 'g' || '') + (re.ignoreCase && 'i' || '') + (re.multiline && 'm' || '')\n  return '/' + source + '/' + flags\n}\n","import {Equalable, int} from './Equalable'\n\n/**\n * Java style map.\n */\nexport class JavaMap<K extends Equalable & {hashCodes?(): int[], like?(x: any): boolean }, V> implements Map<K, V> {\n    [Symbol.toStringTag]: 'Map' = 'Map'\n\n    toString() {\n        return '{' + Array.from(this.entries2()).map(({key, value}) => key + ':' + value).join(', ') + '}'\n    }\n\n    forEach(callbackfn: (value: V, index: K, map: Map<K, V>) => void, thisArg?: any): void {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                callbackfn.call(thisArg, value, key, this)\n            }\n        }\n    }\n\n    * keys(): IterableIterator<K> {\n        for (const bucket of this._map.values()) {\n            for (const {key} of bucket) {\n                yield key\n            }\n        }\n    }\n\n    * values(): IterableIterator<V> {\n        for (const bucket of this._map.values()) {\n            for (const {value} of bucket) {\n                yield value\n            }\n        }\n    }\n\n    protected _map: Map<int, { key: K, value: V }[]>\n    protected _size: int\n\n    constructor() {\n        this._map = new Map()\n        this._size = 0\n    }\n\n    [Symbol.iterator]() {\n        return this.entries()\n    }\n\n    set(key: K, value: V): this {\n        this.set2(key, value)\n        return this\n    }\n\n    /**\n     * Like {@link #set} except it returns true if key was new and false if the value was only updated.\n     *\n     */\n    set2(key: K, val: V): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        if (bucket) {\n            const pairIndex = bucket.findIndex(pair => pair.key.equals(key))\n            if (-1 == pairIndex) {\n                bucket.push({key: key, value: val})\n            } else {\n                bucket[pairIndex].value = val\n                return false\n            }\n        } else {\n            this._map.set(hashCode, [{key: key, value: val}])\n        }\n        this._size++\n        return true\n    }\n\n    has(key: K): boolean {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        //assert(hashCode === (hashCode | 0))\n        return undefined !== bucket && bucket.some(pair => pair.key.equals(key))\n    }\n\n    get(key: K): V | undefined {\n        const\n                hashCode = key.hashCode(),\n                bucket = this._map.get(hashCode),\n                pair = bucket && bucket.find(pair => pair.key.equals(key))\n        return pair && pair.value\n    }\n\n    getLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            const canonVal = bucket && bucket.find(x => x.key.like!(key))\n            if (canonVal) return canonVal\n        }\n    }\n\n    setLike(key: K, val: V) {\n        return !this.getLike(key) && this.set(key, val)\n    }\n\n    'delete'(key: K) {\n        const hashCode = key.hashCode(), bucket = this._map.get(hashCode)\n        if (bucket) {\n            const index = bucket.findIndex(x => x.key.equals(key))\n            if (-1 != index) {\n                if (1 == bucket.length) {\n                    this._map.delete(hashCode)\n                } else {\n                    bucket.splice(index, 1)\n                }\n                this._size--\n                return true\n            }\n        }\n        return false\n    }\n\n    deleteLike(key: K) {\n        for (const hashCode of key.hashCodes!()) {\n            const bucket = this._map.get(hashCode)\n            if (bucket) {\n                const index = bucket.findIndex(x => x.key.like!(key))\n                if (-1 != index) {\n                    const deleted = bucket[index]\n                    if (1 == bucket.length) {\n                        this._map.delete(hashCode)\n                    } else {\n                        bucket.splice(index, 1)\n                    }\n                    this._size--\n                    return deleted\n                }\n            }\n        }\n    }\n\n    * entries2(): IterableIterator<{ key: K, value: V }> {\n        for (const bucket of this._map.values()) {\n            yield* bucket\n        }\n    }\n\n    * entries(): IterableIterator<[K, V]> {\n        for (const bucket of this._map.values()) {\n            for (const {key, value} of bucket) {\n                yield [key, value]\n            }\n        }\n    }\n\n    clear() {\n        this._map.clear()\n        this._size = 0\n    }\n\n    get size() {\n        return this._size\n    }\n}\n","import { Matrix } from './Matrix'\nimport { ArrayLikeWriteAble, assert, assertInst, assertNumbers, callsce, clamp, eq, eq0, FloatArray, int } from './NLA'\nimport { V3 } from './V3'\n\nexport class Vector {\n\tconstructor(readonly v: Float64Array) {\n\t\tassertInst(Float64Array, v)\n\t}\n\n\tstatic fromFunction(dims: int, f: (dim: int) => number): Vector {\n\t\tassertNumbers(dims)\n\t\tconst e = new Float64Array(dims)\n\t\tlet i = dims\n\t\twhile (i--) {\n\t\t\te[i] = f(i)\n\t\t}\n\t\treturn new Vector(e)\n\t}\n\n\tstatic random(dims: int): Vector {\n\t\treturn Vector.fromFunction(dims, i => Math.random())\n\t}\n\n\tstatic from(f64a: Float64Array): Vector\n\tstatic from(...args: number[]): Vector\n\tstatic from(...args: any[]): Vector {\n\t\tassert(\n\t\t\targs[0] instanceof Float64Array || args.every(a => 'number' == typeof a),\n\t\t\t'args[0] instanceof Float64Array || args.every(a => \"number\" == typeof a)',\n\t\t)\n\t\treturn new Vector(args[0] instanceof Float64Array ? args[0] : Float64Array.from(args))\n\t}\n\n\tstatic Zero(dims: int): Vector {\n\t\tassertNumbers(dims)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tstatic Unit(dims: int, dir: int): Vector {\n\t\tassertNumbers(dims, dir)\n\t\tlet i = 0\n\t\tconst n = new Float64Array(dims)\n\t\twhile (i--) {\n\t\t\tn[i] = +(i == dir) // +true === 1, +false === 0\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\t/**\n\t * Pack an array of Vectors into an array of numbers (Float32Array by default).\n\t *\n\t * @param vectors source array\n\t * @param dest destination array. If provided, must be large enough to fit v3count items.\n\t * @param srcStart starting index in source array\n\t * @param destStart starting index in destination array\n\t * @param vectorCount Number of V3s to copy.\n\t * @returns Packed array.\n\t */\n\tstatic pack<T extends FloatArray = Float32Array>(\n\t\tvectors: ReadonlyArray<Vector>,\n\t\tdest?: T,\n\t\tsrcStart: number = 0,\n\t\tdestStart: number = 0,\n\t\tvectorCount: number = vectors.length - srcStart,\n\t): T {\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\n\t\tconst dim = vectors[0].dim()\n\t\tconst result = dest || (new Float32Array(dim * vectorCount) as any) // TODO\n\t\tassert(\n\t\t\tresult.length - destStart >= vectorCount * dim,\n\t\t\t'dest.length - destStart >= v3count * 3',\n\t\t\tresult.length,\n\t\t\tdestStart,\n\t\t\tvectorCount * 3,\n\t\t)\n\n\t\tlet i = vectorCount,\n\t\t\tsrcIndex = srcStart,\n\t\t\tdestIndex = destStart\n\t\twhile (i--) {\n\t\t\tconst v = vectors[srcIndex++]\n\t\t\tfor (let d = 0; d < dim; d++) {\n\t\t\t\tresult[destIndex++] = v.v[d]\n\t\t\t}\n\t\t}\n\t\treturn result\n\t}\n\n\tstatic lerp(a: Vector, b: Vector, t: number) {\n\t\tassert(a.dim() == b.dim())\n\t\tconst n = new Float64Array(a.v.length)\n\t\tlet i = a.v.length\n\t\twhile (i--) {\n\t\t\tn[i] = a.v[i] * (1 - t) + b.v[i] * t\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tstatic add(...vs: Vector[]): Vector {\n\t\tconst dim = vs[0].v.length\n\t\tconst result = new Float64Array(dim)\n\t\tlet i = vs.length\n\t\twhile (i--) {\n\t\t\tlet d = dim\n\t\t\twhile (d--) {\n\t\t\t\tresult[d] += vs[i].v[d]\n\t\t\t}\n\t\t}\n\t\treturn new Vector(result)\n\t}\n\n\t/**\n\t * Create a new 4D Vector from a V3 and a weight.\n\t * @param v3\n\t * @param weight\n\t */\n\tstatic fromV3AndWeight(v3: V3, weight: number) {\n\t\treturn new Vector(new Float64Array([v3.x * weight, v3.y * weight, v3.z * weight, weight]))\n\t}\n\n\tget x() {\n\t\treturn this.v[0]\n\t}\n\tget y() {\n\t\treturn this.v[1]\n\t}\n\tget z() {\n\t\treturn this.v[2]\n\t}\n\tget w() {\n\t\treturn this.v[3]\n\t}\n\n\t[Symbol.iterator]() {\n\t\treturn this.v[Symbol.iterator]()\n\t}\n\n\tdim(): int {\n\t\treturn this.v.length\n\t}\n\n\te(index: int): number {\n\t\tif (0 > index || index >= this.v.length) {\n\t\t\tthrow new Error('array index out of bounds')\n\t\t}\n\t\treturn this.v[index]\n\t}\n\n\tplus(vector: Vector): Vector {\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] + v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tminus(vector: Vector): Vector {\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] - v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\ttimes(factor: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * factor\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdiv(val: number): Vector {\n\t\tconst u = this.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] / val\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tdot(vector: Vector): number {\n\t\tassert(this.dim == vector.dim, 'passed vector must have the same dim')\n\t\tlet result = 0\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * v[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tcross(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst n = new Float64Array(3)\n\t\tn[0] = this.v[1] * vector.v[2] - this.v[2] * vector.v[1]\n\t\tn[1] = this.v[2] * vector.v[0] - this.v[0] * vector.v[2]\n\t\tn[2] = this.v[0] * vector.v[1] - this.v[1] * vector.v[0]\n\n\t\treturn new Vector(n)\n\t}\n\n\tschur(vector: Vector): Vector {\n\t\tassertInst(Vector, vector)\n\t\tconst u = this.v,\n\t\t\tv = vector.v\n\t\tconst n = new Float64Array(u.length)\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tn[i] = u[i] * v[i]\n\t\t}\n\t\treturn new Vector(n)\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj === this) return true\n\t\tif (obj.constructor !== Vector) return false\n\t\tif (this.v.length != obj.v.length) return false\n\t\tlet i = this.v.length\n\t\twhile (i--) {\n\t\t\tif (this.v[i] !== obj.v[i]) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tlike(obj: any): boolean {\n\t\tif (obj === this) return true\n\t\tif (obj.constructor !== Vector) return false\n\t\tif (this.v.length != obj.v.length) return false\n\t\tlet i = this.v.length\n\t\twhile (i--) {\n\t\t\tif (!eq(this.v[i], obj.v[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tmap(f: (el: number, dim: number) => number): Vector {\n\t\treturn new Vector(this.v.map(f))\n\t}\n\n\ttoString(roundFunction?: (x: number) => any): string {\n\t\troundFunction = roundFunction || (v => +v.toFixed(6))\n\t\treturn 'Vector(' + this.v.map(roundFunction).join(', ') + ')'\n\t}\n\n\ttoSource() {\n\t\treturn callsce('VV', ...this.v)\n\t}\n\n\tangleTo(vector: Vector): number {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn Math.acos(clamp(this.dot(vector) / this.length() / vector.length(), -1, 1))\n\t}\n\n\t/**\n\t * Returns true iff this is parallel to vector, using eq\n\t * Throw a DebugError\n\t * - if vector is not a Vector or\n\t * - if this has a length of 0 or\n\t * - if vector has a length of 0\n\t */\n\tisParallelTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\n\t\t// in both cases the vectors are paralle, so check if abs(a . b) == |a|*|b|\n\t\treturn eq(Math.sqrt(this.lengthSquared() * vector.lengthSquared()), Math.abs(this.dot(vector)))\n\t}\n\n\tisPerpendicularTo(vector: Vector): boolean {\n\t\tassertInst(Vector, vector)\n\t\tassert(!this.isZero(), '!this.likeO()')\n\t\tassert(!vector.isZero(), '!vector.likeO()')\n\t\treturn eq0(this.dot(vector))\n\t}\n\n\t/**\n\t * Returns true iff the length of this vector is 0, as returned by NLA.isZero.\n\t * Definition: Vector.prototype.isZero = () => NLA.isZero(this.length())\n\t */\n\tisZero(): boolean {\n\t\treturn eq0(this.length())\n\t}\n\n\t/*/ Returns the length of this Vector, i.e. the euclidian norm.*/\n\tlength(): number {\n\t\treturn Math.hypot.apply(undefined, this.v)\n\t\t//return Math.sqrt(this.lengthSquared())\n\t}\n\n\tlengthSquared(): number {\n\t\tlet result = 0\n\t\tconst u = this.v\n\t\tlet i = u.length\n\t\twhile (i--) {\n\t\t\tresult += u[i] * u[i]\n\t\t}\n\t\treturn result\n\t}\n\n\t/**\n\t * Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\n\t */\n\tunit(): Vector {\n\t\tconst length = this.length()\n\t\tif (eq0(length)) {\n\t\t\tthrow new Error('cannot normalize zero vector')\n\t\t}\n\t\treturn this.div(this.length())\n\t}\n\n\t/**\n\t * Documentation stub. You want {@link unit}\n\t */\n\tnormalized(): V3 {\n\t\tthrow new Error('documentation stub. use .unit()')\n\t}\n\n\tasRowMatrix(): Matrix {\n\t\treturn new Matrix(this.v.length, 1, this.v)\n\t}\n\n\tasColMatrix(): Matrix {\n\t\treturn new Matrix(1, this.v.length, this.v)\n\t}\n\n\t/**\n\t * Returns a new Vector which is the projection of this vector onto the passed vector.\n\t * @example\n\t * VV(3, 4).projectedOn(VV(1, 0)) // returns VV(3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(2, 0)) // returns VV(3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(-1, 0)) // returns VV(-3, 0)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(0, 1)) // returns VV(0, 4)\n\t * @example\n\t * VV(3, 4).projectedOn(VV(1, 1)) // returns\n\t */\n\tprojectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn b.times(this.dot(b) / b.dot(b))\n\t}\n\n\trejectedOn(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\n\t}\n\n\tto(a: Vector): Vector {\n\t\treturn a.minus(this)\n\t}\n\n\t/**\n\t * Returns true iff the length() of this vector is equal to 'length', using equals\n\t * E.g. NLA.V(3, 4).hasLength(5) === true\n\t * NLA.V(1, 1).hasLength(1) === false\n\t */\n\thasLength(length: number): boolean {\n\t\tassertNumbers(length)\n\t\treturn eq(length, this.length())\n\t}\n\n\tV3(): V3 {\n\t\t//assert(this.dim() == 3)\n\t\treturn new V3(this.v[0], this.v[1], this.v[2])\n\t}\n\n\t/**\n\t * Project into 3 dimensions.\n\t */\n\tp3(): V3 {\n\t\tassert(this.v.length == 4)\n\t\tconst w = this.v[3]\n\t\treturn new V3(this.v[0] / w, this.v[1] / w, this.v[2] / w)\n\t}\n\n\ttransposed() {\n\t\treturn new Matrix(this.v.length, 1, this.v)\n\t}\n}\n\nexport function VV(...values: number[]) {\n\treturn new Vector(new Float64Array(values))\n}\n\nexport function vArrGet(vArr: ArrayLike<number>, dim: int, i: int) {\n\tassert(vArr.length % dim == 0)\n\treturn new Vector(Float64Array.prototype.slice.call(vArr, i * dim, (i + 1) * dim))\n}\n\nexport function vArrSet(vArr: ArrayLikeWriteAble<number>, i: int, vector: Vector) {\n\tconst dim = vector.dim()\n\tassert(vArr.length % dim == 0)\n\tlet d = dim\n\twhile (d--) {\n\t\tvArr[i * dim + d] = vector.v[d]\n\t}\n}\n","import { Equalable } from 'javasetmap.ts'\n\nimport {\n\tarrayCopy,\n\tarrayCopyBlocks,\n\tarrayCopyStep,\n\tarrayFromFunction,\n\tarraySwap,\n\tassert,\n\tassertf,\n\tassertInst,\n\tassertInts,\n\tassertNumbers,\n\tassertVectors,\n\teq,\n\teq0,\n\tFloatArray,\n\tfloatHashCode,\n\tint,\n\tNLA_PRECISION,\n} from './NLA'\nimport { Vector } from './Vector'\n\nexport class Matrix implements Equalable {\n\tconstructor(public width: int, public height: int, public readonly m: Float64Array) {\n\t\tassertInts(width, height)\n\t\tassertf(() => 0 < width)\n\t\tassertf(() => 0 < height)\n\t\tassert(width * height == m.length, 'width * height == m.length', width, height, m.length)\n\t}\n\n\tstatic random(width: int, height: int): Matrix {\n\t\treturn Matrix.fromFunction(width, height, () => Math.random())\n\t}\n\n\tstatic fromFunction(width: int, height: int, f: (row: int, col: int, elIndex: int) => number): Matrix {\n\t\tconst m = new Float64Array(height * width)\n\t\tlet elIndex = height * width\n\t\twhile (elIndex--) {\n\t\t\tm[elIndex] = f(Math.floor(elIndex / width), elIndex % width, elIndex)\n\t\t}\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tstatic identityN(dim: int): Matrix {\n\t\tassertInts(dim)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Arrays are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= dim + 1\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\t/**\n\t * Create new dim x dim matrix equal to an identity matrix with rows/colums i and k swapped. Note that i and k\n\t * are 0-indexed.\n\t */\n\tstatic permutation(dim: int, i: int, k: int): Matrix {\n\t\tassertInts(dim, i, k)\n\t\tassertf(() => 0 <= i && i < dim)\n\t\tassertf(() => 0 <= k && k < dim)\n\t\tconst m = new Float64Array(dim * dim)\n\t\t// Float64Array are init to 0\n\t\tlet elIndex = dim * (dim + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= dim + 1\n\t\t\tm[elIndex] = 1\n\t\t}\n\t\tm[i * dim + i] = 0\n\t\tm[k * dim + k] = 0\n\t\tm[i * dim + k] = 1\n\t\tm[k * dim + i] = 1\n\t\treturn new Matrix(dim, dim, m)\n\t}\n\n\tstatic fromRowArrays(...rowArrays: ArrayLike<number>[]): Matrix {\n\t\tif (0 == rowArrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst height = rowArrays.length\n\t\tconst width = rowArrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopy(rowArrays[0], 0, m, 0, width)\n\t\tfor (let rowIndex = 1; rowIndex < height; rowIndex++) {\n\t\t\tif (rowArrays[rowIndex].length != width) {\n\t\t\t\tthrow new Error('all row arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopy(rowArrays[rowIndex], 0, m, rowIndex * width, width)\n\t\t}\n\t\treturn this.new(width, height, m)\n\t}\n\n\tstatic fromColVectors(colVectors: Vector[]): Matrix {\n\t\treturn Matrix.fromColArrays(...colVectors.map(v => v.v))\n\t}\n\n\tstatic forWidthHeight(width: int, height: int): Matrix {\n\t\treturn new Matrix(width, height, new Float64Array(width * height))\n\t}\n\n\tstatic fromColArrays(...colArrays: ArrayLike<number>[]): Matrix {\n\t\tif (0 == colArrays.length) {\n\t\t\tthrow new Error('cannot have 0 vector')\n\t\t}\n\t\tconst width = colArrays.length\n\t\tconst height = colArrays[0].length\n\t\tconst m = new Float64Array(height * width)\n\t\tarrayCopyStep(colArrays[0], 0, 1, m, 0, width, height)\n\t\tfor (let colIndex = 1; colIndex < width; colIndex++) {\n\t\t\tif (colArrays[colIndex].length != height) {\n\t\t\t\tthrow new Error('all col arrays must be the same length')\n\t\t\t}\n\t\t\tarrayCopyStep(colArrays[colIndex], 0, 1, m, colIndex, width, height)\n\t\t}\n\t\treturn this.new(width, height, m)\n\t}\n\n\tstatic product(...m4s: Matrix[]): Matrix\n\tstatic product(ms: Matrix[], result?: Matrix): Matrix\n\tstatic product(...args: any[]): Matrix {\n\t\tconst [ms, result]: [Matrix[], Matrix | undefined] = Array.isArray(args[0])\n\t\t\t? [args[0], args[1]]\n\t\t\t: [args, undefined]\n\t\tif (0 == ms.length) throw new Error(\"Can't guess matrix size.\")\n\t\tif (1 == ms.length) return Matrix.copy(ms[0], result)\n\t\treturn Matrix.copy(ms.reduce((a, b) => a.times(b)), result)\n\t}\n\n\t/**\n\t * Numerically calculate all the partial derivatives of f at x0.\n\t *\n\t * @param f\n\t * @param x0\n\t * @param fx0 f(x0), pass it if you have it already\n\t * @param EPSILON\n\t */\n\tstatic jacobi(\n\t\tf: (x: FloatArray) => ArrayLike<number>,\n\t\tx0: FloatArray,\n\t\tfx0: ArrayLike<number> = f(x0),\n\t\tEPSILON: number = 1e-6,\n\t): Matrix {\n\t\tconst jacobi = Matrix.forWidthHeight(x0.length, fx0.length)\n\t\tfor (let colIndex = 0; colIndex < x0.length; colIndex++) {\n\t\t\tx0[colIndex] += EPSILON\n\t\t\tconst fx = f(x0)\n\t\t\tfor (let rowIndex = 0; rowIndex < fx0.length; rowIndex++) {\n\t\t\t\tconst value = (fx[rowIndex] - fx0[rowIndex]) / EPSILON\n\t\t\t\tjacobi.setEl(rowIndex, colIndex, value)\n\t\t\t}\n\t\t\tx0[colIndex] -= EPSILON\n\t\t}\n\t\treturn jacobi\n\t}\n\n\tstatic copy<T extends Matrix>(src: T, result: T = src.new()): T {\n\t\tassertInst(Matrix, src, result)\n\t\tassert(src.width == result.width)\n\t\tassert(src.height == result.height)\n\t\tassert(result != src, 'result != src')\n\t\tconst s = src.m,\n\t\t\td = result.m\n\t\tlet i = s.length\n\t\twhile (i--) {\n\t\t\td[i] = s[i]\n\t\t}\n\t\treturn result\n\t}\n\n\tprotected static new(width: int, height: int, m: Float64Array) {\n\t\treturn new Matrix(width, height, m)\n\t}\n\n\tcopy(): this {\n\t\treturn Matrix.copy<this>(this)\n\t}\n\n\te(rowIndex: number, colIndex: number): number {\n\t\tassertInts(rowIndex, colIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\treturn this.m[rowIndex * this.width + colIndex]\n\t}\n\n\tsetEl(rowIndex: number, colIndex: number, val: number): void {\n\t\tassertInts(rowIndex, colIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\tassertNumbers(val)\n\t\tthis.m[rowIndex * this.width + colIndex] = val\n\t}\n\n\tplus(m: this): this {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] + m.m[i]\n\t\treturn r\n\t}\n\n\tminus(m: Matrix): Matrix {\n\t\tassert(this.width == m.width)\n\t\tassert(this.height == m.height)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] - m.m[i]\n\t\treturn r\n\t}\n\n\tmulScalar(scalar: number): this {\n\t\tassertNumbers(scalar)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] * scalar\n\t\treturn r\n\t}\n\n\tdivScalar(scalar: number): this {\n\t\tassertNumbers(scalar)\n\t\tconst r = this.new()\n\t\tlet i = this.m.length\n\t\twhile (i--) r.m[i] = this.m[i] / scalar\n\t\treturn r\n\t}\n\n\tnew(): this {\n\t\treturn new Matrix(this.width, this.height, new Float64Array(this.width * this.height)) as this\n\t}\n\n\ttoString(f?: (el: number) => string, colNames?: ReadonlyArray<string>, rowNames?: ReadonlyArray<string>): string {\n\t\tf = f || (v => v.toFixed(6))\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\n\t\tassert(!colNames || colNames.length == this.width)\n\t\tassert(!rowNames || rowNames.length == this.height)\n\t\tconst rounded: string[] = Array.from(this.m).map(f)\n\t\tconst rows = arrayFromFunction(this.height, rowIndex =>\n\t\t\trounded.slice(rowIndex * this.width, (rowIndex + 1) * this.width),\n\t\t) // select matrix row\n\t\tif (colNames) {\n\t\t\trows.unshift(Array.from(colNames))\n\t\t}\n\t\tif (rowNames) {\n\t\t\trows.forEach((row, rowIndex) => row.unshift(rowNames[rowIndex - (colNames ? 1 : 0)] || ''))\n\t\t}\n\t\tconst colWidths = arrayFromFunction(this.width, colIndex => rows.map(row => row[colIndex].length).max())\n\t\treturn rows\n\t\t\t.map((row, rowIndex) =>\n\t\t\t\trow\n\t\t\t\t\t.map((x, colIndex) => {\n\t\t\t\t\t\t// pad numbers with spaces to col width\n\t\t\t\t\t\tconst padder =\n\t\t\t\t\t\t\t(rowIndex == 0 && colNames) || (colIndex == 0 && rowNames)\n\t\t\t\t\t\t\t\t? String.prototype.padEnd\n\t\t\t\t\t\t\t\t: String.prototype.padStart\n\t\t\t\t\t\treturn padder.call(x, colWidths[colIndex])\n\t\t\t\t\t})\n\t\t\t\t\t.join('  '),\n\t\t\t)\n\t\t\t.map(x => x + '\\n')\n\t\t\t.join('') // join rows\n\t}\n\n\trow(rowIndex: int): Vector {\n\t\tassertInts(rowIndex)\n\t\tassert(0 <= rowIndex && rowIndex < this.height, 'rowIndex out of bounds ' + rowIndex)\n\t\tconst v = new Float64Array(this.width)\n\t\tarrayCopy(this.m, rowIndex * this.width, v, 0, this.width)\n\t\treturn new Vector(v)\n\t}\n\n\tcol(colIndex: int): Vector {\n\t\tassertInts(colIndex)\n\t\tassert(0 <= colIndex && colIndex < this.width, 'colIndex out of bounds ' + colIndex)\n\t\tconst v = new Float64Array(this.height)\n\t\tarrayCopyStep(this.m, colIndex, this.width, v, 0, 1, this.height)\n\t\treturn new Vector(v)\n\t}\n\n\tdim(): { width: int; height: int } {\n\t\treturn { width: this.width, height: this.height }\n\t}\n\n\tdimString(): string {\n\t\treturn this.width + 'x' + this.height\n\t}\n\n\tequals(obj: any): boolean {\n\t\tif (obj.constructor != this.constructor) return false\n\t\tif (this.width != obj.width || this.height != obj.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (this.m[elIndex] != obj.m[elIndex]) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tequalsMatrix(matrix: Matrix, precision: number = NLA_PRECISION): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\tif (this.width != matrix.width || this.height != matrix.height) return false\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (Math.abs(this.m[elIndex] - matrix.m[elIndex]) >= precision) return false\n\t\t}\n\t\treturn true\n\t}\n\n\thashCode(): int {\n\t\tlet result = 0\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tresult = result * 31 + floatHashCode(this.m[elIndex])\n\t\t}\n\t\treturn result\n\t}\n\n\t// todo rename\n\tisZero(): boolean {\n\t\tlet elIndex = this.m.length\n\t\twhile (elIndex--) {\n\t\t\tif (!eq0(this.m[elIndex])) {\n\t\t\t\treturn false\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisOrthogonal(): boolean {\n\t\treturn (\n\t\t\tthis.isSquare() &&\n\t\t\tthis.transposed()\n\t\t\t\t.times(this)\n\t\t\t\t.equalsMatrix(Matrix.identityN(this.width))\n\t\t)\n\t}\n\n\t/**\n\t * Returns L, U, P such that L * U == P * this\n\t */\n\tluDecomposition(): { L: Matrix; U: Matrix; P: Matrix } {\n\t\tassertf(() => this.isSquare(), this.dim().toSource())\n\t\tconst dim = this.width\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(dim, row => new Float64Array(dim))\n\t\tconst pRowArrays = Matrix.identityN(dim).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < dim; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0,\n\t\t\t\tpivotRowIndex = -1,\n\t\t\t\tnumberOfNonZeroRows = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < dim; rowIndex++) {\n\t\t\t\tconst el = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[colIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < dim; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < dim; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays(...lRowArrays),\n\t\t\tU: Matrix.fromRowArrays(...uRowArrays),\n\t\t\tP: Matrix.fromRowArrays(...pRowArrays),\n\t\t}\n\t}\n\n\tgauss(): { L: Matrix; U: Matrix; P: Matrix } {\n\t\tconst width = this.width,\n\t\t\theight = this.height\n\t\tconst uRowArrays = this.asRowArrays(Float64Array)\n\t\tconst lRowArrays = arrayFromFunction(height, row => new Float64Array(width))\n\t\tconst pRowArrays = Matrix.identityN(height).asRowArrays(Float64Array)\n\t\tlet currentRowIndex = 0\n\t\tfor (let colIndex = 0; colIndex < width; colIndex++) {\n\t\t\t// console.log('currentRowIndex', currentRowIndex)\t// find largest value in colIndex\n\t\t\tlet maxAbsValue = 0,\n\t\t\t\tpivotRowIndex = -1,\n\t\t\t\tnumberOfNonZeroRows = 0\n\t\t\tfor (let rowIndex = currentRowIndex; rowIndex < height; rowIndex++) {\n\t\t\t\tconst el = uRowArrays[rowIndex][colIndex]\n\t\t\t\tnumberOfNonZeroRows += +(0 != el)\n\t\t\t\tif (Math.abs(el) > maxAbsValue) {\n\t\t\t\t\tmaxAbsValue = Math.abs(el)\n\t\t\t\t\tpivotRowIndex = rowIndex\n\t\t\t\t}\n\t\t\t}\n\t\t\t// TODO: check with isZero\n\t\t\tif (0 == maxAbsValue) {\n\t\t\t\t// column contains only zeros\n\t\t\t\tcontinue\n\t\t\t}\n\t\t\tassert(-1 !== pivotRowIndex)\n\t\t\t// swap rows\n\t\t\tarraySwap(uRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(lRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tarraySwap(pRowArrays, currentRowIndex, pivotRowIndex)\n\t\t\tlRowArrays[currentRowIndex][colIndex] = 1\n\n\t\t\tif (1 < numberOfNonZeroRows) {\n\t\t\t\t// subtract pivot (now current) row from all below it\n\t\t\t\tfor (let rowIndex = currentRowIndex + 1; rowIndex < height; rowIndex++) {\n\t\t\t\t\tconst l = uRowArrays[rowIndex][colIndex] / uRowArrays[currentRowIndex][colIndex]\n\t\t\t\t\tlRowArrays[rowIndex][colIndex] = l\n\t\t\t\t\t// subtract pivot row * l from row 'rowIndex'\n\t\t\t\t\tfor (let colIndex2 = colIndex; colIndex2 < width; colIndex2++) {\n\t\t\t\t\t\tuRowArrays[rowIndex][colIndex2] -= l * uRowArrays[currentRowIndex][colIndex2]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcurrentRowIndex++ // this doesn't increase if pivot was zero\n\t\t}\n\t\treturn {\n\t\t\tL: Matrix.fromRowArrays(...lRowArrays),\n\t\t\tU: Matrix.fromRowArrays(...uRowArrays),\n\t\t\tP: Matrix.fromRowArrays(...pRowArrays),\n\t\t}\n\t}\n\n\tqrDecompositionGivensRotation(): { Q: Matrix; R: Matrix } {\n\t\t// function sigma(c: number, s: number) {\n\t\t// \tif (0 == c) {\n\t\t// \t\treturn 1\n\t\t// \t}\n\t\t// \tif (Math.abs(s) < Math.abs(c)) {\n\t\t// \t\treturn 0.5 * Math.sign(c) * s\n\t\t// \t}\n\t\t// \treturn (2 * Math.sign(s)) / c\n\t\t// }\n\t\tconst R = this.copy()\n\n\t\tfunction matrixForCS(dim: int, i: int, k: int, c: number, s: number) {\n\t\t\tconst m = Matrix.identityN(dim)\n\t\t\tm.setEl(i, i, c)\n\t\t\tm.setEl(k, k, c)\n\t\t\tm.setEl(i, k, s)\n\t\t\tm.setEl(k, i, -s)\n\t\t\treturn m\n\t\t}\n\n\t\tlet qTransposed = Matrix.identityN(this.height)\n\t\tfor (let colIndex = 0; colIndex < this.width; colIndex++) {\n\t\t\t// find largest value in colIndex\n\t\t\tfor (let rowIndex = colIndex + 1; rowIndex < this.height; rowIndex++) {\n\t\t\t\t//console.log('row ', rowIndex, 'col ', colIndex)\n\t\t\t\tconst xi = R.e(colIndex, colIndex)\n\t\t\t\tconst xk = R.e(rowIndex, colIndex)\n\t\t\t\tif (xk == 0) {\n\t\t\t\t\tcontinue\n\t\t\t\t}\n\t\t\t\tconst r = Math.hypot(xi, xk)\n\t\t\t\tconst c = xi / r\n\t\t\t\tconst s = xk / r\n\n\t\t\t\t// apply transformation on every column:\n\t\t\t\tfor (let col2 = colIndex; col2 < this.width; col2++) {\n\t\t\t\t\tconst x1 = R.e(colIndex, col2) * c + R.e(rowIndex, col2) * s\n\t\t\t\t\tconst x2 = R.e(rowIndex, col2) * c - R.e(colIndex, col2) * s\n\t\t\t\t\tR.setEl(colIndex, col2, x1)\n\t\t\t\t\tR.setEl(rowIndex, col2, x2)\n\t\t\t\t}\n\t\t\t\t//console.log('r ', r, 'c ', c, 's ', s, 'sigma', sigma(c, s))\n\t\t\t\t//console.log(this.toString(),'cs\\n', matrixForCS(this.height, colIndex, rowIndex, c, s).toString())\n\t\t\t\tqTransposed = matrixForCS(this.height, colIndex, rowIndex, c, s).times(qTransposed)\n\t\t\t}\n\t\t}\n\t\t//console.log(qTransposed.transposed().toString(), this.toString(),\n\t\t// qTransposed.transposed().times(this).toString())\n\t\treturn { Q: qTransposed.transposed(), R }\n\t}\n\n\tisPermutation(): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tif (this.m.some(value => !eq0(value) && !eq(1, value))) return false\n\n\t\tconst rows = this.asRowArrays(Array)\n\t\tif (rows.some(row => (row as number[]).filter(value => eq(1, value)).length != 1)) return false\n\n\t\tconst cols = this.asColArrays(Array)\n\t\tif (cols.some(col => (col as number[]).filter(value => eq(1, value)).length != 1)) return false\n\n\t\treturn true\n\t}\n\n\tisDiagonal(precision?: number): boolean {\n\t\tlet i = this.m.length\n\t\twhile (i--) {\n\t\t\tif (0 !== i % (this.width + 1) && !eq0(this.m[i])) return false\n\t\t}\n\t\treturn true\n\t}\n\n\tisIdentity(precision?: number): boolean {\n\t\treturn this.isLowerUnitriangular(precision) && this.isUpperTriangular(precision)\n\t}\n\n\tisUpperTriangular(precision: number = NLA_PRECISION) {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 1; rowIndex < this.height; rowIndex++) {\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex], precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisSymmetric(precision = NLA_PRECISION) {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\tconst a = this.m[rowIndex * this.width + colIndex]\n\t\t\t\tconst b = this.m[colIndex * this.width + rowIndex]\n\t\t\t\tif (!eq(a, b, precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\t/**\n\t * Returns x, so that this * x = b\n\t * More efficient than calculating the inverse for few (~ <= this.height) values\n\t */\n\tsolveLinearSystem(b: Vector): Vector {\n\t\tassertInst(Vector, b)\n\t\tconst { L, U, P } = this.luDecomposition()\n\t\tconst y = L.solveForwards(P.timesVector(b))\n\t\tconst x = U.solveBackwards(y)\n\t\treturn x\n\t}\n\n\tisLowerUnitriangular(precision: number = NLA_PRECISION): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex; colIndex < this.width; colIndex++) {\n\t\t\t\tconst el = this.m[rowIndex * this.width + colIndex]\n\t\t\t\tif (rowIndex == colIndex ? !eq(1, el, precision) : !eq0(el, precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tisLowerTriangular(precision: number = NLA_PRECISION): boolean {\n\t\tif (!this.isSquare()) return false\n\t\tfor (let rowIndex = 0; rowIndex < this.height - 1; rowIndex++) {\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\tif (!eq0(this.m[rowIndex * this.width + colIndex], precision)) {\n\t\t\t\t\treturn false\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn true\n\t}\n\n\tsolveBackwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassert(this.isUpperTriangular(), 'this.isUpperTriangular()\\n' + this.str)\n\t\tconst v = new Float64Array(this.width)\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = rowIndex + 1; colIndex < this.width; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tsolveBackwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveBackwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwardsMatrix(matrix: Matrix): Matrix {\n\t\tconst colVectors = new Array(matrix.width)\n\t\tlet i = matrix.width\n\t\twhile (i--) {\n\t\t\tcolVectors[i] = this.solveForwards(matrix.col(i))\n\t\t}\n\t\treturn Matrix.fromColVectors(colVectors)\n\t}\n\n\tsolveForwards(x: Vector): Vector {\n\t\tassertVectors(x)\n\t\tassert(this.height == x.dim(), 'this.height == x.dim()')\n\t\tassertf(() => this.isLowerTriangular(), this.toString())\n\t\tconst v = new Float64Array(this.width)\n\t\tfor (let rowIndex = 0; rowIndex < this.height; rowIndex++) {\n\t\t\tlet temp = x.v[rowIndex]\n\t\t\tfor (let colIndex = 0; colIndex < rowIndex; colIndex++) {\n\t\t\t\ttemp -= v[colIndex] * this.e(rowIndex, colIndex)\n\t\t\t}\n\t\t\tv[rowIndex] = temp / this.e(rowIndex, rowIndex)\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\t/**\n\t * Calculates rank of matrix.\n\t * Number of linearly independant row/column vectors.\n\t * Is equal to the unmber of dimensions the image of the affine transformation represented this matrix has.\n\t */\n\trank(): int {\n\t\tconst U = this.gauss().U\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex-- && U.row(rowIndex).isZero()) {}\n\t\treturn rowIndex + 1\n\t}\n\n\trowsIndependent(): boolean {\n\t\treturn this.height == this.rank()\n\t}\n\n\tcolsIndependent(): boolean {\n\t\treturn this.width == this.rank()\n\t}\n\n\tasRowArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T = Float64Array as any): T[] {\n\t\treturn arrayFromFunction(this.height, rowIndex => this.rowArray(rowIndex, arrayConstructor))\n\t}\n\n\tasColArrays<T extends FloatArray>(arrayConstructor: new (length: int) => T = Float64Array as any): T[] {\n\t\treturn arrayFromFunction(this.width, colIndex => this.colArray(colIndex, arrayConstructor))\n\t}\n\n\trowArray<T extends FloatArray>(rowIndex: int, arrayConstructor: new (length: int) => T = Float64Array as any): T {\n\t\tconst result = new arrayConstructor(this.width)\n\t\treturn arrayCopy(this.m, rowIndex * this.width, result, 0, this.width)\n\t\treturn result\n\t}\n\n\tcolArray<T extends FloatArray>(colIndex: int, arrayConstructor: new (length: int) => T = Float64Array as any): T {\n\t\tconst result = new arrayConstructor(this.width)\n\t\tarrayCopyStep(this.m, colIndex, this.height, result, 0, 1, this.height)\n\t\treturn result\n\t}\n\n\tsubMatrix(firstColIndex: int, subWidth: int, firstRowIndex: int, subHeight: int): Matrix {\n\t\tassert(0 < firstColIndex && 0 < subWidth && 0 < firstRowIndex && 0 < subHeight)\n\t\tassert(firstColIndex + subWidth <= this.width && firstRowIndex + subHeight <= this.height)\n\t\tconst m = new Float64Array(subWidth * subHeight)\n\t\tarrayCopyBlocks(this.m, firstColIndex, this.width, m, 0, subWidth, subHeight, subWidth)\n\t\treturn new Matrix(subWidth, subHeight, m)\n\t}\n\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): Matrix {\n\t\treturn new Matrix(this.width, this.height, this.m.map(fn))\n\t}\n\n\tdimEquals(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.width && this.height == matrix.height\n\t}\n\n\tinversed(): Matrix {\n\t\tif (this.isSquare()) {\n\t\t\tif (2 == this.width) return this.inversed2()\n\t\t\tif (3 == this.width) return this.inversed3()\n\t\t\tif (4 == this.width) return this.inversed4()\n\t\t}\n\t\tconst { L, U, P } = this.luDecomposition()\n\t\tconst y = L.solveForwardsMatrix(P)\n\t\tconst inverse = U.solveBackwardsMatrix(y)\n\t\treturn inverse\n\t}\n\n\tinversed2(): Matrix {\n\t\tassertf(() => 2 == this.width && 2 == this.height)\n\t\tconst result = Matrix.forWidthHeight(2, 2),\n\t\t\tm = this.m,\n\t\t\tr = result.m\n\n\t\tconst det = m[0] * m[3] - m[1] * r[2]\n\n\t\tr[0] = m[3] / det\n\t\tr[1] = -m[2] / det\n\n\t\tr[2] = -m[1] / det\n\t\tr[3] = m[0] / det\n\n\t\treturn result\n\t}\n\n\tinversed3(result = Matrix.forWidthHeight(3, 3)): Matrix {\n\t\tassertInst(Matrix, result)\n\t\tassertf(() => 3 == this.width && 3 == this.height)\n\t\tassertf(() => 3 == result.width && 3 == result.height)\n\t\tassert(() => this != result)\n\t\tconst m = this.m,\n\t\t\tr = result.m\n\n\t\tr[0] = m[4] * m[8] - m[5] * m[7]\n\t\tr[1] = -m[1] * m[8] + m[2] * m[7]\n\t\tr[2] = m[1] * m[5] - m[2] * m[4]\n\n\t\tr[3] = -m[3] * m[8] + m[5] * m[6]\n\t\tr[4] = m[0] * m[8] - m[2] * m[6]\n\t\tr[5] = -m[0] * m[5] + m[2] * m[3]\n\n\t\tr[6] = m[3] * m[7] - m[4] * m[6]\n\t\tr[7] = -m[0] * m[7] + m[1] * m[6]\n\t\tr[8] = m[0] * m[4] - m[1] * m[3]\n\n\t\tconst det = m[0] * r[0] + m[1] * r[3] + m[2] * r[6]\n\t\tlet i = 9\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\n\t\treturn result\n\t}\n\n\t// prettier-ignore\n\tinversed4(result: Matrix = Matrix.forWidthHeight(4, 4)): Matrix {\n\t\tassertInst(Matrix, result)\n\t\tassertf(() => 4 == this.width && 4 == this.height)\n\t\tassertf(() => 4 == result.width && 4 == result.height)\n\t\tassert(() => this != result)\n\t\tconst m = this.m,\n\t\t\tr = result.m\n\n\t\t// first compute transposed cofactor matrix:\n\t\t// cofactor of an element is the determinant of the 3x3 matrix gained by removing the column and row belonging\n\t\t// to the element\n\t\tr[0] = m[5] * m[10] * m[15] - m[5] * m[14] * m[11] - m[6] * m[9] * m[15]\n\t\t\t+ m[6] * m[13] * m[11] + m[7] * m[9] * m[14] - m[7] * m[13] * m[10]\n\t\tr[1] = -m[1] * m[10] * m[15] + m[1] * m[14] * m[11] + m[2] * m[9] * m[15]\n\t\t\t- m[2] * m[13] * m[11] - m[3] * m[9] * m[14] + m[3] * m[13] * m[10]\n\t\tr[2] = m[1] * m[6] * m[15] - m[1] * m[14] * m[7] - m[2] * m[5] * m[15]\n\t\t\t+ m[2] * m[13] * m[7] + m[3] * m[5] * m[14] - m[3] * m[13] * m[6]\n\t\tr[3] = -m[1] * m[6] * m[11] + m[1] * m[10] * m[7] + m[2] * m[5] * m[11]\n\t\t\t- m[2] * m[9] * m[7] - m[3] * m[5] * m[10] + m[3] * m[9] * m[6]\n\n\n\t\tr[4] = -m[4] * m[10] * m[15] + m[4] * m[14] * m[11] + m[6] * m[8] * m[15]\n\t\t\t- m[6] * m[12] * m[11] - m[7] * m[8] * m[14] + m[7] * m[12] * m[10]\n\t\tr[5] = m[0] * m[10] * m[15] - m[0] * m[14] * m[11] - m[2] * m[8] * m[15]\n\t\t\t+ m[2] * m[12] * m[11] + m[3] * m[8] * m[14] - m[3] * m[12] * m[10]\n\t\tr[6] = -m[0] * m[6] * m[15] + m[0] * m[14] * m[7] + m[2] * m[4] * m[15]\n\t\t\t- m[2] * m[12] * m[7] - m[3] * m[4] * m[14] + m[3] * m[12] * m[6]\n\t\tr[7] = m[0] * m[6] * m[11] - m[0] * m[10] * m[7] - m[2] * m[4] * m[11]\n\t\t\t+ m[2] * m[8] * m[7] + m[3] * m[4] * m[10] - m[3] * m[8] * m[6]\n\n\n\t\tr[8] = m[4] * m[9] * m[15] - m[4] * m[13] * m[11] - m[5] * m[8] * m[15]\n\t\t\t+ m[5] * m[12] * m[11] + m[7] * m[8] * m[13] - m[7] * m[12] * m[9]\n\t\tr[9] = -m[0] * m[9] * m[15] + m[0] * m[13] * m[11] + m[1] * m[8] * m[15]\n\t\t\t- m[1] * m[12] * m[11] - m[3] * m[8] * m[13] + m[3] * m[12] * m[9]\n\t\tr[10] = m[0] * m[5] * m[15] - m[0] * m[13] * m[7] - m[1] * m[4] * m[15]\n\t\t\t+ m[1] * m[12] * m[7] + m[3] * m[4] * m[13] - m[3] * m[12] * m[5]\n\t\tr[11] = -m[0] * m[5] * m[11] + m[0] * m[9] * m[7] + m[1] * m[4] * m[11]\n\t\t\t- m[1] * m[8] * m[7] - m[3] * m[4] * m[9] + m[3] * m[8] * m[5]\n\n\n\t\tr[12] = -m[4] * m[9] * m[14] + m[4] * m[13] * m[10] + m[5] * m[8] * m[14]\n\t\t\t- m[5] * m[12] * m[10] - m[6] * m[8] * m[13] + m[6] * m[12] * m[9]\n\t\tr[13] = m[0] * m[9] * m[14] - m[0] * m[13] * m[10] - m[1] * m[8] * m[14]\n\t\t\t+ m[1] * m[12] * m[10] + m[2] * m[8] * m[13] - m[2] * m[12] * m[9]\n\t\tr[14] = -m[0] * m[5] * m[14] + m[0] * m[13] * m[6] + m[1] * m[4] * m[14]\n\t\t\t- m[1] * m[12] * m[6] - m[2] * m[4] * m[13] + m[2] * m[12] * m[5]\n\t\tr[15] = m[0] * m[5] * m[10] - m[0] * m[9] * m[6] - m[1] * m[4] * m[10]\n\t\t\t+ m[1] * m[8] * m[6] + m[2] * m[4] * m[9] - m[2] * m[8] * m[5]\n\n\t\t// calculate determinant using laplace expansion (cf https://en.wikipedia.org/wiki/Laplace_expansion),\n\t\t// as we already have the cofactors. We multiply a column by a row as the cofactor matrix is transposed.\n\t\tconst det = m[0] * r[0] + m[1] * r[4] + m[2] * r[8] + m[3] * r[12]\n\t\t// assert(!isZero(det), 'det may not be zero, i.e. the matrix is not invertible')\n\t\tlet i = 16\n\t\twhile (i--) {\n\t\t\tr[i] /= det\n\t\t}\n\t\treturn result\n\t}\n\n\tcanMultiply(matrix: Matrix): boolean {\n\t\tassertInst(Matrix, matrix)\n\t\treturn this.width == matrix.height\n\t}\n\n\ttimes(matrix: Matrix): Matrix {\n\t\tassertInst(Matrix, matrix)\n\t\tassert(this.canMultiply(matrix), `Cannot multiply this {this.dimString()} by matrix {matrix.dimString()}`)\n\t\tconst nWidth = matrix.width,\n\t\t\tnHeight = this.height,\n\t\t\tn = this.width\n\t\tconst nM = new Float64Array(nWidth * nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet nColIndex = nWidth\n\t\t\twhile (nColIndex--) {\n\t\t\t\tlet result = 0\n\t\t\t\tlet i = n\n\t\t\t\twhile (i--) {\n\t\t\t\t\tresult += this.m[nRowIndex * n + i] * matrix.m[i * nWidth + nColIndex]\n\t\t\t\t}\n\t\t\t\tnM[nRowIndex * nWidth + nColIndex] = result\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(nWidth, nHeight, nM)\n\t}\n\n\ttimesVector(v: Vector): Vector {\n\t\tassertVectors(v)\n\t\tassert(this.width == v.dim())\n\t\tconst nHeight = this.height,\n\t\t\tn = this.width\n\t\tconst nM = new Float64Array(nHeight)\n\t\tlet nRowIndex = nHeight\n\t\twhile (nRowIndex--) {\n\t\t\tlet result = 0\n\t\t\tlet i = n\n\t\t\twhile (i--) {\n\t\t\t\tresult += this.m[nRowIndex * n + i] * v.v[i]\n\t\t\t}\n\t\t\tnM[nRowIndex] = result\n\t\t}\n\t\treturn new Vector(nM)\n\t}\n\n\ttransposed(): Matrix {\n\t\tconst tWidth = this.height,\n\t\t\ttHeight = this.width\n\t\tconst tM = new Float64Array(tWidth * tHeight)\n\t\tlet tRowIndex = tHeight\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = tWidth\n\t\t\twhile (tColIndex--) {\n\t\t\t\ttM[tRowIndex * tWidth + tColIndex] = this.m[tColIndex * tHeight + tRowIndex]\n\t\t\t}\n\t\t}\n\t\treturn new Matrix(tWidth, tHeight, tM)\n\t}\n\n\t/**\n\t * In-place transpose.\n\t */\n\ttranspose(): void {\n\t\tconst h = this.height,\n\t\t\tw = this.width,\n\t\t\ttM = this.m\n\t\tlet tRowIndex = h\n\t\twhile (tRowIndex--) {\n\t\t\tlet tColIndex = Math.min(tRowIndex, w)\n\t\t\twhile (tColIndex--) {\n\t\t\t\tconst temp = tM[tRowIndex * w + tColIndex]\n\t\t\t\ttM[tRowIndex * w + tColIndex] = tM[tColIndex * h + tRowIndex]\n\t\t\t\ttM[tColIndex * h + tRowIndex] = temp\n\t\t\t}\n\t\t}\n\t\tthis.width = h\n\t\tthis.height = w\n\t}\n\n\tisSquare(): boolean {\n\t\treturn this.height == this.width\n\t}\n\n\tdiagonal(): Vector {\n\t\tif (!this.isSquare()) {\n\t\t\tthrow new Error('!!')\n\t\t}\n\t\tconst v = new Float64Array(this.width)\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\tlet vIndex = this.width\n\t\twhile (vIndex--) {\n\t\t\telIndex -= this.width + 1\n\t\t\tv[vIndex] = this.m[elIndex]\n\t\t}\n\t\treturn new Vector(v)\n\t}\n\n\tmaxEl(): number {\n\t\treturn Math.max.apply(undefined, this.m)\n\t}\n\n\tminEl(): number {\n\t\treturn Math.min.apply(undefined, this.m)\n\t}\n\n\tmaxAbsColSum(): number {\n\t\tlet result = 0\n\t\tlet colIndex = this.width\n\t\twhile (colIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet rowIndex = this.height\n\t\t\twhile (rowIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tmaxAbsRowSum(): number {\n\t\tlet result = 0\n\t\tlet rowIndex = this.height\n\t\twhile (rowIndex--) {\n\t\t\tlet absSum = 0\n\t\t\tlet colIndex = this.width\n\t\t\twhile (colIndex--) {\n\t\t\t\tabsSum += Math.abs(this.m[rowIndex * this.width + colIndex])\n\t\t\t}\n\t\t\tresult = Math.max(result, absSum)\n\t\t}\n\t\treturn result\n\t}\n\n\tgetTriangularDeterminant(): number {\n\t\tassert(this.isUpperTriangular() || this.isLowerTriangular(), 'not a triangular matrix')\n\n\t\tlet product = 1\n\t\tlet elIndex = this.width * (this.width + 1)\n\t\twhile (elIndex) {\n\t\t\telIndex -= this.width + 1\n\t\t\tproduct *= this.m[elIndex]\n\t\t}\n\t\treturn product\n\t}\n\n\t/**\n\t * Calculates the determinant by first calculating the LU decomposition. If you already have that, use\n\t * U.getTriangularDeterminant()\n\t */\n\tgetDeterminant(): number {\n\t\t// PA = LU\n\t\t// det(A) * det(B) = det(A * B)\n\t\t// det(P) == 1 (permutation matrix)\n\t\t// det(L) == 1 (main diagonal is 1s\n\t\t// =>  det(A) == det(U)\n\t\treturn this.luDecomposition().U.getTriangularDeterminant()\n\t}\n\n\thasFullRank(): boolean {\n\t\treturn Math.min(this.width, this.height) == this.rank()\n\t}\n\n\tpermutationAsIndexMap(): int[] {\n\t\tassertf(() => this.isPermutation())\n\t\tconst result = new Array(this.height)\n\t\tlet i = this.height\n\t\twhile (i--) {\n\t\t\tconst searchIndexStart = i * this.width\n\t\t\tlet searchIndex = searchIndexStart\n\t\t\twhile (this.m[searchIndex] < 0.5) searchIndex++\n\t\t\tresult[i] = searchIndex - searchIndexStart\n\t\t}\n\t\treturn result\n\t}\n\n\tgetDependentRowIndexes(gauss: { L: Matrix; U: Matrix; P: Matrix } = this.gauss()): int[] {\n\t\tconst { L, U, P } = gauss\n\t\t// rows which end up as zero vectors in U are not linearly independent\n\t\tconst dependents = new Array(this.height)\n\t\tlet uRowIndex = this.height\n\t\twhile (uRowIndex--) {\n\t\t\tconst uRow = U.row(uRowIndex)\n\t\t\tif (uRow.length() < NLA_PRECISION) {\n\t\t\t\tdependents[uRowIndex] = true\n\t\t\t} else {\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t\t// figure out from which other rows the rows which end up as zero vectors are created by\n\t\tlet lRowIndex = this.height\n\t\twhile (lRowIndex--) {\n\t\t\tif (dependents[lRowIndex]) {\n\t\t\t\tlet lColIndex = Math.min(lRowIndex, this.width)\n\t\t\t\twhile (lColIndex--) {\n\t\t\t\t\tif (0 !== L.e(lRowIndex, lColIndex)) {\n\t\t\t\t\t\tdependents[lColIndex] = true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tconsole.log('m\\n', this.toString(x => '' + x))\n\t\tconsole.log('L\\n', L.toString(x => '' + x))\n\t\tconsole.log('U\\n', U.toString(x => '' + x))\n\t\tconsole.log('P\\n', P.toString(x => '' + x))\n\t\t// gauss algorithm permutes the order of the rows, so map our results back to the original indices\n\t\tconst indexMap = P.permutationAsIndexMap()\n\t\tconst dependentRowIndexes = dependents.map((b, index) => b && indexMap[index]).filter(x => x != undefined)\n\t\treturn dependentRowIndexes\n\t}\n\n\tlerp(b: Matrix, t: number, result = this.new()): this {\n\t\tassertInst(Matrix, b, result)\n\t\tassertNumbers(t)\n\t\tassert(this.width == b.width && this.height == b.height)\n\t\tconst s = 1 - t\n\t\tlet i = this.m.length\n\t\twhile (i--) {\n\t\t\tresult.m[i] = s * this.m[i] + t * b.m[i]\n\t\t}\n\t\treturn result\n\t}\n}\n","import 'tosource'\n\nimport { Matrix } from './Matrix'\nimport { V, V3 } from './V3'\nimport { Vector } from './Vector'\n\nconst { abs, sign } = Math\nexport const PI = Math.PI\nexport const TAU = 2 * PI\nexport type int = number\nexport type colorstr = string // e.g. '#abcdef\nexport type raddd = number\nexport type FloatArray = Float32Array | Float64Array | number[]\n\n/** @define {boolean} */\nexport const NLA_DEBUG = process.env.NODE_ENV != 'production'\nexport const NLA_PRECISION = 1 / (1 << 26)\nconsole.log('NLA_PRECISION', NLA_PRECISION)\nconsole.log('NLA_DEBUG', NLA_DEBUG)\n\nlet oldConsole: any = undefined\nexport function disableConsole() {\n\toldConsole = console.log\n\tconsole.log = function() {}\n}\nexport function enableConsole() {\n\tif (oldConsole) {\n\t\tconsole.log = oldConsole\n\t}\n}\nexport function hasConstructor<T>(instance: any, cons: { new (...args: any[]): T }): instance is T {\n\treturn instance.constructor == cons\n}\n\nexport function getIntervals(ts: number[], min: number, max: number): [number, number][] {\n\tts.sort((a, b) => a - b)\n\tif (!eq(ts[0], min)) {\n\t\tts.splice(0, 0, min)\n\t}\n\tif (!eq(ts.last, max)) {\n\t\tts.push(max)\n\t}\n\treturn arrayFromFunction(ts.length - 1, i => [ts[i], ts[i + 1]] as [number, number])\n}\n\nexport function assertVectors(...vectors: (Vector | V3)[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\tif (!(arguments[i] instanceof V3 || arguments[i] instanceof Vector)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'assertVectors arguments[' +\n\t\t\t\t\t\ti +\n\t\t\t\t\t\t'] is not a vector. ' +\n\t\t\t\t\t\ttypeof arguments[i] +\n\t\t\t\t\t\t' == typeof ' +\n\t\t\t\t\t\targuments[i],\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertInst<T>(what: Function & { prototype: T }, ...objs: T[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < objs.length; i++) {\n\t\t\tif (!(objs[i] instanceof what)) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t'assertInst objs[' +\n\t\t\t\t\t\ti +\n\t\t\t\t\t\t'] is not a ' +\n\t\t\t\t\t\twhat.prototype.name +\n\t\t\t\t\t\t'. ' +\n\t\t\t\t\t\tobjs[i].constructor.name +\n\t\t\t\t\t\tobjs[i],\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertNumbers(...numbers: number[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < numbers.length; i++) {\n\t\t\tif ('number' !== typeof numbers[i]) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`assertNumbers arguments[${i}] is not a number. ${typeof numbers[i]} == typeof ${numbers[i]}`,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assertInts(...numbers: number[]) {\n\tif (NLA_DEBUG) {\n\t\tfor (let i = 0; i < numbers.length; i++) {\n\t\t\tif ('number' !== typeof numbers[i] || numbers[i] % 1 !== 0) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t`assertNumbers arguments[${i}] is not an int. ${typeof numbers[i]} == typeof ${numbers[i]}`,\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\t}\n\treturn true\n}\nexport function assert(value: any, ...messages: (any | (() => string))[]): value is true {\n\tif (NLA_DEBUG && !value) {\n\t\tthrow new Error(\n\t\t\t'assert failed: ' +\n\t\t\t\tmessages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'),\n\t\t)\n\t}\n\treturn true\n}\nexport function assertNever(value?: never): never {\n\tthrow new Error()\n}\nexport function assertf(f: () => any, ...messages: (any | (() => any))[]) {\n\tif (NLA_DEBUG && !f()) {\n\t\tthrow new Error(\n\t\t\t'assertf failed: ' +\n\t\t\t\tf.toString() +\n\t\t\t\tmessages.map(message => ('function' === typeof message ? message() : message || '')).join('\\n'),\n\t\t)\n\t}\n}\n\nexport function lerp(a: number, b: number, t: number) {\n\treturn a * (1 - t) + b * t\n}\nexport function lerpInv(a: number, b: number, t: number) {\n\treturn (t - a) / (b - a)\n}\nconst originalNumberToString = Number.prototype.toString\nNumber.prototype.toString = function(radix) {\n\tif (PI == this) {\n\t\treturn 'PI'\n\t}\n\treturn originalNumberToString.call(this, radix)\n}\n\nexport const eq0 = (x: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x) <= EPS\nexport const eq = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => Math.abs(x - y) <= EPS\nexport const lt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y < -EPS\nexport const gt = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x < -EPS\nexport const le = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => x - y <= EPS\nexport const ge = (x: number, y: number, EPS: number = NLA_PRECISION): boolean => y - x <= EPS\n\nexport const eqAngle = (x: number, y: number): boolean => zeroAngle(x - y)\nexport const zeroAngle = (x: number): boolean =>\n\t((x % (2 * Math.PI)) + 2 * Math.PI + NLA_PRECISION) % (2 * Math.PI) < 2 * NLA_PRECISION\nexport const snap = (x: number, to: number): number => (Math.abs(x - to) <= NLA_PRECISION ? to : x)\nexport const snap2 = (x: number, ...to: number[]): number =>\n\tto.reduce((x, to) => (Math.abs(x - to) <= NLA_PRECISION ? to : x), x)\nexport const snapEPS = (x: number, EPS: number, ...to: number[]): number =>\n\tto.reduce((x, to) => (Math.abs(x - to) <= EPS ? to : x), x)\nexport const snap0 = (x: number, EPS = NLA_PRECISION): number => (Math.abs(x) <= EPS ? 0 : x)\nexport const canonAngle = (x: number): number => ((x % (2 * Math.PI)) + 2 * Math.PI) % (2 * Math.PI)\n\n/** @deprecated */ export const eq02 = eq0\n/** @deprecated */ export const eq2 = eq\n\n/**\n * Decimal adjustment of a number.\n *\n * @param f  The type of adjustment.\n * @param value The number.\n * @param exp The exponent (the 10 logarithm of the adjustment base).\n * @returns The adjusted value.\n */\nfunction decimalAdjust(f: (x: number) => number, value: number, exp: number): number {\n\t// If the exp is undefined or zero...\n\tif (typeof exp === 'undefined' || +exp === 0) {\n\t\treturn f(value)\n\t}\n\tvalue = +value\n\texp = +exp\n\t// If the value is not a number or the exp is not an integer...\n\tif (isNaN(value) || !(typeof exp === 'number' && exp % 1 === 0)) {\n\t\treturn NaN\n\t}\n\t// Shift\n\tlet vs = value.toString().split('e')\n\tvalue = f(+(vs[0] + 'e' + (vs[1] ? +vs[1] - exp : -exp)))\n\t// Shift back\n\tvs = value.toString().split('e')\n\treturn +(vs[0] + 'e' + (vs[1] ? +vs[1] + exp : exp))\n}\n\nexport const round10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.round)\nexport const floor10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.floor)\nexport const ceil10: (value: number, exp: number) => number = decimalAdjust.bind(undefined, Math.ceil)\n\nexport const GOLDEN_RATIO = (1 + Math.sqrt(5)) / 2\n\nexport function mod(a: number, b: number) {\n\treturn ((a % b) + b) % b\n}\nexport function arraySwap(arr: any[], i: int, j: int) {\n\tconst temp = arr[i]\n\tarr[i] = arr[j]\n\tarr[j] = temp\n}\nexport type ArrayLikeWriteAble<T> = {\n\treadonly length: int\n\t[index: number]: T\n}\nexport function arrayCopy<T, A extends ArrayLikeWriteAble<T>>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tdst: A,\n\tdstart: int,\n\tlength: int,\n): A {\n\tassertInts(sstart, dstart, length)\n\tdstart += length\n\tlength += sstart\n\twhile (length-- > sstart) {\n\t\tdst[--dstart] = src[length]\n\t}\n\treturn dst\n}\nexport function clamp(val: number, min: number, max: number) {\n\tassertNumbers(val, min, max)\n\treturn Math.max(min, Math.min(max, val))\n}\n\nexport function between(val: number, min: number, max: number) {\n\tassertNumbers(val, min, max)\n\treturn min <= val && val <= max\n}\nexport function fuzzyBetween(val: number, min: number, max: number) {\n\treturn le(min, val) && le(val, max)\n}\n\nexport function mapPush<T, U>(map: Map<T, U[]>, key: T, val: U) {\n\tconst array = map.get(key)\n\tif (array) {\n\t\tarray.push(val)\n\t} else {\n\t\tmap.set(key, [val])\n\t}\n}\n\n/**\n * Copies a number of items from one array to another, with a definable step size between items in the source and\n * destination array.\n *\n * @param src The source array.\n * @param sstart The location of the first item in the source array.\n * @param sstep The offset between items in the source array.\n * @param dst The destination array.\n * @param dstart The location of the first item in the destination array.\n * @param dstep The offset between items in the destination array.\n * @param count The number of items to copy.\n */\nexport function arrayCopyStep<T>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tsstep: int,\n\tdst: ArrayLikeWriteAble<T>,\n\tdstart: int,\n\tdstep: int,\n\tcount: int,\n): void {\n\tlet srcIndex = sstart + count * sstep\n\tlet dIndex = dstart + count * dstep\n\twhile (srcIndex > sstart) {\n\t\tdst[(dIndex -= dstep)] = src[(srcIndex -= sstep)]\n\t}\n}\n\n/**\n * Copies a number of contiguous, evenly-spaced blocks from one array to another.\n *\n * @param src The source array.\n * @param sstart The start of the first block in the source array.\n * @param sstep The offset from the start of one block to the start of the next block in the source array.\n * @param dst The destination array.\n * @param dstart The start of the first block in the destination array.\n * @param dstep The offset from the start of one block to the start of the next block in the destination array.\n * @param blockSize The length of one block.\n * @param blockCount The number of blocks to copy.\n */\nexport function arrayCopyBlocks<T>(\n\tsrc: ArrayLike<T>,\n\tsstart: int,\n\tsstep: int,\n\tdst: ArrayLikeWriteAble<T>,\n\tdstart: int,\n\tdstep: int,\n\tblockSize: int,\n\tblockCount: int,\n): void {\n\tfor (let i = 0; i < blockCount; i++) {\n\t\tarrayCopy(src, sstart + sstep * i, dst, dstart + dstep * i, blockSize)\n\t}\n}\nexport function arrayRange(startInclusive: int, endExclusive: int, step: int = 1) {\n\tassertNumbers(startInclusive, step)\n\t//console.log(Math.ceil((endExclusive - startInclusive) / step))\n\tconst arrLength = Math.ceil((endExclusive - startInclusive) / step)\n\tconst result = new Array(arrLength) // '- startInclusive' so that chunk in the last row will also be selected, even\n\t// if the row is not complete\n\tfor (let i = startInclusive, index = 0; index < arrLength; i += step, index++) {\n\t\tresult[index] = i\n\t}\n\treturn result\n}\n\n/**\n * Returns a number of evenly-spaced values between t0 and t1 (inclusive).\n * @param t0 First value.\n * @param t1 Last value.\n * @param count Total number of values.\n */\nexport function arraySamples(t0: number, t1: number, count: int = 64) {\n\treturn arrayFromFunction(count, i => lerp(t0, t1, i / (count - 1)))\n}\n\nexport function arrayFromFunction<T>(length: 1, f: (i: int, total: int) => T): [T]\nexport function arrayFromFunction<T>(length: 2, f: (i: int, total: int) => T): [T, T]\nexport function arrayFromFunction<T>(length: 3, f: (i: int, total: int) => T): [T, T, T]\nexport function arrayFromFunction<T>(length: 4, f: (i: int, total: int) => T): [T, T, T, T]\nexport function arrayFromFunction<T>(length: 5, f: (i: int, total: int) => T): [T, T, T, T, T]\nexport function arrayFromFunction<T>(length: int, f: (i: int, total: int) => T): T[]\nexport function arrayFromFunction<T>(length: int, f: (i: int, total: int) => T): T[] {\n\tassertNumbers(length)\n\tassert('function' == typeof f)\n\tconst a = new Array(length)\n\tlet elIndex = length\n\twhile (elIndex--) {\n\t\ta[elIndex] = f(elIndex, length)\n\t}\n\treturn a\n}\n\nexport function fuzzyUniques(vals: number[]): number[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i],\n\t\t\troundVal = round(val)\n\t\tlet key\n\t\tif (\n\t\t\t!map.has(roundVal) &&\n\t\t\t!((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, val)) &&\n\t\t\t!((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, val))\n\t\t) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\nexport function fuzzyUniquesF<T>(vals: T[], f: (o: T) => number): T[] {\n\tconst round = (val: number) => Math.floor(val * (1 << 26)) / (1 << 26)\n\tconst map = new Map()\n\tfor (let i = 0; i < vals.length; i++) {\n\t\tconst val = vals[i],\n\t\t\troundVal = round(f(val))\n\t\tlet key\n\t\tif (\n\t\t\t!map.has(roundVal) &&\n\t\t\t!((key = map.get(roundVal - 1 / (1 << 26))) && eq(key, f(val))) &&\n\t\t\t!((key = map.get(roundVal + 1 / (1 << 26))) && eq(key, f(val)))\n\t\t) {\n\t\t\tmap.set(roundVal, val)\n\t\t}\n\t}\n\treturn Array.from(map.values())\n}\n\nexport function addOwnProperties(target: any, props: any, ...exclude: string[]) {\n\tObject.getOwnPropertyNames(props).forEach(key => {\n\t\t//console.log(props, key)\n\t\tif (!exclude.includes(key)) {\n\t\t\tif (target.hasOwnProperty(key)) {\n\t\t\t\tconsole.warn('target ', target, ' already has property ', key, target[key])\n\t\t\t}\n\t\t\tObject.defineProperty(target, key, Object.getOwnPropertyDescriptor(props, key)!)\n\t\t}\n\t})\n}\n\nexport let defaultRoundFunction = (x: number) => x // Math.round10(x, -4)\n\nexport function forceFinite(val: string): number {\n\tconst valNum = parseFloat(val.replace(',', '.').replace(/^[^0-9,\\.\\-]/, ''))\n\treturn Number.isFinite(valNum) ? valNum : 0\n}\n\nexport const MINUS = (a: number, b: number) => a - b\n\nexport function floatHashCode(f: number) {\n\treturn ~~(f * (1 << 28))\n}\n\n/**\n * combinations(2) will generate\n * [0,0] [0,1] [1,1] [0,2] [1,2] [2,2]\n */\nexport function* combinations(n: int): IterableIterator<{ i: number; j: number }> {\n\tfor (let i = 0; i < n; i++) {\n\t\tfor (let j = i; j < n; j++) {\n\t\t\tyield { i: i, j: j }\n\t\t}\n\t}\n}\n\n/* The arithmetic-geometric mean of two non-negative numbers */\nexport function arithmeticGeometricMean(x: number, y: number): number {\n\tassertf(() => lt(0, x))\n\tassertf(() => lt(0, y))\n\tlet a = x,\n\t\tg = y\n\tlet i = 30\n\twhile (i-- && a != g) {\n\t\t;[a, g] = [(a + g) / 2, Math.sqrt(a * g)]\n\t}\n\tassert(i != -1)\n\n\treturn a\n}\n\n/**\n * incomplete elliptic integral of the first kind\n * EllipticF(phi, k2) = INT[0; phi] 1 / sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticF(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, -0.5), 0, phi)\n}\n\n/**\n * incomplete elliptic integral of the second kind\n * EllipticE(phi, k2) = INT[0; phi] sqrt(1 - k2 * sin²(phi)) dphi\n */\nexport function EllipticE(phi: number, k2: number): number {\n\treturn gaussLegendreQuadrature24(phi => Math.pow(1 - k2 * Math.sin(phi) ** 2, 0.5), 0, phi)\n}\n\n/**\n * One degree in radians. Use like Math.sin(30 * DEG).\n */\nexport const DEG = 0.017453292519943295\nexport function rad2deg(rad: number): number {\n\t//  discuss at: http://phpjs.org/functions/deg2rad/\n\t// original by: Enrique Gonzalez\n\t// improved by: Thomas Grainger (http://graingert.co.uk)\n\t//   example 1: deg2rad(45)\n\t//   returns 1: 0.7853981633974483\n\n\treturn rad / DEG\n}\n\n/**\n * numberToStr(2/3) == '0.6p'\n * numberToStr(7/12) == '0.583p'\n * numberToStr(2/7) == '0.285714pppppp'\n * numberToStr(NLA_PRECISION) == '0+'\n * numberToStr(-NLA_PRECISION) == '0-'\n * numberToStr(2-NLA_PRECISION) == '2-'\n * numberToStr(0) == '0='\n *\n */\nexport function numberToStr(value: number, length: int) {\n\tlet minAbsDiff = Infinity,\n\t\tclosestValue: number | undefined = undefined,\n\t\tclosestValueStr: string | undefined = undefined\n\tfunction test(testValue: number, testValueStr: string) {\n\t\tconst absDiff = Math.abs(testValue - value)\n\t\tconsole.log(testValue, testValueStr, absDiff)\n\t\tif (absDiff < minAbsDiff) {\n\t\t\tminAbsDiff = absDiff\n\t\t\tclosestValue = testValue\n\t\t\tclosestValueStr = testValueStr\n\t\t}\n\t\treturn 0 == absDiff\n\t}\n\n\tfunction overline(str: string) {\n\t\treturn str\n\t\t\t.split('')\n\t\t\t.map(c => c + '\\u0304')\n\t\t\t.join('')\n\t}\n\n\tif (test(parseFloat(value.toFixed(length)), value.toFixed(length))) return closestValueStr + '='\n\n\tconst valueStr = '' + value\n\tconst toDecimal = valueStr.substr(0, valueStr.indexOf('.') + 1)\n\tconst decimals = valueStr.substr(valueStr.indexOf('.') + 1)\n\n\tfor (let startPos = 0; startPos < length; startPos++) {\n\t\tfor (let endPos = startPos + 1; endPos <= length; endPos++) {\n\t\t\tconst prefixDecimals = decimals.substr(0, startPos)\n\t\t\tconst period = decimals.substr(startPos, endPos)\n\t\t\tconst testValue = parseFloat(\n\t\t\t\ttoDecimal + prefixDecimals + period.repeat(Math.ceil((17 - startPos) / period.length)),\n\t\t\t)\n\t\t\tif (test(testValue, toDecimal + prefixDecimals + overline(period))) return closestValueStr + '='\n\t\t}\n\t}\n\n\treturn closestValueStr + (closestValue! < value ? '-' : '+')\n}\n\nexport function time(f: () => void) {\n\tconst start = performance.now()\n\tf()\n\treturn performance.now() - start\n}\n\nexport type Tuple2<T> = [T, T]\nexport type Tuple3<T> = [T, T, T]\nexport type Tuple4<T> = [T, T, T, T]\nexport type Tuple5<T> = [T, T, T, T, T]\nexport type Tuple6<T> = [T, T, T, T, T, T]\nexport type Tuple7<T> = [T, T, T, T, T, T, T]\nexport type Tuple8<T> = [T, T, T, T, T, T, T, T]\n//console.log(numberToStr(29 / 99, 4))\n//console.log(numberToStr(77 / 99, 4))\n\n// interface Object {\n//    cw(f: (x: any) => any): any\n// }\n//Object.prototype.cw = function (f) {\n//    return f(this)\n//}\n//Object.construct = function <T>(cons: {new(...args: any[]): T}, args: any[]) {\n//    return f(this)\n//}\ndeclare global {\n\tinterface Object {\n\t\tsce: string\n\t\tstr: string\n\t\ttoSource(): string\n\t}\n\tinterface ObjectConstructor {\n\t\tconstruct<T>(cons: { new (...args: any[]): T }, args: any[]): T\n\t\tmap<T, S, K extends string>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: undefined, v: T, key: string, o: { [k in K]: T }) => S,\n\t\t): { [k in K]: S }\n\t\tmap<T, S, K extends string, C>(\n\t\t\to: { [k in K]: T },\n\t\t\tf: (this: C, v: T, key: string, o: { [k in K]: T }) => S,\n\t\t\tcontext: C,\n\t\t): { [k in K]: S }\n\t}\n\t// tslint:disable-next-line:class-name\n\tinterface __NLAReadonlyArray<T> {\n\t\t/**\n\t\t * this[this.length - 1]\n\t\t */\n\t\treadonly last: T\n\n\t\tbinaryIndexOf<S>(searchElement: S, cmp?: (a: T, b: S) => number): int\n\n\t\tconcatenated(): T\n\n\t\tflatMap<U>(f: (el: T, elIndex: int, arr: this) => U | ReadonlyArray<U>): U[]\n\n\t\t/**\n\t\t * this.length == 0\n\t\t */\n\t\tisEmpty(): boolean\n\n\t\t/**\n\t\t * this[index % this.length]\n\t\t */\n\t\temod(index: int): T\n\n\t\t/**\n\t\t * this.map(f).filter(v => v)\n\t\t */\n\t\tmapFilter<U>(f: (el: T, elIndex: int, arr: this) => U | undefined | false | null): U[]\n\n\t\t/**\n\t\t * Math.max.apply(undefined, this)\n\t\t */\n\t\tmax(this: number[]): number\n\n\t\t/**\n\t\t * Math.min.apply(undefined, this)\n\t\t */\n\t\tmin(this: number[]): number\n\n\t\t/**\n\t\t * There is no indexWithMin, use indexWithMax(-f) instead\n\t\t * @param f\n\t\t */\n\t\tindexWithMax(f: (el: T, elIndex: int, arr: this) => number): int\n\n\t\tsum(this: number[]): number\n\n\t\tabsSum(): number\n\n\t\tsliceStep(start: int, end: int, step: int, chunkSize?: int): T[]\n\n\t\tunique(): T[]\n\n\t\t/**\n\t\t * Return the element in the array for which f(el) is highest. There is no `withMin`, call withMax(x => -f(x))\n\t\t * instead.\n\t\t * @param f\n\t\t */\n\t\twithMax(f: (el: T, elIndex: int, arr: this) => number): T\n\n\t\tequals(this: { equals(obj: any): boolean }[], obj: any): boolean\n\n\t\thashCode(this: { hashCode(): int }[]): int\n\n\t\t/**\n\t\t * Like .splice(), but returns a new array.\n\t\t * @param start\n\t\t * @param end\n\t\t * @param items\n\t\t */\n\t\tsplicePure(start: int, end: int, ...items: T[]): T[]\n\n\t\t/**\n\t\t * If this array is not sorted according to comparator, returns the first unsorted index, i.e. the index of the\n\t\t * first element which is \"smaller\" than the previous one. Otherwise, returns -1\n\t\t * @example [1, 2, 3].firstUnsorted() // -1\n\t\t * @example [1, 3, 2].firstUnsorted() // 2, as [2] < [3]\n\t\t * @param comparator\n\t\t */\n\t\tfirstUnsorted(comparator: (a: T, b: T) => number): int\n\t}\n\tinterface Array<T> extends __NLAReadonlyArray<T> {\n\t\t/**\n\t\t * this[this.length - 1]\n\t\t */\n\t\tlast: T\n\t\tbinaryInsert(this: number[], newEl: number, cmp?: (a: number, b: number) => number): void\n\n\t\tbinaryInsert(newEl: T, cmp: (a: T, b: T) => number): void\n\n\t\t/**\n\t\t * this.length == 0\n\t\t */\n\t\tisEmpty(): boolean\n\n\t\tremove(el: T): boolean\n\n\t\tbagRemove(el: T): boolean\n\t\tbagRemoveIndex(el: T): boolean\n\t\tbagToggle(el: T): boolean\n\n\t\tremoveIndex(index: int): T\n\n\t\tremoveMatch(matcher: (el: T) => boolean): T | undefined\n\n\t\tremoveAll(els: T[]): void\n\n\t\tsumInPlaceTree(): number\n\n\t\ttoggle(el: T): void\n\n\t\tclear(...newItems: T[]): void\n\n\t\t//filter<U extends T>(pred: (a: T) => a is U): U[]\n\n\t\tmap<U>(this: [T], callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): [U]\n\t\tmap<U>(this: Tuple2<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple2<U>\n\t\tmap<U>(this: Tuple3<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple3<U>\n\t\tmap<U>(this: Tuple4<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple4<U>\n\t\tmap<U>(this: Tuple5<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple5<U>\n\t\tmap<U>(this: Tuple6<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple6<U>\n\t\tmap<U>(this: Tuple7<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple7<U>\n\t\tmap<U>(this: Tuple8<T>, callbackfn: (value: T, index: number, array: T[]) => U, thisArg?: any): Tuple8<U>\n\t}\n\tinterface ReadonlyArray<T> extends __NLAReadonlyArray<T> {}\n\n\tinterface String {\n\t\tcapitalizeFirstLetter(): string\n\t\tequals(x: any): boolean\n\t}\n}\nObject.map = function<T, S, K extends string>(\n\to: { [k in K]: T },\n\tf: (v: T, key: string, o: { [k in K]: T }) => S,\n\tcontext: any = undefined,\n): { [k in K]: S } {\n\tconst result = {} as { [k in K]: S }\n\tfor (const key in o) {\n\t\tresult[key] = f.call(context, o[key], key, o)\n\t}\n\treturn result\n}\nArray.prototype.emod = function(i) {\n\treturn this[i % this.length]\n}\nArray.prototype.sliceStep = function(start, end, step, chunkSize = 1) {\n\tassertNumbers(start, step)\n\tstart < 0 && (start = this.length + start)\n\tend <= 0 && (end = this.length + end)\n\tconst resultLength = Math.ceil((end - start) / step)\n\tconst result = new Array(resultLength) // '- start' so that chunk in the last row\n\t// will also be selected, even if the row is\n\t// not complete\n\tlet index = 0\n\tfor (let i = start; i < end; i += step) {\n\t\tfor (let j = i; j < Math.min(i + chunkSize, end); j++) {\n\t\t\tresult[index++] = this[j]\n\t\t}\n\t}\n\tassert(resultLength == index)\n\treturn result\n}\nArray.prototype.splicePure = function(start = 0, deleteCount = 0, ...items) {\n\tconst arrayLength = this.length\n\tconst _deleteCount = deleteCount < 0 ? 0 : deleteCount\n\tlet _start\n\tif (start < 0) {\n\t\tif (Math.abs(start) > arrayLength) {\n\t\t\t_start = 0\n\t\t} else {\n\t\t\t_start = arrayLength + start\n\t\t}\n\t} else if (start > arrayLength) {\n\t\t_start = arrayLength\n\t} else {\n\t\t_start = start\n\t}\n\tconst newLength = this.length - _deleteCount + items.length\n\tconst result = new Array(newLength)\n\tlet dst = newLength\n\tlet src = this.length\n\twhile (src-- > _start + _deleteCount) {\n\t\tresult[--dst] = this[src]\n\t}\n\tsrc = items.length\n\twhile (src--) {\n\t\tresult[--dst] = items[src]\n\t}\n\tsrc = _start\n\twhile (src--) {\n\t\tresult[--dst] = items[src]\n\t}\n\treturn result\n}\nArray.prototype.equals = function(obj: any): boolean {\n\tif (this === obj) return true\n\tif (Object.getPrototypeOf(obj) !== Array.prototype) return false\n\tif (this.length !== obj.length) return false\n\tfor (let i = 0; i < this.length; i++) {\n\t\tif (!equals(this[i], obj[i])) return false\n\t}\n\treturn true\n}\nexport function equals(a: any, b: any) {\n\treturn 'object' === typeof a ? a.equals(b) : a === b\n}\nArray.prototype.hashCode = function(): int {\n\tlet result = 0\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult = (result * 31 + hashCode(this[i])) | 0\n\t}\n\treturn result | 0\n}\nexport function hashCode(o: any) {\n\tif ('number' === typeof o || undefined === o) {\n\t\treturn o | 0\n\t} else {\n\t\treturn null === o ? 0 : o.hashCode()\n\t}\n}\nArray.prototype.mapFilter = function(f) {\n\tconst length = this.length,\n\t\tresult = []\n\tfor (let i = 0; i < length; i++) {\n\t\tif (i in this) {\n\t\t\tconst val = f(this[i], i, this)\n\t\t\tif (val) {\n\t\t\t\tresult.push(val)\n\t\t\t}\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.flatMap = function(f) {\n\treturn Array.prototype.concat.apply([], this.map(f))\n}\nArray.prototype.clear = function(...newItems) {\n\treturn this.splice(0, this.length, ...newItems)\n}\n/**\n *\n * @returns Array.prototype.concat.apply([], this)\n */\nArray.prototype.concatenated = function() {\n\treturn Array.prototype.concat.apply([], this)\n}\nArray.prototype.min = function() {\n\tlet i = this.length,\n\t\tmax = Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max > val) max = val\n\t}\n\treturn max\n}\nArray.prototype.max = function() {\n\t// faster and no limit on array size, see https://jsperf.com/math-max-apply-vs-loop/2\n\tlet i = this.length,\n\t\tmax = -Infinity\n\twhile (i--) {\n\t\tconst val = this[i]\n\t\tif (max < val) max = val\n\t}\n\treturn max\n}\nArray.prototype.indexWithMax = function(f) {\n\tif (this.length == 0) {\n\t\treturn -1\n\t}\n\tlet i = this.length,\n\t\tresult = -1,\n\t\tmaxVal = -Infinity\n\twhile (i--) {\n\t\tconst val = f(this[i], i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = i\n\t\t}\n\t}\n\treturn result\n}\nArray.prototype.withMax = function(f) {\n\tlet i = this.length,\n\t\tresult = undefined,\n\t\tmaxVal = -Infinity\n\twhile (i--) {\n\t\tconst el = this[i],\n\t\t\tval = f(el, i, this)\n\t\tif (val > maxVal) {\n\t\t\tmaxVal = val\n\t\t\tresult = el\n\t\t}\n\t}\n\treturn result\n}\n\n/**\n * Returns the sum of the absolute values of the components of this vector.\n * E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\n */\nArray.prototype.absSum = function() {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += Math.abs(this[i])\n\t}\n\treturn result\n}\n\nArray.prototype.sum = function() {\n\tlet i = this.length\n\tlet result = 0\n\twhile (i--) {\n\t\tresult += this[i]\n\t}\n\treturn result\n}\n\nArray.prototype.sumInPlaceTree = function() {\n\tif (0 == this.length) return 0\n\tlet l = this.length\n\twhile (l != 1) {\n\t\tconst lHalfFloor = Math.floor(l / 2)\n\t\tconst lHalfCeil = Math.ceil(l / 2)\n\t\tfor (let i = 0; i < lHalfFloor; i++) {\n\t\t\tthis[i] += this[i + lHalfCeil]\n\t\t}\n\t\tl = lHalfCeil\n\t}\n\treturn this[0]\n}\n\nArray.prototype.isEmpty = function() {\n\treturn 0 == this.length\n}\n\nArray.prototype.unique = function() {\n\tconst uniqueSet = new Set(this)\n\treturn Array.from(uniqueSet)\n}\n\nArray.prototype.remove = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn true\n\t}\n\treturn false\n}\n\nArray.prototype.removeIndex = function(i) {\n\tconst result = this[i]\n\tthis.splice(i, 1)\n\treturn result\n}\nArray.prototype.bagRemoveIndex = function(i) {\n\tconst result = this[i]\n\tif (i == this.length - 1) {\n\t\tthis.pop()\n\t} else {\n\t\tthis[i] = this.pop()\n\t}\n\treturn result\n}\n\nArray.prototype.removeMatch = function<T>(matcher: (el: T) => boolean) {\n\tconst index = this.findIndex(matcher)\n\tif (-1 != index) {\n\t\treturn this.removeIndex(index)\n\t}\n}\n\nArray.prototype.removeAll = function(o) {\n\tlet i = o.length\n\twhile (i--) {\n\t\tthis.remove(o[i])\n\t}\n}\n\nArray.prototype.toggle = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.splice(index, 1)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\nArray.prototype.bagToggle = function(o) {\n\tconst index = this.indexOf(o)\n\tif (index != -1) {\n\t\tthis.bagRemoveIndex(index)\n\t\treturn false\n\t} else {\n\t\tthis.push(o)\n\t\treturn true\n\t}\n}\n\nArray.prototype.binaryIndexOf = function(searchElement, cmp = (a: any, b: any) => a - b) {\n\tlet minIndex = 0\n\tlet maxIndex = this.length - 1\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex <= maxIndex) {\n\t\tcurrentIndex = ((minIndex + maxIndex) / 2) | 0\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, searchElement) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t} else if (cmp(currentElement, searchElement) > 0) {\n\t\t\tmaxIndex = currentIndex - 1\n\t\t} else {\n\t\t\treturn currentIndex\n\t\t}\n\t}\n\n\treturn -minIndex - 1\n}\n\nArray.prototype.binaryInsert = function(el: any, cmp = MINUS) {\n\tlet minIndex = 0\n\tlet maxIndex = this.length\n\tlet currentIndex\n\tlet currentElement\n\n\twhile (minIndex < maxIndex) {\n\t\tcurrentIndex = ~~((minIndex + maxIndex) / 2)\n\t\tcurrentElement = this[currentIndex]\n\n\t\tif (cmp(currentElement, el) < 0) {\n\t\t\tminIndex = currentIndex + 1\n\t\t} else {\n\t\t\tmaxIndex = currentIndex\n\t\t}\n\t}\n\n\tthis.splice(minIndex, 0, el)\n}\n\nArray.prototype.firstUnsorted = function(c) {\n\tfor (let i = 1; i < this.length; i++) {\n\t\tif (c(this[i - 1], this[i]) > 0) return i\n\t}\n\treturn -1\n}\nObject.defineProperty(Array.prototype, 'last', {\n\tget() {\n\t\treturn this[this.length - 1]\n\t},\n\tset(val) {\n\t\tthis[this.length - 1] = val\n\t},\n})\n\nString.prototype.capitalizeFirstLetter = function() {\n\treturn this.charAt(0).toUpperCase() + this.slice(1)\n}\nString.prototype.equals = function(x: any) {\n\treturn this == x\n}\n\nexport function SCE(o: any) {\n\tswitch (typeof o) {\n\t\tcase 'undefined':\n\t\t\treturn 'undefined'\n\t\tcase 'function':\n\t\t\treturn o.toString()\n\t\tcase 'number':\n\t\t\treturn '' + o\n\t\tcase 'string':\n\t\t\treturn JSON.stringify(o)\n\t\tcase 'object':\n\t\t\tif (null == o) {\n\t\t\t\treturn 'null'\n\t\t\t} else {\n\t\t\t\treturn o.sce\n\t\t\t}\n\t\tdefault:\n\t\t\tthrow new Error()\n\t}\n}\nexport function STR(o: any) {\n\treturn o.str\n}\nObject.defineProperty(Object.prototype, 'sce', {\n\tget: function() {\n\t\treturn this.toSource()\n\t},\n})\nObject.defineProperty(Object.prototype, 'str', {\n\tget: function() {\n\t\treturn this.toString()\n\t},\n})\n\n//const NLA = {}\n//for (let key in ARRAY_UTILITIES) {\n//    const nlaName = 'array' + key.capitalizeFirstLetter()\n//    assert(!NLA[nlaName])\n//    NLA[nlaName] = (arr, ...rest) => ARRAY_UTILITIES[key].apply(arr, rest)\n//}\n\nexport function isCCW(vertices: V3[], normal: V3) {\n\tconst dsa = doubleSignedArea(vertices, normal)\n\tassert(0 != dsa)\n\treturn dsa < 0\n}\nexport function doubleSignedArea(vertices: V3[], normal: V3) {\n\tassert(!normal.likeO(), '!normal.likeO()')\n\tconst absMaxDim = normal.maxAbsDim()\n\t// order is important, coord0 and coord1 must be set so that coord0, coord1 and maxDim span a right-hand coordinate\n\t// system var [coord0, coord1] = [['y', 'z'], ['z', 'x'], ['x', 'y']][maxAbsDim]\n\tconst doubleSignedArea = vertices\n\t\t.map((v0, i, vertices) => {\n\t\t\tconst v1 = vertices[(i + 1) % vertices.length]\n\t\t\t//return (v1[coord0] - v0[coord0]) * (v1[coord1] + v0[coord1])\n\t\t\tswitch (absMaxDim) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn (v1.y - v0.y) * (v1.z + v0.z)\n\t\t\t\tcase 1:\n\t\t\t\t\treturn (v1.z - v0.z) * (v1.x + v0.x)\n\t\t\t\tcase 2:\n\t\t\t\t\treturn (v1.x - v0.x) * (v1.y + v0.y)\n\t\t\t}\n\t\t})\n\t\t.reduce((a, b) => a + b)\n\treturn snap(doubleSignedArea * Math.sign(normal.e(absMaxDim)), 0)\n}\n\n/**\n * solves x² + px + q = 0\n */\nexport function pqFormula(p: number, q: number): number[] {\n\t// 4 times the discriminant:in\n\tconst discriminantX4 = (p * p) / 4 - q\n\tif (discriminantX4 < -NLA_PRECISION) {\n\t\treturn []\n\t} else if (discriminantX4 <= NLA_PRECISION) {\n\t\treturn [-p / 2]\n\t} else {\n\t\tconst root = Math.sqrt(discriminantX4)\n\t\treturn [-p / 2 - root, -p / 2 + root]\n\t}\n}\n\n/**\n * from pomax' library\n * solves ax³ + bx² + cx + d = 0\n * This function from pomax' utils\n * @returns 0-3 roots\n */\nexport function solveCubicReal2(a: number, b: number, c: number, d: number): number[] {\n\tif (eq0(a)) {\n\t\tif (eq0(b)) {\n\t\t\treturn [-d / c]\n\t\t} else {\n\t\t\treturn pqFormula(c / b, d / b)\n\t\t}\n\t}\n\tconst divisor = a\n\ta = b / divisor\n\tb = c / divisor\n\tc = d / divisor\n\tconst p = (3 * b - a * a) / 3,\n\t\tpDiv3 = p / 3,\n\t\tpDiv3Pow3 = pDiv3 * pDiv3 * pDiv3,\n\t\tq = (2 * a * a * a - 9 * a * b + 27 * c) / 27,\n\t\tqDiv2 = q / 2,\n\t\tdiscriminant = qDiv2 * qDiv2 + pDiv3Pow3\n\t// 18abcd - 4b³d + b²c² - 4ac³ - 27a²d²\n\tif (discriminant < -NLA_PRECISION / 8) {\n\t\tconst r = Math.sqrt(-pDiv3Pow3),\n\t\t\tt = -q / (2 * r),\n\t\t\tcosphi = t < -1 ? -1 : t > 1 ? 1 : t, // clamp t to [-1;1]\n\t\t\tphi = Math.acos(cosphi),\n\t\t\tt1 = 2 * Math.cbrt(r)\n\t\tconst x1 = t1 * Math.cos(phi / 3) - a / 3\n\t\tconst x2 = t1 * Math.cos((phi + 2 * Math.PI) / 3) - a / 3\n\t\tconst x3 = t1 * Math.cos((phi + 4 * Math.PI) / 3) - a / 3\n\t\treturn [x1, x2, x3]\n\t} else if (discriminant <= NLA_PRECISION / 8) {\n\t\tif (0 == qDiv2) {\n\t\t\t// TODO: compare with likeO?\n\t\t\treturn [-a / 3]\n\t\t}\n\t\tconst u1 = qDiv2 < 0 ? Math.cbrt(-qDiv2) : -Math.cbrt(qDiv2)\n\t\tconst x1 = 2 * u1 - a / 3\n\t\tconst x2 = -u1 - a / 3\n\t\treturn [x1, x2]\n\t} else {\n\t\tconst sd = Math.sqrt(discriminant)\n\t\tconst u1 = Math.cbrt(-qDiv2 + sd)\n\t\tconst v1 = Math.cbrt(qDiv2 + sd)\n\t\treturn [u1 - v1 - a / 3]\n\t}\n}\nexport function checkDerivate(\n\tf: (x: number) => number,\n\tdf: (x: number) => number,\n\ta: number,\n\tb: number,\n\tmaxFaults: int = 0,\n) {\n\tconst eps = 1e-4\n\tlet faults = 0\n\tfor (let t = a; t < b; t += (b - a) / 100) {\n\t\tconst dfdt = df(t)\n\t\tconst df2 = (f(t + eps) - f(t)) / eps\n\t\tassert((faults += +!eq2(df2, dfdt, 0.1)) <= maxFaults, `df2 == ${df2} != ${df(t)} = df(t)`)\n\t}\n}\nexport function getRoots(\n\tf: (x: number) => number,\n\ta: number,\n\tb: number,\n\tstepSize: number,\n\tdf: (x: number) => number,\n): number[] {\n\tconst results: number[] = []\n\tfor (let startT = a; startT <= b; startT += stepSize) {\n\t\tconst dt = stepSize * abs(df(startT))\n\t\tif (abs(f(startT)) <= dt) {\n\t\t\t//const t = newtonIterate1d(f, startT, 16)\n\t\t\tlet t = newtonIterateWithDerivative(f, startT, 16, df)\n\t\t\tif (!eq0(f(t)) || eq0(df(t))) {\n\t\t\t\tt = newtonIterate1d(df, startT, 16)\n\t\t\t\t// const a = startT - dt,\n\t\t\t\t// \tb = startT + dt\n\t\t\t\t//if (f(a) * f(b) < 0) {\n\t\t\t\t//    t = bisect(f, a, b, 16)\n\t\t\t\t//} else if (df(a) * df(b) < 0) {\n\t\t\t\t//    t = bisect(df, a, b, 16)\n\t\t\t\t//}\n\t\t\t}\n\t\t\tif (eq0(f(t)) && !results.some(r => eq(r, t))) {\n\t\t\t\tresults.push(t)\n\t\t\t}\n\t\t}\n\t}\n\treturn results\n}\n\nexport function bisect(f: (x: number) => number, a: number, b: number, steps: int) {\n\tassert(a < b)\n\tlet fA = f(a),\n\t\tfB = f(b)\n\tassert(fA * fB < 0)\n\twhile (steps--) {\n\t\tconst c = (b + a) / 2\n\t\tconst fC = f(c)\n\t\tif (sign(fA) == sign(fC)) {\n\t\t\ta = c\n\t\t\tfA = fC\n\t\t} else {\n\t\t\tb = c\n\t\t\tfB = fC\n\t\t}\n\t}\n\tassert(a <= (b + a) / 2)\n\tassert(b >= (b + a) / 2)\n\treturn lerp(a, b, 0.5)\n}\nexport function newtonIterate(\n\tf: (x: number[]) => number[],\n\tx: number[],\n\tsteps: int = 4,\n\tEPSILON?: number,\n\tstepize = 1,\n) {\n\tEPSILON = EPSILON || 1e-8\n\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = Matrix.jacobi(f, x, fx, EPSILON)\n\t\tassert(!dfdx.isZero())\n\t\tconst dx = dfdx.solveLinearSystem(new Vector(new Float64Array(fx))).v\n\t\tassert(!isNaN(dx[0]))\n\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\tfor (let j = 0; j < x.length; j++) x[j] -= dx[j] * stepize\n\t}\n\treturn x\n}\n\nexport function newtonIterate1d(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number | undefined,\n\tdf: (x: number) => number,\n): number\nexport function newtonIterate1d(f: (x: number) => number, xStart: number, steps: number, EPSILON?: number): number\nexport function newtonIterate1d(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 8,\n\tepsOrDf: number | ((x: number) => number) = 1e-8,\n): number {\n\tif ('number' === typeof epsOrDf) {\n\t\tlet x = xStart\n\n\t\tfor (let i = 0; i < steps; i++) {\n\t\t\tconst fx = f(x)\n\t\t\tconst dfdx = (f(x + epsOrDf) - fx) / epsOrDf\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t\tx = x - fx / dfdx\n\t\t}\n\t\treturn x\n\t} else {\n\t\treturn newtonIterateWithDerivative(f, xStart, steps, epsOrDf)\n\t}\n}\nexport function newtonIterateWithDerivative(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 4,\n\tdf: (x: number) => number,\n) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterateWithDerivative2(\n\tfAndDf: (x: number) => [number, number],\n\txStart: number,\n\tsteps: number = 8,\n\txMin = -Infinity,\n\txMax = Infinity,\n) {\n\tassert(steps % 1 == 0)\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst [fx, dfdx] = fAndDf(x)\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (0 == dfdx || x < xMin || xMax < x) {\n\t\t\treturn undefined\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterateSmart(\n\tf: (x: number) => number,\n\txStart: number,\n\tsteps: number = 4,\n\tdf: (x: number) => number,\n\tmindf = 1e-6,\n) {\n\tlet x = xStart\n\tfor (let i = 0; i < steps; i++) {\n\t\tconst fx = f(x)\n\t\tconst dfdx = df(x)\n\t\tif (abs(dfdx) < mindf && abs(fx) < mindf) {\n\t\t\treturn newtonIterate1d(df, x, steps, df)\n\t\t}\n\t\tif (isNaN(fx) || isNaN(dfdx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t\tx = x - fx / dfdx\n\t\tif (isNaN(fx)) {\n\t\t\tconsole.log()\n\t\t\t//console.log('fx / dfdx', fx / dfdx)\n\t\t}\n\t}\n\treturn x\n}\nexport function newtonIterate2d(\n\tf1: (s: number, t: number) => number,\n\tf2: (s: number, t: number) => number,\n\tsStart: number,\n\ttStart: number,\n\tsteps?: number,\n): V3 | undefined {\n\tconst EPSILON = 1e-6\n\tsteps = steps || 4\n\tlet s = sStart,\n\t\tt = tStart,\n\t\tf1ts,\n\t\tf2ts\n\tdo {\n\t\t/*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f1(s, t)\n\t\tf2ts = f2(s, t)\n\t\t/*\n         let df1s = (f1(s + EPSILON, t) - f1ts) / EPSILON, df1t = (f1(s, t + EPSILON) - f1ts) / EPSILON,\n         df2s = (f2(s + EPSILON, t) - f2ts) / EPSILON, df2t = (f2(s, t + EPSILON) - f2ts) / EPSILON\n         let det = df1s * df2t - df1t * df2s\n         s = s - ( df2t * f1ts - df1t * f2ts) / det\n         t = t - (-df2s * f1ts + df1s * f2ts) / det\n         */\n\t\t// TODO: is this even more accurate?\n\t\tconst df1s = f1(s + EPSILON, t) - f1ts,\n\t\t\tdf1t = f1(s, t + EPSILON) - f1ts,\n\t\t\tdf2s = f2(s + EPSILON, t) - f2ts,\n\t\t\tdf2t = f2(s, t + EPSILON) - f2ts\n\t\tconst det = (df1s * df2t - df1t * df2s) / EPSILON\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts ** 2 + f2ts ** 2 > NLA_PRECISION)\n\tif (f1ts ** 2 + f2ts ** 2 > NLA_PRECISION) {\n\t\tconsole.log(f1ts ** 2 + f2ts ** 2)\n\t\treturn undefined\n\t}\n\treturn new V3(s, t, 0)\n}\nexport function newtonIterate2dWithDerivatives(\n\tf: (s: number, t: number) => number,\n\tg: (s: number, t: number) => number,\n\tsStart: number,\n\ttStart: number,\n\tsteps: int,\n\tdfds: (s: number, t: number) => number,\n\tdfdt: (s: number, t: number) => number,\n\tdgds: (s: number, t: number) => number,\n\tdgdt: (s: number, t: number) => number,\n): V3 | undefined {\n\tsteps = steps || 4\n\tlet s = sStart,\n\t\tt = tStart\n\tlet f1ts, f2ts\n\tdo {\n\t\t/*\n         | a b |-1                   |  d -b |\n         | c d |   = 1 / (ad - bc) * | -c  a |\n         */\n\t\tf1ts = f(s, t)\n\t\tf2ts = g(s, t)\n\t\tconst df1s = dfds(s, t),\n\t\t\tdf1t = dfdt(s, t),\n\t\t\tdf2s = dgds(s, t),\n\t\t\tdf2t = dgdt(s, t)\n\t\t// TODO: is this even more accurate?\n\t\tconst det = df1s * df2t - df1t * df2s\n\t\tconst ds = (df2t * f1ts - df1t * f2ts) / det\n\t\tconst dt = (-df2s * f1ts + df1s * f2ts) / det\n\t\ts -= ds\n\t\tt -= dt\n\t} while (--steps && f1ts * f1ts + f2ts * f2ts > NLA_PRECISION / 32)\n\tif (!steps) {\n\t\t//console.log(f1ts * f1ts + f2ts * f2ts)\n\t\treturn undefined\n\t}\n\treturn V(s, t, 0)\n}\n\nexport const gaussLegendre24Xs: ReadonlyArray<number> = [\n\t-0.0640568928626056260850430826247450385909,\n\t0.0640568928626056260850430826247450385909,\n\t-0.1911188674736163091586398207570696318404,\n\t0.1911188674736163091586398207570696318404,\n\t-0.3150426796961633743867932913198102407864,\n\t0.3150426796961633743867932913198102407864,\n\t-0.4337935076260451384870842319133497124524,\n\t0.4337935076260451384870842319133497124524,\n\t-0.5454214713888395356583756172183723700107,\n\t0.5454214713888395356583756172183723700107,\n\t-0.6480936519369755692524957869107476266696,\n\t0.6480936519369755692524957869107476266696,\n\t-0.7401241915785543642438281030999784255232,\n\t0.7401241915785543642438281030999784255232,\n\t-0.8200019859739029219539498726697452080761,\n\t0.8200019859739029219539498726697452080761,\n\t-0.8864155270044010342131543419821967550873,\n\t0.8864155270044010342131543419821967550873,\n\t-0.9382745520027327585236490017087214496548,\n\t0.9382745520027327585236490017087214496548,\n\t-0.9747285559713094981983919930081690617411,\n\t0.9747285559713094981983919930081690617411,\n\t-0.9951872199970213601799974097007368118745,\n\t0.9951872199970213601799974097007368118745,\n]\nexport const gaussLegendre24Weights: ReadonlyArray<number> = [\n\t0.1279381953467521569740561652246953718517,\n\t0.1279381953467521569740561652246953718517,\n\t0.1258374563468282961213753825111836887264,\n\t0.1258374563468282961213753825111836887264,\n\t0.121670472927803391204463153476262425607,\n\t0.121670472927803391204463153476262425607,\n\t0.1155056680537256013533444839067835598622,\n\t0.1155056680537256013533444839067835598622,\n\t0.1074442701159656347825773424466062227946,\n\t0.1074442701159656347825773424466062227946,\n\t0.0976186521041138882698806644642471544279,\n\t0.0976186521041138882698806644642471544279,\n\t0.086190161531953275917185202983742667185,\n\t0.086190161531953275917185202983742667185,\n\t0.0733464814110803057340336152531165181193,\n\t0.0733464814110803057340336152531165181193,\n\t0.0592985849154367807463677585001085845412,\n\t0.0592985849154367807463677585001085845412,\n\t0.0442774388174198061686027482113382288593,\n\t0.0442774388174198061686027482113382288593,\n\t0.0285313886289336631813078159518782864491,\n\t0.0285313886289336631813078159518782864491,\n\t0.0123412297999871995468056670700372915759,\n\t0.0123412297999871995468056670700372915759,\n]\nexport function gaussLegendreQuadrature24(f: (x: number) => number, startT: number, endT: number): number {\n\t//let result = 0\n\t//for (let i = 0; i < gaussLegendre24Xs.length; i++) {\n\t//\t// gauss-legendre goes from -1 to 1, so we need to scale\n\t//\tlet t = startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT)\n\t//\tresult += gaussLegendre24Weights[i] * f(t)\n\t//}\n\t//const result = NLA\n\t//\t\t.arrayFromFunction(24, i => startT + (gaussLegendre24Xs[i] + 1) / 2 * (endT - startT))\n\t//\t\t.map((t, i) => gaussLegendre24Weights[i] * f(t))\n\t//\t\t.sumInPlaceTree()\n\t//99.54182500782605\n\t//99.54182500782602\n\t// again, [-1,1], so div by 2\n\t//return result // 2 * (endT - startT)\n\n\treturn (glq24_11(t => f(startT + ((t + 1) / 2) * (endT - startT))) / 2) * (endT - startT)\n}\n\n/**\n * Calculate the integral of f in the interval [-1;1].\n * @param f\n */\nexport function glq24_11(f: (x: number) => number): number {\n\treturn arrayFromFunction(24, i => gaussLegendre24Weights[i] * f(gaussLegendre24Xs[i])).sumInPlaceTree()\n}\nexport function glqInSteps(f: (x: number) => number, startT: number, endT: number, steps: int) {\n\tconst dt = (endT - startT) / steps\n\treturn (\n\t\t(arrayFromFunction(steps, i => glq24_11(t => f(startT + dt * i + ((t + 1) / 2) * dt))).sumInPlaceTree() / 2) *\n\t\tdt\n\t)\n}\n\nexport function midpointRuleQuadrature(\n\tf: (x: number) => number,\n\tstartT: number,\n\tendT: number,\n\tsteps: int = 32,\n): number {\n\tconst dt = (endT - startT) / steps\n\treturn (\n\t\tarrayFromFunction(steps, i => startT + dt / 2 + dt * i)\n\t\t\t.map(f)\n\t\t\t.sumInPlaceTree() * dt\n\t)\n}\n\nexport function callsce(name: string, ...params: any[]) {\n\treturn name + '(' + params.map(SCE).join(',') + ')'\n}\n","import { Equalable, JavaMap as CustomMap } from 'javasetmap.ts'\r\nimport {\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tdefaultRoundFunction,\r\n\teq,\r\n\teq0,\r\n\teq2,\r\n\tFloatArray,\r\n\tint,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n} from './NLA'\r\n\r\n/**\r\n * Immutable 3d-vector/point.\r\n */\r\nexport class V3 implements Equalable {\r\n\tstatic readonly O: V3 = new V3(0, 0, 0)\r\n\tstatic readonly X: V3 = new V3(1, 0, 0)\r\n\tstatic readonly Y: V3 = new V3(0, 1, 0)\r\n\tstatic readonly Z: V3 = new V3(0, 0, 1)\r\n\tstatic readonly XY: V3 = new V3(1, 1, 0)\r\n\tstatic readonly XYZ: V3 = new V3(1, 1, 1)\r\n\tstatic readonly INF: V3 = new V3(Infinity, Infinity, Infinity)\r\n\tstatic readonly UNITS: V3[] = [V3.X, V3.Y, V3.Z]\r\n\tstatic readonly NAMEMAP = new CustomMap<V3, string>()\r\n\t\t.set(V3.O, 'V3.O')\r\n\t\t.set(V3.X, 'V3.X')\r\n\t\t.set(V3.Y, 'V3.Y')\r\n\t\t.set(V3.Z, 'V3.Z')\r\n\t\t.set(V3.XYZ, 'V3.XYZ')\r\n\t\t.set(V3.INF, 'V3.INF')\r\n\r\n\tconstructor(readonly x: number, readonly y: number, readonly z: number) {\r\n\t\tassertNumbers(x, y, z)\r\n\t}\r\n\r\n\tstatic random(): V3 {\r\n\t\treturn new V3(Math.random(), Math.random(), Math.random())\r\n\t}\r\n\r\n\tstatic parallel(a: V3, b: V3) {\r\n\t\treturn a.dot(b) - a.length() * b.length()\r\n\t}\r\n\r\n\t/**\r\n\t * See http://math.stackexchange.com/questions/44689/how-to-find-a-random-axis-or-unit-vector-in-3d\r\n\t * @returns A random point on the unit sphere with uniform distribution across the surface.\r\n\t */\r\n\tstatic randomUnit(): V3 {\r\n\t\tconst zRotation = Math.random() * 2 * Math.PI\r\n\t\tconst z = Math.random() * 2 - 1\r\n\t\tconst zRadius = Math.sqrt(1 - z ** 2)\r\n\t\treturn new V3(zRadius * Math.cos(zRotation), zRadius * Math.sin(zRotation), z)\r\n\t}\r\n\r\n\t//noinspection JSUnusedLocalSymbols\r\n\t/**\r\n\t * Documentation stub. You want {@see V3#sphere}\r\n\t */\r\n\tstatic fromAngles(theta: number, phi: number): V3 {\r\n\t\tthrow new Error()\r\n\t}\r\n\r\n\tstatic fromFunction(f: (dim: number) => number) {\r\n\t\treturn new V3(f(0), f(1), f(2))\r\n\t}\r\n\r\n\tstatic min(a: V3, b: V3): V3 {\r\n\t\treturn new V3(Math.min(a.x, b.x), Math.min(a.y, b.y), Math.min(a.z, b.z))\r\n\t}\r\n\r\n\tstatic max(a: V3, b: V3): V3 {\r\n\t\treturn new V3(Math.max(a.x, b.x), Math.max(a.y, b.y), Math.max(a.z, b.z))\r\n\t}\r\n\r\n\tstatic lerp(a: V3, b: V3, t: number): V3 {\r\n\t\treturn new V3(a.x * (1 - t) + b.x * t, a.y * (1 - t) + b.y * t, a.z * (1 - t) + b.z * t)\r\n\t}\r\n\r\n\tstatic fromArray(a: number[]): V3 {\r\n\t\treturn new V3(a[0], a[1], a[2])\r\n\t}\r\n\r\n\tstatic angleBetween(a: V3, b: V3): number {\r\n\t\treturn a.angleTo(b)\r\n\t}\r\n\r\n\tstatic zip(f: (...args: number[]) => number, ...args: V3[]): V3 {\r\n\t\tassert(f instanceof Function)\r\n\t\treturn new V3(\r\n\t\t\tf.apply(undefined, args.map(x => x.x)),\r\n\t\t\tf.apply(undefined, args.map(x => x.y)),\r\n\t\t\tf.apply(undefined, args.map(x => x.z)),\r\n\t\t)\r\n\t}\r\n\r\n\tstatic normalOnPoints(a: V3, b: V3, c: V3): V3 {\r\n\t\tassertVectors(a, b, c)\r\n\t\treturn a.to(b).cross(a.to(c))\r\n\t}\r\n\r\n\tstatic add(...vs: V3[]): V3 {\r\n\t\tassertVectors(...vs)\r\n\t\tlet x = 0,\r\n\t\t\ty = 0,\r\n\t\t\tz = 0\r\n\t\tlet i = vs.length\r\n\t\twhile (i--) {\r\n\t\t\tx += vs[i].x\r\n\t\t\ty += vs[i].y\r\n\t\t\tz += vs[i].z\r\n\t\t}\r\n\t\treturn new V3(x, y, z)\r\n\t}\r\n\r\n\tstatic sub(...vs: V3[]): V3 {\r\n\t\tassertVectors(...vs)\r\n\t\tlet x = vs[0].x,\r\n\t\t\ty = vs[0].y,\r\n\t\t\tz = vs[0].z\r\n\t\tlet i = vs.length\r\n\t\twhile (i--) {\r\n\t\t\tx -= vs[i].x\r\n\t\t\ty -= vs[i].y\r\n\t\t\tz -= vs[i].z\r\n\t\t}\r\n\t\treturn new V3(x, y, z)\r\n\t}\r\n\r\n\t/**\r\n\t * Pack an array of V3s into an array of numbers (Float32Array by default).\r\n\t *\r\n\t * @param v3arr source array\r\n\t * @param dest destination array. If provided, must be large enough to fit v3count items.\r\n\t * @param srcStart starting index in source array\r\n\t * @param destStart starting index in destination array\r\n\t * @param v3count Number of V3s to copy.\r\n\t * @returns Packed array.\r\n\t */\r\n\tstatic pack<T extends FloatArray = Float32Array>(\r\n\t\tv3arr: ReadonlyArray<V3>,\r\n\t\tdest?: T,\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = v3arr.length - srcStart,\r\n\t): T {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tconst result = dest || (new Float32Array(3 * v3count) as any) // TODO\r\n\t\tassert(\r\n\t\t\tresult.length - destStart >= v3count * 3,\r\n\t\t\t'dest.length - destStart >= v3count * 3',\r\n\t\t\tresult.length,\r\n\t\t\tdestStart,\r\n\t\t\tv3count * 3,\r\n\t\t)\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tconst v = v3arr[srcIndex++]\r\n\t\t\tresult[destIndex++] = v.x\r\n\t\t\tresult[destIndex++] = v.y\r\n\t\t\tresult[destIndex++] = v.z\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic unpack(\r\n\t\tpackedArray: ArrayLike<number>,\r\n\t\tdest?: V3[],\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = (packedArray.length - srcStart) / 3,\r\n\t) {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tdest = dest || new Array(v3count)\r\n\t\tassert(dest.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tdest[destIndex++] = new V3(packedArray[srcIndex++], packedArray[srcIndex++], packedArray[srcIndex++])\r\n\t\t}\r\n\t\treturn dest\r\n\t}\r\n\r\n\tstatic packXY<T extends FloatArray = Float32Array>(\r\n\t\tv3arr: V3[],\r\n\t\tdest?: T,\r\n\t\tsrcStart: number = 0,\r\n\t\tdestStart: number = 0,\r\n\t\tv3count: number = v3arr.length - srcStart,\r\n\t): T {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tconst result = dest || (new Float32Array(2 * v3count) as any)\r\n\t\tassert(result.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tconst v = v3arr[srcIndex++]\r\n\t\t\tresult[destIndex++] = v.x\r\n\t\t\tresult[destIndex++] = v.y\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic unpackXY(\r\n\t\tsrc: FloatArray,\r\n\t\tdest?: V3[],\r\n\t\tsrcStart: int = 0,\r\n\t\tdestStart: int = 0,\r\n\t\tv3count: int = Math.min(src.length / 2, (dest && dest.length) || Infinity) - destStart,\r\n\t): V3[] {\r\n\t\t//assert (v3arr.every(v3 => v3 instanceof V3), 'v3arr.every(v3 => v3 instanceof V3)')\r\n\t\tdest = dest || new Array(v3count)\r\n\t\tassert(dest.length - destStart >= v3count, 'dest.length - destStart >= v3count')\r\n\t\tassert(src.length - srcStart >= v3count * 2, 'dest.length - destStart >= v3count')\r\n\r\n\t\tlet i = v3count,\r\n\t\t\tsrcIndex = srcStart,\r\n\t\t\tdestIndex = destStart\r\n\t\twhile (i--) {\r\n\t\t\tdest[destIndex++] = new V3(src[srcIndex++], src[srcIndex++], 0)\r\n\t\t}\r\n\t\treturn dest\r\n\t}\r\n\r\n\tstatic perturbed(v: V3, delta?: number): V3 {\r\n\t\treturn v.perturbed(delta)\r\n\t}\r\n\r\n\tstatic polar(radius: number, phi: raddd, z: number = 0): V3 {\r\n\t\treturn new V3(radius * Math.cos(phi), radius * Math.sin(phi), z)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param longitude angle in XY plane\r\n\t * @param latitude \"height\"/z dir angle\r\n\t */\r\n\tstatic sphere(longitude: raddd, latitude: raddd, length = 1): V3 {\r\n\t\treturn new V3(\r\n\t\t\tlength * Math.cos(latitude) * Math.cos(longitude),\r\n\t\t\tlength * Math.cos(latitude) * Math.sin(longitude),\r\n\t\t\tlength * Math.sin(latitude),\r\n\t\t)\r\n\t}\r\n\r\n\tstatic inverseLerp(a: V3, b: V3, x: V3) {\r\n\t\tconst ab = a.to(b)\r\n\t\treturn a.to(x).dot(ab) / ab.squared()\r\n\t}\r\n\r\n\tget [0]() {\r\n\t\treturn this.x\r\n\t}\r\n\tget [1]() {\r\n\t\treturn this.y\r\n\t}\r\n\tget [2]() {\r\n\t\treturn this.z\r\n\t}\r\n\r\n\tget u() {\r\n\t\treturn this.x\r\n\t}\r\n\tget v() {\r\n\t\treturn this.y\r\n\t}\r\n\r\n\tperturbed(delta: number = NLA_PRECISION * 0.8): V3 {\r\n\t\treturn this.map(x => x + (Math.random() - 0.5) * delta)\r\n\t}\r\n\r\n\t*[Symbol.iterator]() {\r\n\t\tyield this.x\r\n\t\tyield this.y\r\n\t\tyield this.z\r\n\t}\r\n\r\n\te(index: int): number {\r\n\t\tassert(index >= 0 && index < 3)\r\n\t\treturn 0 == index ? this.x : 1 == index ? this.y : this.z\r\n\t}\r\n\r\n\tnegated(): V3 {\r\n\t\treturn new V3(-this.x, -this.y, -this.z)\r\n\t}\r\n\r\n\tabs(): V3 {\r\n\t\treturn new V3(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\r\n\t}\r\n\r\n\tplus(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn new V3(this.x + a.x, this.y + a.y, this.z + a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Hadarmard product (or Schur product)\r\n\t * Element-wise multiplication of two vectors.\r\n\t * @see https://en.wikipedia.org/wiki/Hadamard_product_(matrices)\r\n\t *\r\n\t */\r\n\tschur(a: V3): V3 {\r\n\t\treturn new V3(this.x * a.x, this.y * a.y, this.z * a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Element-wise division.\r\n\t */\r\n\tdivv(a: V3): V3 {\r\n\t\treturn new V3(this.x / a.x, this.y / a.y, this.z / a.z)\r\n\t}\r\n\r\n\t/**\r\n\t * See also {@link to} which is a.minus(this)\r\n\t */\r\n\tminus(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn new V3(this.x - a.x, this.y - a.y, this.z - a.z)\r\n\t}\r\n\r\n\tto(a: V3): V3 {\r\n\t\tassertVectors(a)\r\n\t\treturn a.minus(this)\r\n\t}\r\n\r\n\ttimes(factor: number): V3 {\r\n\t\tassertNumbers(factor)\r\n\t\treturn new V3(this.x * factor, this.y * factor, this.z * factor)\r\n\t}\r\n\r\n\tdiv(a: number): V3 {\r\n\t\tassertNumbers(a)\r\n\t\treturn new V3(this.x / a, this.y / a, this.z / a)\r\n\t}\r\n\r\n\t/**\r\n\t * Dot product.\r\n\t * @see https://en.wikipedia.org/wiki/Dot_product\r\n\t */\r\n\tdot(a: V3): number {\r\n\t\tassertInst(V3, a)\r\n\t\treturn this.x * a.x + this.y * a.y + this.z * a.z\r\n\t}\r\n\r\n\t/**\r\n\t * Linearly interpolate\r\n\t */\r\n\tlerp(b: V3, t: number): V3 {\r\n\t\tassertVectors(b)\r\n\t\tassertNumbers(t)\r\n\t\treturn V3.lerp(this, b, t)\r\n\t}\r\n\r\n\tsquared(): number {\r\n\t\treturn this.dot(this)\r\n\t}\r\n\r\n\tdistanceTo(a: V3): number {\r\n\t\tassertVectors(a)\r\n\t\t//return this.minus(a).length()\r\n\t\treturn Math.hypot(this.x - a.x, this.y - a.y, this.z - a.z)\r\n\t}\r\n\r\n\tdistanceToSquared(a: V3): number {\r\n\t\tassertVectors(a)\r\n\t\treturn this.minus(a).squared()\r\n\t}\r\n\r\n\t///**\r\n\t// * See also {@see #setTo} for the individual\r\n\t// *\r\n\t// * @param v\r\n\t// */\r\n\t//assign(v) {\r\n\t//\tassertVectors(v)\r\n\t//\tthis.x = v.x\r\n\t//\tthis.y = v.y\r\n\t//\tthis.z = v.z\r\n\t//}\r\n\t//\r\n\t///**\r\n\t// * See also {@see #assign} for the V3 version\r\n\t// *\r\n\t// * @param x\r\n\t// * @param y\r\n\t// * @param z\r\n\t// */\r\n\t//setTo(x, y, z = 0) {\r\n\t//\tthis.x = x\r\n\t//\tthis.y = y\r\n\t//\tthis.z = z\r\n\t//}\r\n\r\n\ttoSource(): string {\r\n\t\treturn V3.NAMEMAP.get(this) || this.toString()\r\n\t}\r\n\r\n\tnonParallelVector(): V3 {\r\n\t\tconst abs = this.abs()\r\n\t\tif (abs.x <= abs.y && abs.x <= abs.z) {\r\n\t\t\treturn V3.X\r\n\t\t} else if (abs.y <= abs.x && abs.y <= abs.z) {\r\n\t\t\treturn V3.Y\r\n\t\t} else {\r\n\t\t\treturn V3.Z\r\n\t\t}\r\n\t}\r\n\r\n\tslerp(b: V3, t: number): V3 {\r\n\t\tassertVectors(b)\r\n\t\tassertNumbers(t)\r\n\t\tconst sin = Math.sin\r\n\t\tconst omega = this.angleTo(b)\r\n\t\treturn this.times(sin((1 - t) * omega) / sin(omega)).plus(b.times(sin(t * omega) / sin(omega)))\r\n\t}\r\n\r\n\tmin(b: V3): V3 {\r\n\t\treturn new V3(Math.min(this.x, b.x), Math.min(this.y, b.y), Math.min(this.z, b.z))\r\n\t}\r\n\r\n\tmax(b: V3): V3 {\r\n\t\treturn new V3(Math.max(this.x, b.x), Math.max(this.y, b.y), Math.max(this.z, b.z))\r\n\t}\r\n\r\n\tequals(v: any): boolean {\r\n\t\treturn this == v || (this.x == v.x && this.y == v.y && this.z == v.z)\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * The cross product is defined as:\r\n\t * a x b = |a| * |b| * sin(phi) * n\r\n\t * where |.| is the euclidean norm, phi is the angle between the vectors\r\n\t * and n is a unit vector perpendicular to both a and b.\r\n\t *\r\n\t * The cross product is zero for parallel vectors.\r\n\t * @see https://en.wikipedia.org/wiki/Cross_product\r\n\t */\r\n\tcross(v: V3): V3 {\r\n\t\treturn new V3(this.y * v.z - this.z * v.y, this.z * v.x - this.x * v.z, this.x * v.y - this.y * v.x)\r\n\t}\r\n\r\n\tminElement(): number {\r\n\t\treturn Math.min(this.x, this.y, this.z)\r\n\t}\r\n\r\n\tmaxElement(): number {\r\n\t\treturn Math.max(this.x, this.y, this.z)\r\n\t}\r\n\r\n\ttoArray(n: int = 3): number[] {\r\n\t\treturn [this.x, this.y, this.z].slice(0, n)\r\n\t}\r\n\r\n\t/**\r\n\t * Get a perpendicular vector.\r\n\t * For vectors in the XY-Plane, returns vector rotated 90° CCW.\r\n\t */\r\n\tgetPerpendicular(): V3 {\r\n\t\tif (eq0(this.x) && eq0(this.y)) {\r\n\t\t\tif (eq0(this.z)) {\r\n\t\t\t\tthrow new Error('zero vector')\r\n\t\t\t}\r\n\t\t\t// v is Vector(0, 0, v.z)\r\n\t\t\treturn V3.Y\r\n\t\t}\r\n\t\treturn new V3(-this.y, this.x, 0)\r\n\t}\r\n\r\n\t//noinspection JSMethodCanBeStatic\r\n\tdim(): int {\r\n\t\treturn 3\r\n\t}\r\n\r\n\tels(): number[] {\r\n\t\treturn [this.x, this.y, this.z]\r\n\t}\r\n\r\n\tangleXY(): number {\r\n\t\treturn Math.atan2(this.y, this.x)\r\n\t}\r\n\r\n\tlengthXY(): number {\r\n\t\treturn Math.hypot(this.x, this.y)\r\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y)\r\n\t}\r\n\r\n\tsquaredXY(): number {\r\n\t\treturn this.x * this.x + this.y * this.y\r\n\t}\r\n\r\n\txy(): V3 {\r\n\t\treturn new V3(this.x, this.y, 0)\r\n\t}\r\n\r\n\t/**\r\n\t * Transform this vector element-wise by way of function f. Returns V3(f(x), f(y), f(z))\r\n\t * @param f function to apply to elements (number -> number)\r\n\t */\r\n\tmap(f: (el: number, dim: 'x' | 'y' | 'z') => number): V3 {\r\n\t\treturn new V3(f(this.x, 'x'), f(this.y, 'y'), f(this.z, 'z'))\r\n\t}\r\n\r\n\ttoString(roundFunction?: (x: number) => any): string {\r\n\t\troundFunction = roundFunction || defaultRoundFunction\r\n\t\treturn V3.NAMEMAP.get(this) || 'V(' + [this.x, this.y, this.z].map(roundFunction).join(', ') + ')' //+ this.id\r\n\t}\r\n\r\n\tangleTo(b: V3): number {\r\n\t\tassert(1 == arguments.length)\r\n\t\tassertVectors(b)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!b.likeO())\r\n\t\treturn Math.acos(Math.min(1, this.dot(b) / this.length() / b.length()))\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * phi = angle between A and B\r\n\t * alpha = angle between n and normal1\r\n\t *\r\n\t * A . B = ||A|| * ||B|| * cos(phi)\r\n\t * A x B = ||A|| * ||B|| * sin(phi) * n (n = unit vector perpendicular)\r\n\t * (A x B) . normal1 = ||A|| * ||B|| * sin(phi) * cos(alpha)\r\n\t */\r\n\tangleRelativeNormal(vector: V3, normal1: V3): number {\r\n\t\tassert(2 == arguments.length)\r\n\t\tassertVectors(vector, normal1)\r\n\t\tassertf(() => normal1.hasLength(1))\r\n\t\t//assert(vector.isPerpendicularTo(normal1), 'vector.isPerpendicularTo(normal1)' + vector.sce + normal1.sce)\r\n\t\t//assert(this.isPerpendicularTo(normal1), 'this.isPerpendicularTo(normal1)' + this.dot(vector)) //\r\n\t\t// -0.000053600770598683675\r\n\t\treturn Math.atan2(this.cross(vector).dot(normal1), this.dot(vector))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true iff this is parallel to vector, i.e. this * s == vector, where s is a positive or negative number,\r\n\t * using eq. Throw a DebugError\r\n\t * - if vector is not a Vector or\r\n\t * - if this has a length of 0 or\r\n\t * - if vector has a length of 0\r\n\t */\r\n\tisParallelTo(vector: V3): boolean {\r\n\t\tassertVectors(vector)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!vector.likeO())\r\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\r\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\r\n\t\tconst dot = this.dot(vector)\r\n\t\treturn eq(this.squared() * vector.squared(), dot * dot)\r\n\t}\r\n\r\n\tisPerpendicularTo(vector: V3): boolean {\r\n\t\tassertVectors(vector)\r\n\t\tassert(!this.likeO(), '!this.likeO()')\r\n\t\tassert(!vector.likeO(), '!vector.likeO()')\r\n\t\treturn eq0(this.dot(vector))\r\n\t}\r\n\r\n\tisReverseDirTo(other: V3): boolean {\r\n\t\tassertVectors(other)\r\n\t\tassert(!this.likeO())\r\n\t\tassert(!other.likeO())\r\n\t\t// a . b takes on values of +|a|*|b| (vectors same direction) to -|a|*|b| (opposite direction)\r\n\t\t// in both cases the vectors are parallel, so check if abs(a . b) == |a|*|b|\r\n\t\tconst dot = this.dot(other)\r\n\t\treturn eq(Math.sqrt(this.squared() * other.squared()), dot)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this Vector, i.e. the euclidean norm.\r\n\t *\r\n\t * Note that the partial derivatives of the euclidean norm at point x are equal to the\r\n\t * components of the unit vector x.\r\n\t */\r\n\tlength(): number {\r\n\t\treturn Math.hypot(this.x, this.y, this.z)\r\n\t\t//return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z)\r\n\t}\r\n\r\n\t/**\r\n\t * Definition: V3.likeO == V3.like(V3.O)\r\n\t */\r\n\tlikeO(): boolean {\r\n\t\treturn this.like(V3.O)\r\n\t}\r\n\r\n\t/**\r\n\t * eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\r\n\t * @param obj\r\n\t */\r\n\tlike(obj: any): boolean {\r\n\t\tif (obj === this) return true\r\n\t\tif (!(obj instanceof V3)) return false\r\n\t\treturn eq(this.x, obj.x) && eq(this.y, obj.y) && eq(this.z, obj.z)\r\n\t}\r\n\r\n\t/**\r\n\t * equivalent to this.like(v) || this.negated().like(v)\r\n\t */\r\n\tlikeOrReversed(v: V3): boolean {\r\n\t\treturn eq(Math.abs(this.dot(v)), Math.sqrt(this.squared() * v.squared()))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new unit Vector (.length() === 1) with the same direction as this vector. Throws a\r\n\t * DebugError if this has a length of 0.\r\n\t */\r\n\tunit(): V3 {\r\n\t\tassert(!this.likeO(), 'cannot normalize zero vector')\r\n\t\treturn this.div(this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Documentation stub. You want {@link unit}\r\n\t */\r\n\tnormalized(): V3 {\r\n\t\tthrow new Error('documentation stub. use .unit()')\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new V3 equal to this scaled so that its length is equal to newLength.\r\n\t *\r\n\t * Passing a negative newLength will flip the vector.\r\n\t */\r\n\ttoLength(newLength: number): V3 {\r\n\t\tassertNumbers(newLength)\r\n\t\treturn this.times(newLength / this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Vector which is the projection of this vector onto the passed vector.\r\n\t * Examples\r\n\t *\r\n\t * \tV(3, 4).projectedOn(V(1, 0)) // returns V(3, 0)\r\n\t * \tV(3, 4).projectedOn(V(2, 0)) // returns V(3, 0)\r\n\t * \tV(3, 4).projectedOn(V(-1, 0)) // returns V(-3, 0)\r\n\t * \tV(3, 4).projectedOn(V(0, 1)) // returns V(0, 4)\r\n\t * \tV(3, 4).projectedOn(V(1, 1)) // returns\r\n\t */\r\n\tprojectedOn(b: V3): V3 {\r\n\t\tassertVectors(b)\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn b.times(this.dot(b) / b.dot(b))\r\n\t}\r\n\r\n\trejectedFrom(b: V3): V3 {\r\n\t\tassertVectors(b)\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn this.minus(b.times(this.dot(b) / b.dot(b)))\r\n\t}\r\n\r\n\trejectedFrom1(b1: V3): V3 {\r\n\t\tassertVectors(b1)\r\n\t\tassert(b1.hasLength(1))\r\n\t\t// https://en.wikipedia.org/wiki/Vector_projection#Vector_projection_2\r\n\t\treturn this.minus(b1.times(this.dot(b1)))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this vector rejected from the unit vector b.\r\n\t *\r\n\t *       /|\r\n\t * this / |    ^\r\n\t *     /__|    | b\r\n\t *      r\r\n\t *  Returns length of r (r === this.rejectedFrom(b))\r\n\t */\r\n\trejectedLength(b: V3): number {\r\n\t\tassertVectors(b)\r\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b) ** 2 / b.dot(b))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the length of this vector rejected from the unit vector b1.\r\n\t *\r\n\t *       /|\r\n\t * this / |    ^\r\n\t *     /__|    | b1\r\n\t *      r\r\n\t *  Returns length of r (r === this.rejectedFrom(b1))\r\n\t */\r\n\trejected1Length(b1: V3): number {\r\n\t\tassertVectors(b1)\r\n\t\tassert(b1.hasLength(1))\r\n\t\treturn Math.sqrt(this.dot(this) - this.dot(b1) ** 2)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns true iff the length() of this vector is equal to 'length', using eq\r\n\t * @example\r\n\t * V(3, 4).hasLength(5) === true\r\n\t * @example\r\n\t * V(1, 1).hasLength(1) === false\r\n\t */\r\n\thasLength(length: number): boolean {\r\n\t\tassertNumbers(length)\r\n\t\treturn eq(length, this.length())\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the sum of the absolute values of the components of this vector.\r\n\t * E.g. V(1, -2, 3) === abs(1) + abs(-2) + abs(3) === 1 + 2 + 3 === 6\r\n\t */\r\n\tabsSum(): number {\r\n\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z)\r\n\t}\r\n\r\n\t/**\r\n\t * returns min(|x|, |y|, |z|)\r\n\t */\r\n\tminAbsElement(): number {\r\n\t\treturn Math.min(Math.abs(this.x), Math.abs(this.y), Math.min(this.z))\r\n\t}\r\n\r\n\t/**\r\n\t * returns max(|x|, |y|, |z|)\r\n\t */\r\n\tmaxAbsElement(): number {\r\n\t\treturn Math.max(Math.abs(this.x), Math.abs(this.y), Math.abs(this.z))\r\n\t}\r\n\r\n\tmaxAbsDim(): 0 | 1 | 2 {\r\n\t\tconst xAbs = Math.abs(this.x),\r\n\t\t\tyAbs = Math.abs(this.y),\r\n\t\t\tzAbs = Math.abs(this.z)\r\n\t\treturn xAbs >= yAbs ? (xAbs >= zAbs ? 0 : 2) : yAbs >= zAbs ? 1 : 2\r\n\t}\r\n\r\n\tminAbsDim(): 0 | 1 | 2 {\r\n\t\tconst xAbs = Math.abs(this.x),\r\n\t\t\tyAbs = Math.abs(this.y),\r\n\t\t\tzAbs = Math.abs(this.z)\r\n\t\treturn xAbs < yAbs ? (xAbs < zAbs ? 0 : 2) : yAbs < zAbs ? 1 : 2\r\n\t}\r\n\r\n\twithElement(dim: 'x' | 'y' | 'z', el: number) {\r\n\t\tassert(['x', 'y', 'z'].includes(dim), '' + dim)\r\n\t\tassertNumbers(el)\r\n\t\tif ('x' == dim) {\r\n\t\t\treturn new V3(el, this.y, this.z)\r\n\t\t}\r\n\t\tif ('y' == dim) {\r\n\t\t\treturn new V3(this.x, el, this.z)\r\n\t\t}\r\n\t\treturn new V3(this.x, this.y, el)\r\n\t}\r\n\r\n\thashCode(): int {\r\n\t\tfunction floatHashCode(f: number) {\r\n\t\t\treturn ~~(f * (1 << 28))\r\n\t\t}\r\n\r\n\t\treturn ~~((floatHashCode(this.x) * 31 + floatHashCode(this.y)) * 31 + floatHashCode(this.z))\r\n\t}\r\n\r\n\t/**\r\n\t * as sadjkh akjhs djkahsd kjahs k skjhdakjh dkjash dkjahs kjdhas kj dhkjahsd kjahs dkjahs dkjhas kjdkajs\r\n\t * hdkljhfkjahdslfghal dasd\r\n\t *\r\n\t * * asdjklas dasds\r\n\t */\r\n\thashCodes() {\r\n\t\t//function floatHashCode(f) {\r\n\t\t//\treturn ~~(f * (1 << 28))\r\n\t\t//}\r\n\r\n\t\t// compare hashCode.floatHashCode\r\n\t\t// the following ops are equivalent to\r\n\t\t// floatHashCode((el - NLA_PRECISION) % (2 * NLA_PRECISION))\r\n\t\t// this results in the hashCode for the (out of 8 possible) cube with the lowest hashCode\r\n\t\t// the other 7 can be calculated by adding constants\r\n\t\tconst xHC = ~~(this.x * (1 << 28) - 0.5),\r\n\t\t\tyHC = ~~(this.y * (1 << 28) - 0.5),\r\n\t\t\tzHC = ~~(this.z * (1 << 28) - 0.5),\r\n\t\t\thc = ~~((xHC * 31 + yHC) * 31 + zHC)\r\n\t\treturn [\r\n\t\t\t~~hc,\r\n\t\t\t~~(hc + 961),\r\n\t\t\t~~(hc + 31),\r\n\t\t\t~~(hc + 31 + 961),\r\n\t\t\t~~(hc + 1),\r\n\t\t\t~~(hc + 1 + 961),\r\n\t\t\t~~(hc + 1 + 31),\r\n\t\t\t~~(hc + 1 + 31 + 961),\r\n\t\t]\r\n\t}\r\n\r\n\t//static areDisjoint(it: Iterable<V3>): boolean {\r\n\t//\tconst vSet = new CustomSet\r\n\t//\tfor (const v of it) {\r\n\t//\t\tif (!v.equals(vSet.canonicalizeLike(v))) {\r\n\t//\t\t\t// like value already in set\r\n\t//\t\t\treturn false\r\n\t//\t\t}\r\n\t//\t}\r\n\t//\treturn true\r\n\t//}\r\n\r\n\tcompareTo(other: V3): number {\r\n\t\tif (this.x != other.x) {\r\n\t\t\treturn this.x - other.x\r\n\t\t} else if (this.y != other.y) {\r\n\t\t\treturn this.y - other.y\r\n\t\t} else {\r\n\t\t\treturn this.z - other.z\r\n\t\t}\r\n\t}\r\n\r\n\tcompareTo2(other: V3, eps: number = NLA_PRECISION): number {\r\n\t\tif (!eq2(this.x, other.x, eps)) {\r\n\t\t\treturn this.x - other.x\r\n\t\t} else if (!eq2(this.y, other.y, eps)) {\r\n\t\t\treturn this.y - other.y\r\n\t\t} else if (!eq2(this.z, other.z, eps)) {\r\n\t\t\treturn this.z - other.z\r\n\t\t} else {\r\n\t\t\treturn 0\r\n\t\t}\r\n\t}\r\n\r\n\ttoAngles(): { theta: raddd; phi: raddd } {\r\n\t\treturn {\r\n\t\t\ttheta: Math.atan2(this.y, this.x),\r\n\t\t\tphi: Math.asin(this.z / this.length()),\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Utility method for creating V3s\r\n *\r\n * Example usage:\r\n *\r\n *     V(1, 2, 3)\r\n *     V([1, 2, 3])\r\n *     V({ x: 1, y: 2, z: 3 })\r\n *     V(1, 2) * assumes z=0\r\n *     V([1, 2]) // assumes z=0\r\n *\r\n */\r\nexport function V(x: number, y: number, z?: number): V3\r\nexport function V(arr: [number, number, number] | [number, number]): V3\r\nexport function V(obj: { x: number; y: number; z?: number }): V3\r\nexport function V(a: any, b?: any, c?: any): V3 {\r\n\tif (arguments.length == 3) {\r\n\t\treturn new V3(parseFloat(a), parseFloat(b), parseFloat(c))\r\n\t} else if (arguments.length == 2) {\r\n\t\treturn new V3(parseFloat(a), parseFloat(b), 0)\r\n\t} else if (arguments.length == 1) {\r\n\t\tif (typeof a == 'object') {\r\n\t\t\tif (a instanceof V3) {\r\n\t\t\t\t// immutable, so\r\n\t\t\t\treturn a\r\n\t\t\t} else if (a instanceof Array || a instanceof Float32Array || a instanceof Float64Array) {\r\n\t\t\t\tif (2 == a.length) {\r\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), 0)\r\n\t\t\t\t} else if (3 == a.length) {\r\n\t\t\t\t\treturn new V3(parseFloat(a[0]), parseFloat(a[1]), parseFloat(a[2]))\r\n\t\t\t\t}\r\n\t\t\t} else if ('x' in a && 'y' in a) {\r\n\t\t\t\treturn new V3(parseFloat(a.x), parseFloat(a.y), 'z' in a ? parseFloat(a.z) : 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tthrow new Error('invalid arguments' + arguments)\r\n}\r\n","import { M4 } from './M4'\nimport { callsce, raddd } from './NLA'\nimport { V3 } from './V3'\n\nexport const P3YZ = { normal1: V3.X, w: 0 }\nexport const P3ZX = { normal1: V3.Y, w: 0 }\nexport const P3XY = { normal1: V3.Z, w: 0 }\n\nexport abstract class Transformable {\n\tmirror(plane: { normal1: V3; w: number }): this {\n\t\treturn this.transform(M4.mirror(plane))\n\t}\n\n\tmirroredX(): this {\n\t\treturn this.mirror(P3YZ)\n\t}\n\n\tmirrorY(): this {\n\t\treturn this.mirror(P3ZX)\n\t}\n\n\tmirrorZ(): this {\n\t\treturn this.mirror(P3XY)\n\t}\n\n\tproject(plane: { normal1: V3; w: number }): this {\n\t\treturn this.transform(M4.project(plane))\n\t}\n\n\tprojectXY(): this {\n\t\treturn this.transform(M4.project(P3XY))\n\t}\n\n\tprojectYZ(): this {\n\t\treturn this.transform(M4.project(P3YZ))\n\t}\n\n\tprojectZX(): this {\n\t\treturn this.transform(M4.project(P3ZX))\n\t}\n\n\ttranslate(x: number, y?: number, z?: number): this\n\ttranslate(v: V3): this\n\ttranslate(...args: any[]): this {\n\t\treturn this.transform(M4.translate.apply(undefined, args), callsce.call(undefined, '.translate', ...args))\n\t}\n\n\tscale(x: number, y?: number, z?: number): this\n\tscale(f: V3): this\n\tscale(...args: any[]): this {\n\t\treturn this.transform(M4.scale.apply(undefined, args), callsce.call(undefined, '.scale', ...args))\n\t}\n\n\trotateX(radians: raddd): this {\n\t\treturn this.transform(M4.rotateX(radians), `.rotateX(${radians})`)\n\t}\n\n\trotateY(radians: raddd): this {\n\t\treturn this.transform(M4.rotateY(radians), `.rotateY(${radians})`)\n\t}\n\n\trotateZ(radians: raddd): this {\n\t\treturn this.transform(M4.rotateZ(radians), `.rotateZ(${radians})`)\n\t}\n\n\trotate(rotationCenter: V3, rotationAxis: V3, radians: raddd): this {\n\t\treturn this.transform(\n\t\t\tM4.rotateLine(rotationCenter, rotationAxis, radians),\n\t\t\tcallsce('.rotate', rotationCenter, rotationAxis, radians),\n\t\t)\n\t}\n\n\trotateAB(from: V3, to: V3): this {\n\t\treturn this.transform(M4.rotateAB(from, to), callsce('.rotateAB', from, to))\n\t}\n\n\teulerZXZ(alpha: raddd, beta: raddd, gamma: raddd): this {\n\t\tthrow new Error()\n\t\t//return this.transform(M4.eulerZXZ(alpha, beta, gamma))\n\t}\n\n\tshearX(y: number, z: number): this {\n\t\t// prettier-ignore\n\t\treturn this.transform(new M4([\n\t\t\t1, y, z, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1]))\n\t}\n\n\tfoo(): this {\n\t\treturn this.transform(M4.FOO)\n\t}\n\n\tbar(): this {\n\t\treturn this.transform(M4.BAR)\n\t}\n\n\tabstract transform(m4: M4, desc?: string): this\n\n\tvisit<R>(visitor: { [name: string]: (this: Transformable) => R }): R\n\tvisit<R, A>(visitor: { [name: string]: (this: Transformable, a: A) => R }, a: A): R\n\tvisit<R, A, B>(visitor: { [name: string]: (this: Transformable, a: A, b: B) => R }, a: A, b: B): R\n\tvisit<R, A, B, C>(visitor: { [name: string]: (this: Transformable, a: A, b: B, c: C) => R }, a: A, b: B, c: C): R\n\tvisit<R, A, B, C, D>(\n\t\tvisitor: { [name: string]: (this: Transformable, a: A, b: B, c: C, d: D) => R },\n\t\ta: A,\n\t\tb: B,\n\t\tc: C,\n\t\td: D,\n\t): R\n\tvisit(visitor: { [name: string]: (this: Transformable, ...args: any[]) => any }, ...args: any[]) {\n\t\tlet proto = Object.getPrototypeOf(this)\n\t\t// walk up the prototype chain until we find a defined function in o\n\t\twhile (!visitor.hasOwnProperty(proto.constructor.name) && proto !== Transformable.prototype) {\n\t\t\tproto = Object.getPrototypeOf(proto)\n\t\t}\n\t\tif (visitor.hasOwnProperty(proto.constructor.name)) {\n\t\t\treturn visitor[proto.constructor.name].apply(this, args)\n\t\t} else {\n\t\t\tthrow new Error('No implementation for ' + this.constructor.name)\n\t\t}\n\t}\n}\n","import { JavaMap } from 'javasetmap.ts'\r\n\r\nimport { Matrix } from './Matrix'\r\nimport {\r\n\taddOwnProperties,\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertf,\r\n\tassertInst,\r\n\tassertInts,\r\n\tassertNumbers,\r\n\tassertVectors,\r\n\tcallsce,\r\n\tDEG,\r\n\teq,\r\n\teq0,\r\n\tint,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n\tsolveCubicReal2,\r\n} from './NLA'\r\nimport { Transformable } from './Transformable'\r\nimport { V3 } from './V3'\r\nimport { VV } from './Vector'\r\n\r\nconst { PI, abs } = Math\r\n\r\n// tslint:enable:member-ordering\r\nexport class M4 extends Matrix {\r\n\t/**\r\n\t * A simple (consists of integers), regular, non-orthogonal matrix, useful mainly for testing.\r\n\t * M4.BAR = M4.FOO.inverse()\r\n\t */\r\n\t// prettier-ignore\r\n\tstatic readonly FOO = new M4(\r\n\t\t0,   1,   1,    2,\r\n\t\t0.3, 0.4, 0.8, 13,\r\n\t\t2.1, 3.4, 5.5,  8.9,\r\n\t\t0,   0,   0,    1)\r\n\tstatic readonly BAR = M4.FOO.inversed()\r\n\tstatic readonly IDENTITY = M4.identity()\r\n\tstatic readonly YZX = M4.forSys(V3.Y, V3.Z, V3.X)\r\n\tstatic readonly ZXY = M4.forSys(V3.Z, V3.X, V3.Y)\r\n\t// prettier-ignore\r\n\tstatic IDENTITY3 = new M4(\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 0,\r\n\t)\r\n\tstatic readonly temp0 = new M4()\r\n\tstatic readonly temp1 = new M4()\r\n\tstatic readonly temp2 = new M4()\r\n\r\n\tstatic readonly NAMEMAP = new JavaMap<M4, string>()\r\n\t\t.set(M4.IDENTITY3, 'M4.IDENTITY3')\r\n\t\t.set(M4.FOO, 'M4.FOO')\r\n\t\t.set(M4.BAR, 'M4.BAR')\r\n\t\t.set(M4.IDENTITY, 'M4.IDENTITY')\r\n\t\t.set(M4.ZXY, 'M4.ZXY')\r\n\t\t.set(M4.YZX, 'M4.YZX')\r\n\treadonly m: Float64Array\r\n\r\n\t/**\r\n\t * Takes 16 arguments in row-major order, which can be passed individually, as a list, or even as\r\n\t * four lists, one for each row. If the arguments are omitted then the identity matrix is constructed instead.\r\n\t */\r\n\tconstructor(...var_args: (number | number[])[]) {\r\n\t\tlet m\r\n\t\tif (0 == arguments.length) {\r\n\t\t\tm = new Float64Array(16)\r\n\t\t} else {\r\n\t\t\tconst flattened = Array.prototype.concat.apply([], arguments)\r\n\t\t\tassert(flattened.length == 16, 'flattened.length == 16 ' + flattened.length)\r\n\t\t\tm = new Float64Array(flattened)\r\n\t\t}\r\n\t\tsuper(4, 4, m)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the matrix that when multiplied with `matrix` results in the\r\n\t * identity matrix. You can optionally pass an existing matrix in `result`\r\n\t * to avoid allocating a new matrix. This implementation is from the Mesa\r\n\t * OpenGL function `__gluInvertMatrixd()` found in `project.c`.\r\n\t */\r\n\tstatic inverse(matrix: M4, result: M4 = new M4()): M4 {\r\n\t\treturn matrix.inversed4(result) as M4\r\n\t}\r\n\r\n\t/**\r\n\t * Create new dim x dim matrix equal to an identity matrix with rows/colums i and k swapped. Note that i and k\r\n\t * are 0-indexed.\r\n\t */\r\n\tstatic permutation4(i: int, k: int, result = new M4()): Matrix {\r\n\t\tassertInts(i, k)\r\n\t\tassertf(() => 0 <= i && i < 4)\r\n\t\tassertf(() => 0 <= k && k < 4)\r\n\t\tconst m = result.m\r\n\t\tM4.identity(result)\r\n\t\tm[i * 4 + i] = 0\r\n\t\tm[k * 4 + k] = 0\r\n\t\tm[i * 4 + k] = 1\r\n\t\tm[k * 4 + i] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns `matrix`, exchanging columns for rows. You can optionally pass an\r\n\t * existing matrix in `result` to avoid allocating a new matrix.\r\n\t */\r\n\tstatic transpose(matrix: M4, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, matrix)\r\n\t\tassertInst(M4, result)\r\n\t\tassert(matrix != result, 'matrix != result')\r\n\t\tconst m = matrix.m,\r\n\t\t\tr = result.m\r\n\t\tr[0] = m[0]\r\n\t\tr[1] = m[4]\r\n\t\tr[2] = m[8]\r\n\t\tr[3] = m[12]\r\n\t\tr[4] = m[1]\r\n\t\tr[5] = m[5]\r\n\t\tr[6] = m[9]\r\n\t\tr[7] = m[13]\r\n\t\tr[8] = m[2]\r\n\t\tr[9] = m[6]\r\n\t\tr[10] = m[10]\r\n\t\tr[11] = m[14]\r\n\t\tr[12] = m[3]\r\n\t\tr[13] = m[7]\r\n\t\tr[14] = m[11]\r\n\t\tr[15] = m[15]\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the concatenation of the transforms for `left` and `right`.\r\n\t */\r\n\tstatic multiply(left: M4, right: M4, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, left, right)\r\n\t\tassertInst(M4, result)\r\n\t\tassert(left != result, 'left != result')\r\n\t\tassert(right != result, 'right != result')\r\n\t\tconst a = left.m,\r\n\t\t\tb = right.m,\r\n\t\t\tr = result.m\r\n\r\n\t\tr[0] = a[0] * b[0] + a[1] * b[4] + (a[2] * b[8] + a[3] * b[12])\r\n\t\tr[1] = a[0] * b[1] + a[1] * b[5] + (a[2] * b[9] + a[3] * b[13])\r\n\t\tr[2] = a[0] * b[2] + a[1] * b[6] + (a[2] * b[10] + a[3] * b[14])\r\n\t\tr[3] = a[0] * b[3] + a[1] * b[7] + (a[2] * b[11] + a[3] * b[15])\r\n\r\n\t\tr[4] = a[4] * b[0] + a[5] * b[4] + (a[6] * b[8] + a[7] * b[12])\r\n\t\tr[5] = a[4] * b[1] + a[5] * b[5] + (a[6] * b[9] + a[7] * b[13])\r\n\t\tr[6] = a[4] * b[2] + a[5] * b[6] + (a[6] * b[10] + a[7] * b[14])\r\n\t\tr[7] = a[4] * b[3] + a[5] * b[7] + (a[6] * b[11] + a[7] * b[15])\r\n\r\n\t\tr[8] = a[8] * b[0] + a[9] * b[4] + (a[10] * b[8] + a[11] * b[12])\r\n\t\tr[9] = a[8] * b[1] + a[9] * b[5] + (a[10] * b[9] + a[11] * b[13])\r\n\t\tr[10] = a[8] * b[2] + a[9] * b[6] + (a[10] * b[10] + a[11] * b[14])\r\n\t\tr[11] = a[8] * b[3] + a[9] * b[7] + (a[10] * b[11] + a[11] * b[15])\r\n\r\n\t\tr[12] = a[12] * b[0] + a[13] * b[4] + (a[14] * b[8] + a[15] * b[12])\r\n\t\tr[13] = a[12] * b[1] + a[13] * b[5] + (a[14] * b[9] + a[15] * b[13])\r\n\t\tr[14] = a[12] * b[2] + a[13] * b[6] + (a[14] * b[10] + a[15] * b[14])\r\n\t\tr[15] = a[12] * b[3] + a[13] * b[7] + (a[14] * b[11] + a[15] * b[15])\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic product(...m4s: M4[]): M4\r\n\tstatic product(m4s: M4[], result?: M4): M4\r\n\tstatic product(...args: any[]): M4 {\r\n\t\tconst [m4s, result]: [M4[], M4] = Array.isArray(args[0]) ? [args[0], args[1]] : [args, new M4()]\r\n\t\tif (0 == m4s.length) return M4.identity(result)\r\n\t\tif (1 == m4s.length) return M4.copy(m4s[0], result)\r\n\t\tif (2 == m4s.length) return M4.multiply(m4s[0], m4s[1], result)\r\n\t\tlet a = M4.temp0,\r\n\t\t\tb = M4.temp1\r\n\t\tM4.multiply(m4s[0], m4s[1], a)\r\n\t\tfor (let i = 2; i < m4s.length - 1; i++) {\r\n\t\t\tM4.multiply(a, m4s[i], b)\r\n\t\t\t;[a, b] = [b, a]\r\n\t\t}\r\n\t\treturn M4.multiply(a, m4s.last, result)\r\n\t}\r\n\r\n\tstatic forSys(e0: V3, e1: V3, e2: V3 = e0.cross(e1), origin: V3 = V3.O): M4 {\r\n\t\tassertVectors(e0, e1, e2, origin)\r\n\t\t// prettier-ignore\r\n\t\treturn new M4(\r\n\t\t\te0.x, e1.x, e2.x, origin.x,\r\n\t\t\te0.y, e1.y, e2.y, origin.y,\r\n\t\t\te0.z, e1.z, e2.z, origin.z,\r\n\t\t\t0, 0, 0, 1)\r\n\t}\r\n\r\n\tstatic forRows(n0: V3, n1: V3, n2: V3, n3: V3 = V3.O): M4 {\r\n\t\tassertVectors(n0, n1, n2, n3)\r\n\t\t// prettier-ignore\r\n\t\treturn new M4(\r\n\t\t\tn0.x, n0.y, n0.z, 0,\r\n\t\t\tn1.x, n1.y, n1.z, 0,\r\n\t\t\tn2.x, n2.y, n2.z, 0,\r\n\t\t\tn3.x, n3.y, n3.z, 1)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an identity matrix. You can optionally pass an existing matrix in `result` to avoid allocating a new\r\n\t * matrix. This emulates the OpenGL function `glLoadIdentity()`\r\n\t *\r\n\t * Unless initializing a matrix to be modified, use M4.IDENTITY\r\n\t */\r\n\tstatic identity(result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tm[0] = m[5] = m[10] = m[15] = 1\r\n\t\tm[1] = m[2] = m[3] = m[4] = m[6] = m[7] = m[8] = m[9] = m[11] = m[12] = m[13] = m[14] = 0\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Creates a new M4 initialized by a user defined callback function\r\n\t *\r\n\t * @param f signature: (elRow, elCol, elIndex) =>\r\n\t *     el, where elIndex is the row-major index, i.e. eLindex == elRow * 4 + elCol\r\n\t * @param result\r\n\t */\r\n\tstatic fromFunction4(f: (elRow: number, elCol: number, elIndex: number) => number, result: M4 = new M4()): M4 {\r\n\t\tassert(typeof f == 'function')\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tlet i = 16\r\n\t\twhile (i--) {\r\n\t\t\tm[i] = f(Math.floor(i / 4), i % 4, i)\r\n\t\t}\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a perspective transform matrix, which makes far away objects appear smaller than nearby objects. The\r\n\t * `aspect` argument should be the width divided by the height of your viewport and `fov` is the top-to-bottom angle\r\n\t * of the field of view in degrees. You can optionally pass an existing matrix in `result` to avoid allocating a new\r\n\t * matrix. This emulates the OpenGL function `gluPerspective()`.\r\n\t * {@see perspectiveRad}\r\n\t * perspectiveRad\r\n\t * @param fovDegrees in degrees\r\n\t * @param aspect aspect ratio = width/height of viewport\r\n\t */\r\n\tstatic perspective(fovDegrees: number, aspect: number, near: number, far: number, result: M4 = new M4()): M4 {\r\n\t\treturn M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, result)\r\n\t}\r\n\r\n\tstatic perspectiveRad(fov: raddd, aspect: number, near: number, far: number, result: M4 = new M4()): M4 {\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(fov, aspect, near, far)\r\n\t\tconst y = Math.tan(fov / 2) * near\r\n\t\tconst x = y * aspect\r\n\t\treturn M4.frustum(-x, x, -y, y, near, far, result)\r\n\t}\r\n\r\n\tstatic perspectivePlane(vanishingPlane: { normal1: V3; w: number }, result: M4 = new M4()) {\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tm[0] = 1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 1\r\n\t\tm[6] = 0\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = 1\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = vanishingPlane.normal1.x\r\n\t\tm[13] = vanishingPlane.normal1.y\r\n\t\tm[14] = vanishingPlane.normal1.z\r\n\t\tm[15] = -vanishingPlane.w\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t// the OpenGL function `glFrustum()`.\r\n\tstatic frustum(\r\n\t\tleft: number,\r\n\t\tright: number,\r\n\t\tbottom: number,\r\n\t\ttop: number,\r\n\t\tnear: number,\r\n\t\tfar: number,\r\n\t\tresult: M4 = new M4(),\r\n\t): M4 {\r\n\t\tassertNumbers(left, right, bottom, top, near, far)\r\n\t\tassert(0 < near, '0 < near')\r\n\t\tassert(near < far, 'near < far')\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = (2 * near) / (right - left)\r\n\t\tm[1] = 0\r\n\t\tm[2] = (right + left) / (right - left)\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = (2 * near) / (top - bottom)\r\n\t\tm[6] = (top + bottom) / (top - bottom)\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -(far + near) / (far - near)\r\n\t\tm[11] = (-2 * far * near) / (far - near)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = -1\r\n\t\tm[15] = 0\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 representing the a projection through/towards a point onto a plane.\r\n\t */\r\n\tstatic projectPlanePoint(p: V3, plane: { normal1: V3; w: number }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(p, plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\t\tconst n = plane.normal1,\r\n\t\t\tw = plane.w\r\n\t\tconst np = n.dot(p)\r\n\r\n\t\tm[0] = p.x * n.x + w - np\r\n\t\tm[1] = p.x * n.y\r\n\t\tm[2] = p.x * n.z\r\n\t\tm[3] = -w * p.x\r\n\r\n\t\tm[4] = p.y * n.x\r\n\t\tm[5] = p.y * n.y + w - np\r\n\t\tm[6] = p.y * n.z\r\n\t\tm[7] = -w * p.y\r\n\r\n\t\tm[8] = p.z * n.x\r\n\t\tm[9] = p.z * n.y\r\n\t\tm[10] = p.z * n.z + w - np\r\n\t\tm[11] = -w * p.z\r\n\r\n\t\tm[12] = n.x\r\n\t\tm[13] = n.y\r\n\t\tm[14] = n.z\r\n\t\tm[15] = -np\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Orthographic/orthogonal projection. Transforms the cuboid with the dimensions X: [left right] Y: [bottom, top]\r\n\t * Z: [near far] to the cuboid X: [-1, 1] Y [-1, 1] Z [-1, 1]\r\n\t */\r\n\tstatic ortho(\r\n\t\tleft: number,\r\n\t\tright: number,\r\n\t\tbottom: number,\r\n\t\ttop: number,\r\n\t\tnear: number,\r\n\t\tfar: number,\r\n\t\tresult: M4 = new M4(),\r\n\t): M4 {\r\n\t\tassertNumbers(left, right, bottom, top, near, far)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 2 / (right - left)\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = -(right + left) / (right - left)\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 2 / (top - bottom)\r\n\t\tm[6] = 0\r\n\t\tm[7] = -(top + bottom) / (top - bottom)\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -2 / (far - near)\r\n\t\tm[11] = -(far + near) / (far - near)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * This emulates the OpenGL function `glScale()`. You can optionally pass an existing matrix in `result` to avoid\r\n\t * allocating a new matrix.\r\n\t */\r\n\tstatic scale(x: number, y: number, z?: number, result?: M4): M4\r\n\r\n\tstatic scale(scale: number, result?: M4): M4\r\n\r\n\tstatic scale(v: V3, result?: M4): M4\r\n\r\n\tstatic scale(...args: any[]): M4 {\r\n\t\tlet x: number, y: number, z: number, result: M4\r\n\t\tif (args[0] instanceof V3) {\r\n\t\t\tassert(args.length <= 2)\r\n\t\t\t;({ x, y, z } = args[0])\r\n\t\t\tresult = args[1]\r\n\t\t} else if ('number' != typeof args[1]) {\r\n\t\t\tx = y = z = args[0]\r\n\t\t\tresult = args[1]\r\n\t\t} else {\r\n\t\t\tassert(args.length <= 4)\r\n\t\t\tx = args[0]\r\n\t\t\ty = args[1]\r\n\t\t\tz = undefined != args[2] ? args[2] : 1\r\n\t\t\tresult = args[3]\r\n\t\t}\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(x, y, z)\r\n\r\n\t\tconst m = result.m\r\n\t\tm[0] = x\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = y\r\n\t\tm[6] = 0\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = z\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * This emulates the OpenGL function `glTranslate()`. You can optionally pass\r\n\t * an existing matrix in `result` to avoid allocating a new matrix.\r\n\t */\r\n\tstatic translate(x: number, y?: number, z?: number, result?: M4): M4\r\n\r\n\tstatic translate(v: V3, result?: M4): M4\r\n\r\n\tstatic translate(...args: any[]): M4 {\r\n\t\tlet x, y, z, result\r\n\t\tif (args[0] instanceof V3) {\r\n\t\t\tassert(args.length <= 2)\r\n\t\t\t;({ x, y, z } = args[0])\r\n\t\t\tresult = args[1]\r\n\t\t} else {\r\n\t\t\tassert(args.length <= 4)\r\n\t\t\tx = args[0]\r\n\t\t\ty = undefined != args[1] ? args[1] : 0\r\n\t\t\tz = undefined != args[2] ? args[2] : 0\r\n\t\t\tresult = args[3]\r\n\t\t}\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tassertNumbers(x, y, z)\r\n\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = x\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = 1\r\n\t\tm[6] = 0\r\n\t\tm[7] = y\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = 1\r\n\t\tm[11] = z\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix that rotates by `a` degrees around the vector (x, y, z). You can optionally pass an existing\r\n\t * matrix in `result` to avoid allocating a new matrix. This emulates the OpenGL function `glRotate()`.\r\n\t */\r\n\t//static rotation(radians: raddd, x: number, y: number, z: number, result?: M4): M4\r\n\tstatic rotate(radians: raddd, v: { x: number; y: number; z: number }, result?: M4): M4 {\r\n\t\tundefined == result && (result = new M4())\r\n\t\tassertInst(M4, result)\r\n\t\tlet { x, y, z } = v\r\n\t\tassert(!new V3(x, y, z).likeO(), '!V(x, y, z).likeO()')\r\n\t\tconst m = result.m\r\n\r\n\t\tconst d = Math.sqrt(x * x + y * y + z * z)\r\n\t\tx /= d\r\n\t\ty /= d\r\n\t\tz /= d\r\n\t\tconst cos = Math.cos(radians),\r\n\t\t\tsin = Math.sin(radians),\r\n\t\t\tt = 1 - cos\r\n\r\n\t\tm[0] = x * x * t + cos\r\n\t\tm[1] = x * y * t - z * sin\r\n\t\tm[2] = x * z * t + y * sin\r\n\t\tm[3] = 0\r\n\r\n\t\tm[4] = y * x * t + z * sin\r\n\t\tm[5] = y * y * t + cos\r\n\t\tm[6] = y * z * t - x * sin\r\n\t\tm[7] = 0\r\n\r\n\t\tm[8] = z * x * t - y * sin\r\n\t\tm[9] = z * y * t + x * sin\r\n\t\tm[10] = z * z * t + cos\r\n\t\tm[11] = 0\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a matrix that puts the camera at the eye point `ex, ey, ez` looking\r\n\t * toward the center point `cx, cy, cz` with an up direction of `ux, uy, uz`.\r\n\t * You can optionally pass an existing matrix in `result` to avoid allocating\r\n\t * a new matrix. This emulates the OpenGL function `gluLookAt()`.\r\n\t */\r\n\tstatic lookAt(eye: V3, focus: V3, up: V3, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(eye, focus, up)\r\n\t\tassertInst(M4, result)\r\n\r\n\t\tconst m = result.m\r\n\r\n\t\tconst f = eye.minus(focus).unit()\r\n\t\tconst s = up.cross(f).unit()\r\n\t\tconst t = f.cross(s).unit()\r\n\r\n\t\tm[0] = s.x\r\n\t\tm[1] = s.y\r\n\t\tm[2] = s.z\r\n\t\tm[3] = -s.dot(eye)\r\n\r\n\t\tm[4] = t.x\r\n\t\tm[5] = t.y\r\n\t\tm[6] = t.z\r\n\t\tm[7] = -t.dot(eye)\r\n\r\n\t\tm[8] = f.x\r\n\t\tm[9] = f.y\r\n\t\tm[10] = f.z\r\n\t\tm[11] = -f.dot(eye)\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the X axis\r\n\t */\r\n\tstatic rotateX(radians: raddd): M4 {\r\n\t\tassertNumbers(radians)\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [1, 0, 0, 0, 0, cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the Y axis\r\n\t */\r\n\tstatic rotateY(radians: raddd): M4 {\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [cos, 0, sin, 0, 0, 1, 0, 0, -sin, 0, cos, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * Create a rotation matrix for rotating around the Z axis\r\n\t */\r\n\tstatic rotateZ(radians: raddd): M4 {\r\n\t\tconst sin = Math.sin(radians),\r\n\t\t\tcos = Math.cos(radians)\r\n\t\tconst els = [cos, -sin, 0, 0, sin, cos, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1]\r\n\t\treturn new M4(els)\r\n\t}\r\n\r\n\t/**\r\n\t * New rotation matrix such that result.transformVector(a).isParallelTo(b) through smallest rotation.\r\n\t * Performs no scaling.\r\n\t */\r\n\tstatic rotateAB(a: V3, b: V3, result: M4 = new M4()): M4 {\r\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\r\n\t\tassertVectors(a, b)\r\n\t\tassertInst(M4, result)\r\n\t\tconst rotationAxis = a.cross(b),\r\n\t\t\trotationAxisLength = rotationAxis.length()\r\n\t\tif (eq0(rotationAxisLength)) {\r\n\t\t\treturn M4.identity(result)\r\n\t\t}\r\n\t\tconst radians = Math.atan2(rotationAxisLength, a.dot(b))\r\n\t\treturn M4.rotateLine(V3.O, rotationAxis, radians, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Matrix for rotation about arbitrary line defined by an anchor point and direction.\r\n\t * rotationAxis does not need to be unit\r\n\t */\r\n\tstatic rotateLine(rotationAnchor: V3, rotationAxis: V3, radians: raddd, result: M4 = new M4()): M4 {\r\n\t\t// see http://inside.mines.edu/fs_home/gmurray/ArbitraryAxisRotation/\r\n\t\tassertVectors(rotationAnchor, rotationAxis)\r\n\t\tassertNumbers(radians)\r\n\t\tassertInst(M4, result)\r\n\t\trotationAxis = rotationAxis.unit()\r\n\r\n\t\tconst ax = rotationAnchor.x,\r\n\t\t\tay = rotationAnchor.y,\r\n\t\t\taz = rotationAnchor.z,\r\n\t\t\tdx = rotationAxis.x,\r\n\t\t\tdy = rotationAxis.y,\r\n\t\t\tdz = rotationAxis.z\r\n\t\tconst m = result.m,\r\n\t\t\tcos = Math.cos(radians),\r\n\t\t\tsin = Math.sin(radians)\r\n\r\n\t\tm[0] = dx * dx + (dy * dy + dz * dz) * cos\r\n\t\tm[1] = dx * dy * (1 - cos) - dz * sin\r\n\t\tm[2] = dx * dz * (1 - cos) + dy * sin\r\n\t\tm[3] = (ax * (dy * dy + dz * dz) - dx * (ay * dy + az * dz)) * (1 - cos) + (ay * dz - az * dy) * sin\r\n\r\n\t\tm[4] = dx * dy * (1 - cos) + dz * sin\r\n\t\tm[5] = dy * dy + (dx * dx + dz * dz) * cos\r\n\t\tm[6] = dy * dz * (1 - cos) - dx * sin\r\n\t\tm[7] = (ay * (dx * dx + dz * dz) - dy * (ax * dx + az * dz)) * (1 - cos) + (az * dx - ax * dz) * sin\r\n\r\n\t\tm[8] = dx * dz * (1 - cos) - dy * sin\r\n\t\tm[9] = dy * dz * (1 - cos) + dx * sin\r\n\t\tm[10] = dz * dz + (dx * dx + dy * dy) * cos\r\n\t\tm[11] = (az * (dx * dx + dy * dy) - dz * (ax * dx + ay * dy)) * (1 - cos) + (ax * dy - ay * dx) * sin\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Create an affine matrix for mirroring into an arbitrary plane:\r\n\t */\r\n\tstatic mirror(plane: { normal1: V3; w: number }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst [nx, ny, nz] = plane.normal1\r\n\t\tconst w = plane.w\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = 1.0 - 2.0 * nx * nx\r\n\t\tm[1] = -2.0 * ny * nx\r\n\t\tm[2] = -2.0 * nz * nx\r\n\t\tm[3] = 2.0 * nx * w\r\n\r\n\t\tm[4] = -2.0 * nx * ny\r\n\t\tm[5] = 1.0 - 2.0 * ny * ny\r\n\t\tm[6] = -2.0 * nz * ny\r\n\t\tm[7] = 2.0 * ny * w\r\n\r\n\t\tm[8] = -2.0 * nx * nz\r\n\t\tm[9] = -2.0 * ny * nz\r\n\t\tm[10] = 1.0 - 2.0 * nz * nz\r\n\t\tm[11] = 2.0 * nz * w\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t *\r\n\t * @param plane\r\n\t * @param dir Projection direction. Optional, if not specified plane normal1 will be used.\r\n\t * @param result {@see M4}\r\n\t */\r\n\tstatic project(plane: { normal1: V3; w: number }, dir: V3 = plane.normal1, result: M4 = new M4()): M4 {\r\n\t\t// TODO: doc\r\n\r\n\t\t// plane.normal1 DOT (p + lambda * dir) = w (1)\r\n\t\t// extract lambda:\r\n\t\t// plane.normal1 DOT p + lambda * plane.normal1 DOT dir = w\r\n\t\t// lambda = (w - plane.normal1 DOT p) / plane.normal1 DOT dir\r\n\t\t// result = p + lambda * dir\r\n\t\t// result = p + dir * (w - plane.normal1 DOT p) / plane.normal1 DOT dir\r\n\t\t// result =  w * dir / (plane.normal1 DOT dir) + p - plane.normal1 DOT p * dir / (plane.normal1 DOT dir) *\r\n\r\n\t\t//  a + d * (w - n . a) / (nd)\r\n\t\t//  a + dw - d * na\r\n\t\tassertVectors(dir, plane.normal1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst w = plane.w\r\n\t\tconst m = result.m\r\n\t\tconst nd = plane.normal1.dot(dir)\r\n\t\tconst { x: nx, y: ny, z: nz } = plane.normal1\r\n\t\tconst { x: dx, y: dy, z: dz } = dir.div(nd)\r\n\t\t/*\r\n\t\t rejectedFrom: return this.minus(b.times(this.dot(b) / b.dot(b)))\r\n\t\t return M4.forSys(\r\n\t\t V3.X.rejectedFrom(plane.normal1),\r\n\t\t V3.Y.rejectedFrom(plane.normal1),\r\n\t\t V3.Z.rejectedFrom(plane.normal1),\r\n\t\t plane.anchor,\r\n\t\t result\r\n\t\t )\r\n\t\t */\r\n\r\n\t\tm[0] = 1.0 - nx * dx\r\n\t\tm[1] = -ny * dx\r\n\t\tm[2] = -nz * dx\r\n\t\tm[3] = dx * w\r\n\r\n\t\tm[4] = -nx * dy\r\n\t\tm[5] = 1.0 - ny * dy\r\n\t\tm[6] = -nz * dy\r\n\t\tm[7] = dy * w\r\n\r\n\t\tm[8] = -nx * dz\r\n\t\tm[9] = -ny * dz\r\n\t\tm[10] = 1.0 - nz * dz\r\n\t\tm[11] = dz * w\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic lineProjection(line: { anchor: V3; dir1: V3 }, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(line.anchor, line.dir1)\r\n\t\tassertInst(M4, result)\r\n\t\tconst ax = line.anchor.x,\r\n\t\t\tay = line.anchor.y,\r\n\t\t\taz = line.anchor.z\r\n\t\tconst dx = line.dir1.x,\r\n\t\t\tdy = line.dir1.y,\r\n\t\t\tdz = line.dir1.z\r\n\t\tconst m = result.m\r\n\r\n\t\t/*\r\n\t\t projectedOn: return b.times(this.dot(b) / b.dot(b))\r\n\t\t */\r\n\r\n\t\tm[0] = dx * dx\r\n\t\tm[1] = dx * dy\r\n\t\tm[2] = dx * dz\r\n\t\tm[3] = ax\r\n\r\n\t\tm[4] = dy * dx\r\n\t\tm[5] = dy * dy\r\n\t\tm[6] = dy * dz\r\n\t\tm[7] = ay\r\n\r\n\t\tm[8] = dz * dx\r\n\t\tm[9] = dz * dy\r\n\t\tm[10] = dz * dz\r\n\t\tm[11] = az\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\tstatic pointInversion(p: V3, result: M4 = new M4()): M4 {\r\n\t\tassertVectors(p)\r\n\t\tassertInst(M4, result)\r\n\t\tconst m = result.m\r\n\r\n\t\tm[0] = -1\r\n\t\tm[1] = 0\r\n\t\tm[2] = 0\r\n\t\tm[3] = 2 * p.x\r\n\r\n\t\tm[4] = 0\r\n\t\tm[5] = -1\r\n\t\tm[6] = 0\r\n\t\tm[7] = 2 * p.y\r\n\r\n\t\tm[8] = 0\r\n\t\tm[9] = 0\r\n\t\tm[10] = -1\r\n\t\tm[11] = 2 * p.z\r\n\r\n\t\tm[12] = 0\r\n\t\tm[13] = 0\r\n\t\tm[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\tprotected static new(width: int, height: int, m: Float64Array) {\r\n\t\tassert(4 == width && 4 == height)\r\n\t\treturn new M4(...m)\r\n\t}\r\n\r\n\tget X(): V3 {\r\n\t\treturn this.transformVector(V3.X)\r\n\t}\r\n\r\n\tget Y(): V3 {\r\n\t\treturn this.transformVector(V3.Y)\r\n\t}\r\n\r\n\tget Z(): V3 {\r\n\t\treturn this.transformVector(V3.Z)\r\n\t}\r\n\r\n\tget O(): V3 {\r\n\t\treturn this.getTranslation()\r\n\t}\r\n\r\n\tisMirror(precision = NLA_PRECISION) {\r\n\t\tconst m = this.m\r\n\t\tconst nx = Math.sqrt((1 - m[0]) / 2)\r\n\t\tconst ny = Math.sqrt((1 - m[5]) / 2)\r\n\t\tconst nz = Math.sqrt((1 - m[10]) / 2)\r\n\r\n\t\treturn (\r\n\t\t\teq(m[1], -2.0 * ny * nx, precision) &&\r\n\t\t\teq(m[2], -2.0 * nz * nx, precision) &&\r\n\t\t\teq(m[4], -2.0 * nx * ny, precision) &&\r\n\t\t\teq(m[6], -2.0 * nz * ny, precision) &&\r\n\t\t\teq(m[8], -2.0 * nx * nz, precision) &&\r\n\t\t\teq(m[9], -2.0 * ny * nz, precision) &&\r\n\t\t\teq(m[12], 0, precision) &&\r\n\t\t\teq(m[13], 0, precision) &&\r\n\t\t\teq(m[14], 0, precision) &&\r\n\t\t\teq(m[15], 1, precision) &&\r\n\t\t\teq(m[3] * ny, m[7] * nx, precision) &&\r\n\t\t\teq(m[7] * nz, m[11] * ny, precision) &&\r\n\t\t\teq(m[11] * nx, m[3] * nz, precision)\r\n\t\t)\r\n\t}\r\n\r\n\t// ### GL.Matrix.frustum(left, right, bottom, top, near, far[, result])\r\n\t//\r\n\t// Sets up a viewing frustum, which is shaped like a truncated pyramid with the\r\n\t// camera where the point of the pyramid would be. You can optionally pass an\r\n\t// existing matrix in `result` to avoid allocating a new matrix. This emulates\r\n\r\n\t/**\r\n\t * Returns a new M4 which is equal to the inverse of this.\r\n\t */\r\n\tinversed(result?: M4): M4 {\r\n\t\treturn M4.inverse(this, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Matrix trace is defined as the sum of the elements of the main diagonal.\r\n\t */\r\n\ttrace(): number {\r\n\t\treturn this.m[0] + this.m[5] + this.m[10] + this.m[15]\r\n\t}\r\n\r\n\tas3x3(result?: M4): M4 {\r\n\t\t result = M4.copy<M4>(this, result)\r\n\t\t\tconst m = result.m\r\n\r\n\t\tm[3] = m[7] = m[11] = m[12] = m[13] = m[14] = 0\r\n\t\tm[15] = 1\r\n\t\treturn result\r\n\t}\r\n\r\n\ttransform(m4: M4): this {\r\n\t\treturn m4.times(this) as this\r\n\t}\r\n\r\n\trealEigenValues3(): number[] {\r\n\t\tconst m = this.m\r\n\t\tassert(0 == m[12] && 0 == m[13] && 0 == m[14])\r\n\t\t// determinant of (this - λI):\r\n\t\t// | a-λ  b   c  |\r\n\t\t// |  d  e-λ  f  | = -λ^3 + λ^2 (a+e+i) + λ (-a e-a i+b d+c g-e i+f h) + a(ei - fh) - b(di - fg) + c(dh - eg)\r\n\t\t// |  g   h  i-λ |\r\n\r\n\t\tconst [a, b, c, , d, e, f, , g, h, i] = m\r\n\t\t// det(this - λI) = -λ^3 +λ^2 (a+e+i) + λ (-a e-a i-b d+c g-e i+f h)+ (a e i-a f h-b d i+b f g+c d h-c e g)\r\n\t\tconst s = -1\r\n\t\tconst t = a + e + i // equivalent to trace of matrix\r\n\t\tconst u = -a * e - a * i + b * d + c * g - e * i + f * h // equivalent to 1/2 (trace(this²) - trace²(A))\r\n\t\tconst w = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g) // equivalent to matrix determinant\r\n\r\n\t\tconsole.log(s, t, u, w)\r\n\t\treturn solveCubicReal2(s, t, u, w)\r\n\t}\r\n\r\n\trealEigenVectors3(): V3[] {\r\n\t\tconst eigenValues = this.realEigenValues3()\r\n\t\tconst this3x3 = this.times(M4.IDENTITY3)\r\n\t\tconsole.log(this.toString())\r\n\t\tconsole.log(this3x3.toString())\r\n\t\tlet mats = eigenValues.map(ev => M4.IDENTITY3.scale(-ev).plus(this3x3))\r\n\t\tconsole.log(mats.map(m => m.determinant3()))\r\n\t\tconsole.log(mats.map(m => '' + m.toString(v => '' + v)).join('\\n\\n'))\r\n\t\tconsole.log(mats.map(m => '' + m.gauss().U.toString(v => '' + v)).join('\\n\\n'))\r\n\t\tconsole.log('mats.map(m=>m.rank())', mats.map(m => m.rank()))\r\n\t\tif (1 == eigenValues.length) {\r\n\t\t\tconsole.log(mats[0].toString())\r\n\t\t\tassertf(() => 0 == mats[0].rank())\r\n\t\t\t// col vectors\r\n\t\t\treturn arrayFromFunction(3, col => new V3(this.m[col], this.m[4 + col], this.m[8 + col]))\r\n\t\t}\r\n\t\tif (2 == eigenValues.length) {\r\n\t\t\t// one matrix should have rank 1, the other rank 2\r\n\t\t\tif (1 == mats[0].rank()) {\r\n\t\t\t\tmats = [mats[1], mats[0]]\r\n\t\t\t}\r\n\t\t\tassertf(() => 2 == mats[0].rank())\r\n\t\t\tassertf(() => 1 == mats[1].rank())\r\n\r\n\t\t\t// mat[0] has rank 2, mat[1] has rank 1\r\n\t\t\tconst gauss0 = mats[0].gauss().U\r\n\t\t\tconst eigenVector0 = gauss0\r\n\t\t\t\t.row(0)\r\n\t\t\t\t.cross(gauss0.row(1))\r\n\t\t\t\t.V3()\r\n\t\t\t\t.unit()\r\n\r\n\t\t\tconst planeNormal = mats[1]\r\n\t\t\t\t.gauss()\r\n\t\t\t\t.U.row(0)\r\n\t\t\t\t.V3()\r\n\t\t\tconst eigenVector1 = planeNormal.getPerpendicular().unit()\r\n\t\t\tconst eigenVector2 = eigenVector0.cross(eigenVector1).rejectedFrom(planeNormal)\r\n\r\n\t\t\treturn [eigenVector0, eigenVector1, eigenVector2]\r\n\t\t}\r\n\t\tif (3 == eigenValues.length) {\r\n\t\t\tmats.forEach((mat, i) => assert(2 == mat.rank(), i + ': ' + mat.rank()))\r\n\t\t\t// the (A - lambda I) matrices map to a plane. This means, that there is an entire line in R³ which maps to\r\n\t\t\t// the point V3.O\r\n\t\t\treturn mats.map(mat => {\r\n\t\t\t\tconst gauss = mat.gauss().U\r\n\t\t\t\treturn gauss\r\n\t\t\t\t\t.row(0)\r\n\t\t\t\t\t.cross(gauss.row(1))\r\n\t\t\t\t\t.V3()\r\n\t\t\t\t\t.unit()\r\n\t\t\t})\r\n\t\t}\r\n\t\tthrow new Error('there cannot be more than 3 eigen values')\r\n\t}\r\n\r\n\t/**\r\n\t * U * SIGMA * VSTAR = this\r\n\t * U and VSTAR are orthogonal matrices\r\n\t * SIGMA is a diagonal matrix\r\n\t */\r\n\tsvd3(): { U: M4; SIGMA: M4; VSTAR: M4 } {\r\n\t\tfunction matrixForCS(i: int, k: int, c: number, s: number) {\r\n\t\t\tconst m = M4.identity()\r\n\t\t\tm.setEl(i, i, c)\r\n\t\t\tm.setEl(k, k, c)\r\n\t\t\tm.setEl(i, k, s)\r\n\t\t\tm.setEl(k, i, -s)\r\n\t\t\treturn m\r\n\t\t}\r\n\r\n\t\tconst A = this.as3x3()\r\n\t\tlet S = A.transposed().times(A),\r\n\t\t\tV = M4.identity()\r\n\t\tconsole.log(S.str)\r\n\t\tfor (let it = 0; it < 16; it++) {\r\n\t\t\tconsole.log('blahg\\n', V.times(S).times(V.transposed()).str)\r\n\t\t\tassert(\r\n\t\t\t\tV.times(S)\r\n\t\t\t\t\t.times(V.transposed())\r\n\t\t\t\t\t.likeM4(A.transposed().times(A)),\r\n\t\t\t\tV.times(S).times(V.transposed()).str,\r\n\t\t\t\tA.transposed().times(A).str,\r\n\t\t\t)\r\n\t\t\tlet maxOffDiagonal = 0,\r\n\t\t\t\tmaxOffDiagonalIndex = 1,\r\n\t\t\t\tj = 10\r\n\t\t\twhile (j--) {\r\n\t\t\t\tconst val = Math.abs(S.m[j])\r\n\t\t\t\tif (j % 4 != Math.floor(j / 4) && val > maxOffDiagonal) {\r\n\t\t\t\t\tmaxOffDiagonal = val\r\n\t\t\t\t\tmaxOffDiagonalIndex = j\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tconst i = Math.floor(maxOffDiagonalIndex / 4),\r\n\t\t\t\tk = maxOffDiagonalIndex % 4\r\n\t\t\tconst a_ii = S.m[5 * i],\r\n\t\t\t\ta_kk = S.m[5 * k],\r\n\t\t\t\ta_ik = S.m[maxOffDiagonalIndex]\r\n\t\t\tconst phi = a_ii === a_kk ? PI / 4 : Math.atan((2 * a_ik) / (a_ii - a_kk)) / 2\r\n\t\t\tconsole.log(maxOffDiagonalIndex, i, k, 'phi', phi)\r\n\t\t\tconst cos = Math.cos(phi),\r\n\t\t\t\tsin = Math.sin(phi)\r\n\t\t\tconst givensRotation = matrixForCS(i, k, cos, -sin)\r\n\t\t\tassert(\r\n\t\t\t\tgivensRotation\r\n\t\t\t\t\t.transposed()\r\n\t\t\t\t\t.times(givensRotation)\r\n\t\t\t\t\t.likeIdentity(),\r\n\t\t\t)\r\n\t\t\tconsole.log(givensRotation.str)\r\n\t\t\tV = V.times(givensRotation)\r\n\t\t\tS = M4.product(givensRotation.transposed(), S, givensRotation)\r\n\t\t\tconsole.log(S.str)\r\n\t\t}\r\n\r\n\t\tconst sigma = S.map((el, elIndex) => (elIndex % 5 == 0 ? Math.sqrt(el) : 0))\r\n\t\treturn {\r\n\t\t\tU: M4.product(A, V, sigma.map((el, elIndex) => (elIndex % 5 == 0 ? 1 / el : 0))),\r\n\t\t\tSIGMA: sigma,\r\n\t\t\tVSTAR: V.transposed(),\r\n\t\t}\r\n\t}\r\n\r\n\tmap(fn: (el: number, elIndex: number, array: Float64Array) => number): M4 {\r\n\t\treturn M4.fromFunction4((x, y, i) => fn(this.m[i], i, this.m))\r\n\t}\r\n\r\n\tlikeM4(m4: M4): boolean {\r\n\t\tassertInst(M4, m4)\r\n\t\treturn this.m.every((el, index) => eq(el, m4.m[index]))\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 equal to the transpose of this.\r\n\t */\r\n\ttransposed(result?: M4): M4 {\r\n\t\treturn M4.transpose(this, result)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new M4 which equal to (this * matrix) (in that order)\r\n\t */\r\n\ttimes(matrix: M4): M4 {\r\n\t\treturn M4.multiply(this, matrix)\r\n\t}\r\n\r\n\t/**\r\n\t * In a perspective projection, parallel lines meet in a vanishing point.\r\n\t *\r\n\t * Returns undefined if there is no vanishing point, either because this is not a perspective transform,\r\n\t * or because the passed dir is perpendicular to the projections direction.\r\n\t *\r\n\t * @param dir\r\n\t */\r\n\tvanishingPoint(dir: V3) {\r\n\t\tassertVectors(dir)\r\n\t\tconst m = this.m\r\n\t\tconst vx = dir.x,\r\n\t\t\tvy = dir.y,\r\n\t\t\tvz = dir.z\r\n\t\tconst w = vx * m[12] + vy * m[13] + vz * m[14]\r\n\t\tif (eq0(w)) return undefined\r\n\t\tconst x = vx * m[0] + vy * m[1] + vz * m[2]\r\n\t\tconst y = vx * m[4] + vy * m[5] + vz * m[6]\r\n\t\tconst z = vx * m[8] + vy * m[9] + vz * m[10]\r\n\t\treturn new V3(x / w, y / w, z / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the vector as a point with a w coordinate of 1. This means translations will have an effect, for\r\n\t * example.\r\n\t */\r\n\ttransformPoint(v: V3): V3 {\r\n\t\tassertVectors(v)\r\n\t\tconst m = this.m\r\n\t\tconst vx = v.x,\r\n\t\t\tvy = v.y,\r\n\t\t\tvz = v.z\r\n\t\tconst x = vx * m[0] + vy * m[1] + vz * m[2] + m[3]\r\n\t\tconst y = vx * m[4] + vy * m[5] + vz * m[6] + m[7]\r\n\t\tconst z = vx * m[8] + vy * m[9] + vz * m[10] + m[11]\r\n\t\tconst w = vx * m[12] + vy * m[13] + vz * m[14] + m[15]\r\n\t\t// scale such that fourth element becomes 1:\r\n\t\treturn new V3(x / w, y / w, z / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Transforms the vector as a vector with a w coordinate of 0. This means translations will have no effect, for\r\n\t * example. Will throw an exception if the calculated w component != 0. This occurs for example when attempting\r\n\t * to transform a vector with a perspective matrix.\r\n\t */\r\n\ttransformVector(v: V3, checkW = true): V3 {\r\n\t\tassertVectors(v)\r\n\t\tconst m = this.m\r\n\t\tconst w = v.x * m[12] + v.y * m[13] + v.z * m[14]\r\n\t\tcheckW && assert(eq0(w), () => 'w === 0 needs to be true for this to make sense (w =' + w + this.str)\r\n\t\treturn new V3(\r\n\t\t\tm[0] * v.x + m[1] * v.y + m[2] * v.z,\r\n\t\t\tm[4] * v.x + m[5] * v.y + m[6] * v.z,\r\n\t\t\tm[8] * v.x + m[9] * v.y + m[10] * v.z,\r\n\t\t)\r\n\t}\r\n\r\n\ttransformVector2(v: V3, anchor: V3): V3 {\r\n\t\t// v and anchor define a line(t) = anchor + t v\r\n\t\t// we can view the calculation of the transformed vector as the derivative of the transformed line at t = 0\r\n\t\t// d/dt (this * line(t)) (0)\r\n\t\tassertVectors(v, anchor)\r\n\t\tconst transformedAnchor = this.timesVector(VV(anchor.x, anchor.y, anchor.z, 1))\r\n\t\tconst transformedVector = this.timesVector(VV(v.x, v.y, v.z, 0))\r\n\t\treturn transformedVector\r\n\t\t\t.times(transformedAnchor.w)\r\n\t\t\t.minus(transformedAnchor.times(transformedVector.w))\r\n\t\t\t.div(transformedAnchor.w ** 2)\r\n\t\t\t.V3()\r\n\t}\r\n\r\n\ttransformedPoints(vs: ReadonlyArray<V3>): V3[] {\r\n\t\treturn vs.map(v => this.transformPoint(v))\r\n\t}\r\n\r\n\ttransformedVectors(vs: ReadonlyArray<V3>): V3[] {\r\n\t\treturn vs.map(v => this.transformVector(v))\r\n\t}\r\n\r\n\tnew() {\r\n\t\treturn new M4() as this\r\n\t}\r\n\r\n\tisRegular(): boolean {\r\n\t\treturn !eq0(this.determinant())\r\n\t}\r\n\r\n\tisAxisAligned(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn (\r\n\t\t\t1 >= +!eq0(m[0]) + +!eq0(m[1]) + +!eq0(m[2]) &&\r\n\t\t\t1 >= +!eq0(m[4]) + +!eq0(m[5]) + +!eq0(m[6]) &&\r\n\t\t\t1 >= +!eq0(m[8]) + +!eq0(m[9]) + +!eq0(m[10])\r\n\t\t)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is orthogonal iff M * M^T = I\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is orthogonal or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisOrthogonal(): boolean {\r\n\t\t// return this.transposed().times(this).likeM4(M4.IDENTITY)\r\n\t\tM4.transpose(this, M4.temp0)\r\n\t\tM4.multiply(this, M4.temp0, M4.temp1)\r\n\t\treturn M4.IDENTITY.likeM4(M4.temp1)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is symmetric iff M == M^T\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisSymmetric(): boolean {\r\n\t\tM4.transpose(this, M4.temp0)\r\n\t\treturn this.likeM4(M4.temp0)\r\n\t}\r\n\r\n\t/**\r\n\t * A matrix M is normal1 iff M * M^-T == M^T * M TODO: ^-T?\r\n\t * I being the identity matrix.\r\n\t *\r\n\t * @returns If this matrix is symmetric or very close to it. Comparison of the identity matrix and\r\n\t * this * this^T is done with {@link #likeM4}\r\n\t */\r\n\tisNormal(): boolean {\r\n\t\tM4.transpose(this, M4.temp0) // temp0 = this^-T\r\n\t\tM4.multiply(this, M4.temp0, M4.temp1) // temp1 = this * this^-T\r\n\t\tM4.multiply(M4.temp0, this, M4.temp2) // temp2 = this^-T * this\r\n\t\treturn M4.temp1.likeM4(M4.temp2)\r\n\t}\r\n\r\n\t/**\r\n\t * Determinant of matrix.\r\n\t *\r\n\t * Notes:\r\n\t *      For matrices A and B\r\n\t *      det(A * B) = det(A) * det(B)\r\n\t *      det(A^-1) = 1 / det(A)\r\n\t */\r\n\tdeterminant(): number {\r\n\t\t/*\r\n\t\t | a b c d |\r\n\t\t | e f g h |\r\n\t\t | i j k l |\r\n\t\t | m n o p |\r\n\t\t */\r\n\t\tconst $ = this.m,\r\n\t\t\ta = $[0],\r\n\t\t\tb = $[1],\r\n\t\t\tc = $[2],\r\n\t\t\td = $[3],\r\n\t\t\te = $[4],\r\n\t\t\tf = $[5],\r\n\t\t\tg = $[6],\r\n\t\t\th = $[7],\r\n\t\t\ti = $[8],\r\n\t\t\tj = $[9],\r\n\t\t\tk = $[10],\r\n\t\t\tl = $[11],\r\n\t\t\tm = $[12],\r\n\t\t\tn = $[13],\r\n\t\t\to = $[14],\r\n\t\t\tp = $[15],\r\n\t\t\tklop = k * p - l * o,\r\n\t\t\tjlnp = j * p - l * n,\r\n\t\t\tjkno = j * o - k * n,\r\n\t\t\tilmp = i * p - l * m,\r\n\t\t\tikmo = i * o - k * m,\r\n\t\t\tijmn = i * n - j * m\r\n\t\treturn (\r\n\t\t\ta * (f * klop - g * jlnp + h * jkno) -\r\n\t\t\tb * (e * klop - g * ilmp + h * ikmo) +\r\n\t\t\tc * (e * jlnp - f * ilmp + h * ijmn) -\r\n\t\t\td * (e * jkno - f * ikmo + g * ijmn)\r\n\t\t)\r\n\t}\r\n\r\n\tdeterminant3(): number {\r\n\t\tconst [a, b, c, , d, e, f, , g, h, i] = this.m\r\n\t\tconst det = a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g)\r\n\t\treturn det\r\n\t}\r\n\r\n\t/**\r\n\t * determine whether this matrix is a mirroring transformation\r\n\t */\r\n\tisMirroring(): boolean {\r\n\t\t/*\r\n\t\t var u = V(this.m[0], this.m[4], this.m[8])\r\n\t\t var v = V(this.m[1], this.m[5], this.m[9])\r\n\t\t var w = V(this.m[2], this.m[6], this.m[10])\r\n\r\n\t\t // for a true orthogonal, non-mirrored base, u.cross(v) == w\r\n\t\t // If they have an opposite direction then we are mirroring\r\n\t\t var mirrorvalue = u.cross(v).dot(w)\r\n\t\t var ismirror = (mirrorvalue < 0)\r\n\t\t return ismirror\r\n\t\t */\r\n\r\n\t\treturn this.determinant() < 0 // TODO: also valid for 4x4?\r\n\t}\r\n\r\n\t/**\r\n\t * Get the translation part of this matrix, i.e. the result of this.transformPoint(V3.O)\r\n\t */\r\n\tgetTranslation(): V3 {\r\n\t\tconst m = this.m,\r\n\t\t\tw = m[15]\r\n\t\treturn new V3(m[3] / w, m[7] / w, m[11] / w)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns this matrix scaled so that the determinant is 1.\r\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\r\n\t * so we need to divide by the 4th root of the determinant\r\n\t */\r\n\tnormalized(): M4 {\r\n\t\tconst detAbs = abs(this.determinant())\r\n\t\treturn 1 == detAbs ? this : this.divScalar(detAbs ** 0.25)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns this matrix scaled so that the determinant is 1.\r\n\t * det(c * A) = (c ** n) * det(A) for n x n matrices,\r\n\t * so we need to divide by the 4th root of the determinant\r\n\t */\r\n\tnormalized2(): M4 {\r\n\t\tconst div = this.m[15]\r\n\t\treturn 1 == div ? this : this.divScalar(div ** 0.25)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns if the matrix has the following form (within NLA_PRECISION):\r\n\t * a b c 0\r\n\t * c d e 0\r\n\t * f g h 0\r\n\t * 0 0 0 1\r\n\t */\r\n\tlike3x3(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn eq(1, m[15]) && eq0(m[12]) && eq0(m[13]) && eq0(m[14]) && eq0(m[3]) && eq0(m[7]) && eq0(m[11])\r\n\t}\r\n\r\n\tisNoProj(): boolean {\r\n\t\tconst m = this.m\r\n\t\treturn 0 == m[12] && 0 == m[13] && 0 == m[14] && 1 == m[15]\r\n\t}\r\n\r\n\tlikeIdentity(): boolean {\r\n\t\treturn this.m.every((val, i) => (((i / 4) | 0) == i % 4 ? eq(1, val) : eq0(val)))\r\n\t}\r\n\r\n\tisIdentity(): boolean {\r\n\t\treturn this.m.every((val, i) => (((i / 4) | 0) == i % 4 ? 1 == val : 0 == val))\r\n\t}\r\n\r\n\ttoString(f: (number: number) => string = v => v.toFixed(6).replace(/([0.])(?=0*$)/g, ' ')): string {\r\n\t\tassert(typeof f(0) == 'string', '' + typeof f(0))\r\n\t\t// slice this.m to convert it to an Array (from TypeArray)\r\n\t\tconst rounded = Array.prototype.slice.call(this.m).map(f) as string[]\r\n\t\tconst colWidths = [0, 1, 2, 3].map(colIndex =>\r\n\t\t\trounded\r\n\t\t\t\t.sliceStep(colIndex, 0, 4)\r\n\t\t\t\t.map(x => x.length)\r\n\t\t\t\t.max(),\r\n\t\t)\r\n\t\treturn [0, 1, 2, 3]\r\n\t\t\t.map(rowIndex =>\r\n\t\t\t\trounded\r\n\t\t\t\t\t.slice(rowIndex * 4, rowIndex * 4 + 4) // select matrix row\r\n\t\t\t\t\t.map((x, colIndex) => ' '.repeat(colWidths[colIndex] - x.length) + x) // pad numbers with\r\n\t\t\t\t\t// spaces to col width\r\n\t\t\t\t\t.join(' '),\r\n\t\t\t)\r\n\t\t\t.join('\\n') // join rows\r\n\t}\r\n\r\n\t/**\r\n\t * Wether this matrix is a translation matrix, i.e. of the form\r\n\t * ```\r\n\t * \t1, 0, 0, x,\r\n\t * \t0, 1, 0, y,\r\n\t * \t0, 0, 1, z,\r\n\t * \t0, 0, 0, 1\r\n\t * ```\r\n\t */\r\n\tisTranslation(): boolean {\r\n\t\t// 2: any value, otherwise same value\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t1, 0, 0, 2,\r\n\t\t\t0, 1, 0, 2,\r\n\t\t\t0, 0, 1, 2,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\r\n\t}\r\n\r\n\t/**\r\n\t * Wether this matrix is a translation matrix, i.e. of the form\r\n\t * ```\r\n\t * \ts, 0, 0, 0,\r\n\t * \t0, t, 0, 0,\r\n\t * \t0, 0, v, 0,\r\n\t * \t0, 0, 0, 1\r\n\t * ```\r\n\t */\r\n\tisScaling(): boolean {\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t2, 0, 0, 0,\r\n\t\t\t0, 2, 0, 0,\r\n\t\t\t0, 0, 2, 0,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn mask.every((expected, index) => expected == 2 || expected == this.m[index])\r\n\t}\r\n\r\n\tisZRotation(): boolean {\r\n\t\t// prettier-ignore\r\n\t\tconst mask = [\r\n\t\t\t2, 2, 0, 0,\r\n\t\t\t2, 2, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1]\r\n\t\treturn (\r\n\t\t\tmask.every((expected, index) => expected == 2 || expected == this.m[index]) &&\r\n\t\t\t(eq(1, this.m[0] ** 2 + this.m[1] ** 2) && this.m[0] == this.m[5] && this.m[1] == -this.m[4])\r\n\t\t)\r\n\t}\r\n\r\n\ttoSource(): string {\r\n\t\tconst name = M4.NAMEMAP.get(this)\r\n\t\tif (name) {\r\n\t\t\treturn name\r\n\t\t} else if (this.isTranslation()) {\r\n\t\t\treturn callsce('M4.translate', this.O)\r\n\t\t} else if (this.isScaling()) {\r\n\t\t\treturn callsce('M4.scale', this.m[0], this.m[5], this.m[10])\r\n\t\t} else if (this.isNoProj()) {\r\n\t\t\treturn !this.O.equals(V3.O)\r\n\t\t\t\t? callsce('M4.forSys', this.X, this.Y, this.Z, this.O)\r\n\t\t\t\t: callsce('M4.forSys', this.X, this.Y, this.Z)\r\n\t\t} else if (this.isMirror(0)) {\r\n\t\t\tconst m = this.m\r\n\t\t\tconst nx = Math.sqrt((1 - m[0]) / 2)\r\n\t\t\tconst ny = Math.sqrt((1 - m[5]) / 2)\r\n\t\t\tconst nz = Math.sqrt((1 - m[10]) / 2)\r\n\t\t\tconst w = m[3] / 2.0 / nx\r\n\t\t\treturn callsce('M4.mirror', { normal1: new V3(nx, ny, nz), w })\r\n\t\t} else {\r\n\t\t\tconst m = this.m\r\n\t\t\t// prettier-ignore\r\n\t\t\treturn 'new M4(' +\r\n\t\t\t\t'\\n\\t' + m[0] + ',\\t' + m[1] + ',\\t' + m[2] + ',\\t' + m[3] + ',' +\r\n\t\t\t\t'\\n\\t' + m[4] + ',\\t' + m[5] + ',\\t' + m[6] + ',\\t' + m[7] + ',' +\r\n\t\t\t\t'\\n\\t' + m[8] + ',\\t' + m[9] + ',\\t' + m[10] + ',\\t' + m[11] + ',' +\r\n\t\t\t\t'\\n\\t' + m[12] + ',\\t' + m[13] + ',\\t' + m[14] + ',\\t' + m[15] + ')'\r\n\t\t}\r\n\t}\r\n\r\n\txyAreaFactor(): number {\r\n\t\treturn this.transformVector(V3.X)\r\n\t\t\t.cross(this.transformVector(V3.Y))\r\n\t\t\t.length()\r\n\t}\r\n}\r\n\r\nM4.prototype.height = 4\r\nM4.prototype.width = 4\r\n\r\nexport interface M4 extends Transformable {}\r\naddOwnProperties(M4.prototype, Transformable.prototype, 'constructor')\r\n","declare global {\n\tinterface Object {\n\t\ttoSource(): string\n\t}\n}\nconst KEYWORD_REGEXP = new RegExp(\n\t'^(' +\n\t\t'abstract|boolean|break|byte|case|catch|char|class|const|continue|debugger|' +\n\t\t'default|delete|do|double|else|enum|export|extends|false|final|finally|' +\n\t\t'float|for|function|goto|if|implements|import|in|instanceof|int|interface|' +\n\t\t'long|native|new|null|package|private|protected|public|return|short|static|' +\n\t\t'super|switch|synchronized|this|throw|throws|transient|true|try|typeof|' +\n\t\t'undefined|var|void|volatile|while|with' +\n\t\t')$',\n)\nfunction stringIsLegalKey(key: string) {\n\treturn /^[a-z_$][0-9a-z_$]*$/gi.test(key) && !KEYWORD_REGEXP.test(key)\n}\n\nconst seen: {}[] = []\nexport function toSource(o: {}, indent = 0) {\n\tif (undefined === o) return 'undefined'\n\tif (null === o) return 'null'\n\treturn o.toSource()\n}\nfunction addToSourceMethodToPrototype<T>(clazz: new (...args: {}[]) => T, method: (this: T) => string) {\n\tif (!clazz.prototype.toSource) {\n\t\tObject.defineProperty(clazz.prototype, 'toSource', {\n\t\t\tvalue: method,\n\t\t\twritable: true,\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t})\n\t}\n}\n\naddToSourceMethodToPrototype(Boolean, Boolean.prototype.toString)\naddToSourceMethodToPrototype(Function, Function.prototype.toString)\naddToSourceMethodToPrototype(Number, Number.prototype.toString)\naddToSourceMethodToPrototype(RegExp, RegExp.prototype.toString)\naddToSourceMethodToPrototype(Date, function() {\n\treturn 'new Date(' + this.getTime() + ')'\n})\naddToSourceMethodToPrototype(String, function() {\n\treturn JSON.stringify(this)\n})\naddToSourceMethodToPrototype(Array, function() {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '['\n\tfor (let i = 0; i < this.length; i++) {\n\t\tresult += '\\n\\t' + toSource(this[i]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== this.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += 0 === this.length ? ']' : '\\n]'\n\tseen.pop()\n\treturn result\n})\naddToSourceMethodToPrototype(Object, function() {\n\tif (seen.includes(this)) {\n\t\treturn 'CIRCULAR_REFERENCE'\n\t}\n\tseen.push(this)\n\tlet result = '{'\n\tconst keys = Object.keys(this).sort()\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst k = keys[i]\n\t\tresult +=\n\t\t\t'\\n\\t' +\n\t\t\t(stringIsLegalKey(k) ? k : JSON.stringify(k)) +\n\t\t\t': ' +\n\t\t\ttoSource((this as any)[k]).replace(/\\r\\n|\\n|\\r/g, '$&\\t')\n\t\tif (i !== keys.length - 1) {\n\t\t\tresult += ','\n\t\t}\n\t}\n\tresult += 0 === keys.length ? '}' : '\\n}'\n\tseen.pop()\n\treturn result\n})\n","import { M4 } from './M4'\nimport { assert, assertInst, assertNumbers, assertVectors, callsce, clamp, lt, NLA_PRECISION } from './NLA'\nimport { Transformable } from './Transformable'\nimport { V3 } from './V3'\n\nexport class AABB extends Transformable {\n\tconstructor(public min: V3 = V3.INF, public max: V3 = V3.INF.negated()) {\n\t\tsuper()\n\t\tassertVectors(min, max)\n\t}\n\n\tstatic forXYZ(x: number, y: number, z: number): AABB {\n\t\treturn new AABB(V3.O, new V3(x, y, z))\n\t}\n\n\tstatic forAABBs(aabbs: Iterable<AABB>): AABB {\n\t\tconst result = new AABB()\n\t\tfor (const aabb of aabbs) {\n\t\t\tresult.addAABB(aabb)\n\t\t}\n\t\treturn result\n\t}\n\n\taddPoint(p: V3): this {\n\t\tassertVectors(p)\n\t\tthis.min = this.min.min(p)\n\t\tthis.max = this.max.max(p)\n\t\treturn this\n\t}\n\n\taddPoints(ps: V3[]): this {\n\t\tps.forEach(p => this.addPoint(p))\n\t\treturn this\n\t}\n\n\taddAABB(aabb: AABB): this {\n\t\tassertInst(AABB, aabb)\n\t\tthis.addPoint(aabb.min)\n\t\tthis.addPoint(aabb.max)\n\t\treturn this\n\t}\n\n\t/**\n\t * Returns the largest AABB contained in this which doesn't overlap with aabb\n\t * @param aabb\n\t */\n\twithoutAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\tlet min, max\n\t\tconst volume = this.volume(),\n\t\t\tsize = this.size()\n\t\tlet remainingVolume = -Infinity\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\tconst dim = ['x', 'y', 'z'][i] as 'x' | 'y' | 'z'\n\t\t\tconst cond = aabb.min[dim] - this.min[dim] > this.max[dim] - aabb.max[dim]\n\t\t\tconst dimMin = cond ? this.min[dim] : Math.max(this.min[dim], aabb.max[dim])\n\t\t\tconst dimMax = !cond ? this.max[dim] : Math.min(this.max[dim], aabb.min[dim])\n\t\t\tconst newRemainingVolume = ((dimMax - dimMin) * volume) / size[dim]\n\t\t\tif (newRemainingVolume > remainingVolume) {\n\t\t\t\tremainingVolume = newRemainingVolume\n\t\t\t\tmin = this.min.withElement(dim, dimMin)\n\t\t\t\tmax = this.max.withElement(dim, dimMax)\n\t\t\t}\n\t\t}\n\t\treturn new AABB(min, max)\n\t}\n\n\tgetIntersectionAABB(aabb: AABB): AABB {\n\t\tassertInst(AABB, aabb)\n\t\treturn new AABB(this.min.max(aabb.min), this.max.min(aabb.max))\n\t}\n\n\ttouchesAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x > aabb.max.x ||\n\t\t\tthis.max.x < aabb.min.x ||\n\t\t\tthis.min.y > aabb.max.y ||\n\t\t\tthis.max.y < aabb.min.y ||\n\t\t\tthis.min.z > aabb.max.z ||\n\t\t\tthis.max.z < aabb.min.z\n\t\t)\n\t}\n\n\ttouchesAABBfuzzy(aabb: AABB, precisision = NLA_PRECISION): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tlt(aabb.max.x, this.min.x, precisision) ||\n\t\t\tlt(this.max.x, aabb.min.x, precisision) ||\n\t\t\tlt(aabb.max.y, this.min.y, precisision) ||\n\t\t\tlt(this.max.y, aabb.min.y, precisision) ||\n\t\t\tlt(aabb.max.z, this.min.z, precisision) ||\n\t\t\tlt(this.max.z, aabb.min.z, precisision)\n\t\t)\n\t}\n\n\tintersectsAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x ||\n\t\t\tthis.max.x <= aabb.min.x ||\n\t\t\tthis.min.y >= aabb.max.y ||\n\t\t\tthis.max.y <= aabb.min.y ||\n\t\t\tthis.min.z >= aabb.max.z ||\n\t\t\tthis.max.z <= aabb.min.z\n\t\t)\n\t}\n\n\tintersectsAABB2d(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn !(\n\t\t\tthis.min.x >= aabb.max.x ||\n\t\t\tthis.max.x <= aabb.min.x ||\n\t\t\tthis.min.y >= aabb.max.y ||\n\t\t\tthis.max.y <= aabb.min.y\n\t\t)\n\t}\n\n\tcontainsPoint(p: V3): boolean {\n\t\tassertVectors(p)\n\t\treturn (\n\t\t\tthis.min.x <= p.x &&\n\t\t\tthis.min.y <= p.y &&\n\t\t\tthis.min.z <= p.z &&\n\t\t\tthis.max.x >= p.x &&\n\t\t\tthis.max.y >= p.y &&\n\t\t\tthis.max.z >= p.z\n\t\t)\n\t}\n\n\tcontainsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) > radius\n\t}\n\n\tintersectsSphere(center: V3, radius: number) {\n\t\tassertVectors(center)\n\t\tassertNumbers(radius)\n\t\treturn this.distanceToPoint(center) <= radius\n\t}\n\n\tdistanceToPoint(p: V3) {\n\t\tassertVectors(p)\n\t\tconst x = p.x,\n\t\t\ty = p.y,\n\t\t\tz = p.z\n\t\tconst min = this.min,\n\t\t\tmax = this.max\n\t\tif (this.containsPoint(p)) {\n\t\t\treturn Math.max(min.x - x, x - max.x, min.y - y, y - max.y, min.z - z, z - max.z)\n\t\t}\n\t\treturn p.distanceTo(new V3(clamp(x, min.x, max.x), clamp(y, min.y, max.y), clamp(z, min.z, max.z)))\n\t}\n\n\tcontainsAABB(aabb: AABB) {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.containsPoint(aabb.min) && this.containsPoint(aabb.max)\n\t}\n\n\tlikeAABB(aabb: AABB): boolean {\n\t\tassertInst(AABB, aabb)\n\t\treturn this.min.like(aabb.min) && this.max.like(aabb.max)\n\t}\n\n\tintersectsLine(line: { anchor: V3; dir1: V3; tMin: number; tMax: number }): boolean {\n\t\tassertVectors(line.anchor, line.dir1)\n\t\tconst dir = line.dir1.map(el => el || Number.MIN_VALUE)\n\t\tconst minTs = this.min.minus(line.anchor).divv(dir)\n\t\tconst maxTs = this.max.minus(line.anchor).divv(dir)\n\t\tconst tMin = minTs.min(maxTs).maxElement(),\n\t\t\ttMax = minTs.max(maxTs).minElement()\n\t\treturn tMin <= tMax && !(tMax < line.tMin || line.tMax < tMin)\n\t}\n\n\thasVolume(): boolean {\n\t\treturn this.min.x <= this.max.x && this.min.y <= this.max.y && this.min.z <= this.max.z\n\t}\n\n\tvolume(): number {\n\t\tif (!this.hasVolume()) {\n\t\t\treturn -1\n\t\t}\n\t\tconst v = this.max.minus(this.min)\n\t\treturn v.x * v.y * v.z\n\t}\n\n\tsize(): V3 {\n\t\treturn this.max.minus(this.min)\n\t}\n\n\tgetCenter(): V3 {\n\t\treturn this.min.plus(this.max).div(2)\n\t}\n\n\ttransform(m4: M4): this {\n\t\tassertInst(M4, m4)\n\t\tassert(m4.isAxisAligned())\n\t\tconst aabb = new AABB()\n\t\taabb.addPoint(m4.transformPoint(this.min))\n\t\taabb.addPoint(m4.transformPoint(this.max))\n\t\treturn aabb as this\n\t}\n\n\tofTransformed(m4: M4): AABB {\n\t\tassertInst(M4, m4)\n\t\tconst aabb = new AABB()\n\t\taabb.addPoints(m4.transformedPoints(this.corners()))\n\t\treturn aabb\n\t}\n\n\tcorners(): V3[] {\n\t\tconst min = this.min,\n\t\t\tmax = this.max\n\t\treturn [\n\t\t\tmin,\n\t\t\tnew V3(min.x, min.y, max.z),\n\t\t\tnew V3(min.x, max.y, min.z),\n\t\t\tnew V3(min.x, max.y, max.z),\n\n\t\t\tnew V3(max.x, min.y, min.z),\n\t\t\tnew V3(max.x, min.y, max.z),\n\t\t\tnew V3(max.x, max.y, min.z),\n\t\t\tmax,\n\t\t]\n\t}\n\n\ttoString(): string {\n\t\treturn callsce('new AABB', this.min, this.max)\n\t}\n\n\ttoSource(): string {\n\t\treturn this.toString()\n\t}\n\n\t/**\n\t * Return the matrix which transforms the AABB from V3.O to V3.XYZ to this AABB.\n\t */\n\tgetM4(): M4 {\n\t\treturn M4.translate(this.min).times(M4.scale(this.size()))\n\t}\n}\n","/**\n * @license\n *\n * js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2017, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n *    list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n *    this list of conditions and the following disclaimer in the documentation\n *    and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n *    derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\n// tslint:disable:no-unnecessary-qualifier\n\nconst { abs, atan2, cos, floor, log, min, max, round, sign, sin, sqrt, cbrt, PI, hypot } = Math\n\nfunction lerp(a: number, b: number, f: number) {\n\treturn a + (b - a) * f\n}\nfunction lerpInv(a: number, b: number, f: number) {\n\treturn (f - a) / (b - a)\n}\nfunction clamp(x: number, min = 0, max = 1) {\n\treturn x < min ? min : x > max ? max : x\n}\n\nfunction newtonIterate1d(f: (x: number) => number, xStart: number, max_steps: number, eps: number = 1e-8): number {\n\tlet x = xStart,\n\t\tfx\n\twhile (max_steps-- && abs((fx = f(x))) > eps) {\n\t\tconst dfdx = (f(x + eps) - fx) / eps\n\t\tconsole.log(\"fx / dfdx\", fx / dfdx, \"fx\", fx, \"x\", x)\n\t\tx = x - fx / dfdx\n\t}\n\treturn x\n}\nfunction bisect(f: (x: number) => number, a: number, b: number, steps: number) {\n\t//assert(a < b)\n\tlet fA = f(a)\n\t// let fB = f(b)\n\t//assert(fA * fB < 0)\n\twhile (steps--) {\n\t\tconst c = (a + b) / 2\n\t\tconst fC = f(c)\n\t\t// console.log(\"fC\", fC, \"c\", c)\n\t\tif (sign(fA) == sign(fC)) {\n\t\t\ta = c\n\t\t\tfA = fC\n\t\t} else {\n\t\t\tb = c\n\t\t\t// fB = fC\n\t\t}\n\t}\n\t//assert(a <= (b + a) / 2)\n\t//assert(b >= (b + a) / 2)\n\treturn (a + b) / 2\n}\n\nconst TWOPI = 2 * PI\n\nconst DEG2RAD = PI / 180\n\nconst RAD2DEG = 180 / PI\n/**\n * @param alpha1 default=1\n * @example chroma.color(99, 99, 44, 0.7)\n */\nexport function color(red255: number, green255: number, blue255: number, alpha1?: number): Color\n/**\n * @example chroma.color('mediumorchid') // a css string\n * @example chroma.color([56, 203, 30]) // a RGB triple\n * @example chroma.color(0x4b0082) // a hex num\n * @example chroma.color([30, 0.8, 0.3], 'hsl') // explicit format\n */\nexport function color(x: Chromable, format?: ColorFormat): Color\n/**\n * This overload allows VS Code to suggest color names when you type `color('`.\n */\nexport function color(colorname: keyof typeof w3cx11, format?: \"name\"): Color\n/** @example chroma.color(30, 0.8, 0.3, 'hsl') */\nexport function color(channel0: number, channel1: number, channel2: number, format: ColorFormat): Color\n/** @example chroma.color(0.3, 0.8, 0.3, 1, 'gl') */\nexport function color(\n\tchannel0: number,\n\tchannel1: number,\n\tchannel2: number,\n\tchannel3: number,\n\tformat: ColorFormat,\n): Color\nexport function color(...args: any[]) {\n\tif (args[0] instanceof Color) {\n\t\treturn args[0]\n\t}\n\tif (args.length > 1 && \"string\" == typeof args[args.length - 1]) {\n\t\treturn guess(args.slice(0, args.length - 1), args[args.length - 1])\n\t} else if (Array.isArray(args[0])) {\n\t\treturn guess(args[0])\n\t} else {\n\t\treturn guess(args)\n\t}\n}\n/**\n * A Chromable is any value which can be converted to a color. For ease of use, most functions accept these instead of\n * only Color values.\n */\nexport type Chromable = number | string | Color | number[]\n\nexport class Color {\n\t/** @internal */\n\tconstructor(\n\t\tprivate readonly r: number,\n\t\tprivate readonly g: number,\n\t\tprivate readonly b: number,\n\t\tprivate readonly a = 1,\n\t) {}\n\n\t// public shade() {\n\t// \tconst shades: [string, string, number][] = [\n\t// \t\t[\"ff0000\", \"red\"],\n\t// \t\t[\"ffa500\", \"orange\"],\n\t// \t\t[\"ffff00\", \"yellow\"],\n\t// \t\t[\"008000\", \"green\"],\n\t// \t\t[\"0000ff\", \"blue\"],\n\t// \t\t[\"ee82ee\", \"violet\"],\n\t// \t\t[\"a52a2a\", \"brown\"],\n\t// \t\t[\"000000\", \"black\"],\n\t// \t\t[\"808080\", \"grey\"],\n\t// \t\t[\"ffffff\", \"white\"],\n\t// \t] as any\n\t// \tfunction angleDiff(a: number, b: number) {\n\t// \t\tconst d = (a - b) % 360\n\t// \t\tif (d > 180) return d - 360\n\t// \t\tif (d < -180) return d + 360\n\t// \t\treturn d\n\t// \t}\n\t// \tshades.forEach(arr => arr.push(color(arr[0]).hsl()[0]))\n\t// \tconst [h, s, l] = this.hsl()\n\t// \tif (l > 0.9) return \"white\"\n\t// \tif (l > 0.8 && s < 0.2) return \"white\"\n\t// \tif (s < 0.1) return \"grey\"\n\t// \tif (s < 0.4 && h > 0 && h < 48) return \"brown\"\n\n\t// \tconst distanceInXYZ: { [hue: number]: number } = { 0: 0 }\n\t// \tfor (let i = 60; i <= 360; i += 60) {\n\t// \t\tdistanceInXYZ[i] =\n\t// \t\t\tdistanceInXYZ[i - 60] + distance(hsl(i - 60, 1, 0.5), hsl(i, 1, 0.5), \"xyz\")\n\t// \t}\n\t// \t// console.log(distanceInXYZ)\n\n\t// \tconst shadeEnds: { [hue: number]: number } = {\n\t// \t\t0: 9,\n\t// \t\t38: 48,\n\t// \t\t60: 65,\n\t// \t\t120: 165,\n\t// \t\t240: 245,\n\t// \t\t300: 338,\n\t// \t\t360: 369,\n\t// \t}\n\n\t// \tconst getColorDistanceAlongXYZHue = (hueDegrees: number) => {\n\t// \t\tconst base = hueDegrees - (hueDegrees % 60)\n\t// \t\treturn (\n\t// \t\t\tdistanceInXYZ[base] + distance(hsl(base, 1, 0.5), hsl(hueDegrees, 1, 0.5), \"xyz\")\n\t// \t\t)\n\t// \t}\n\t// \tconst colorXYZD = getColorDistanceAlongXYZHue(this.hsl()[0])\n\t// \tconst md = distanceInXYZ[360]\n\t// \tconst shadeHue =\n\t// \t\t(Object.keys(shadeEnds) as any[]).find(shadeHue => shadeEnds[shadeHue | 0] >= this.hsl()[0])! % 360\n\t// \treturn shades.find(([_hex, _name, _hue]) => (_hue | 0) === shadeHue)![1]\n\t// \t// process.exit()\n\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\n\t// \t\treturn -abs(angleDiff(this.hsl()[0], _hue))\n\t// \t})[1]\n\t// \treturn withMax(shades, ([_hex, _name, _hue]) => {\n\t// \t\tconst [thisL, thisA, thisB] = this.lab()\n\t// \t\tconst [L, A, B] = color(_hex).lab()\n\t// \t\treturn -hypot(thisL - L, thisA - A, thisB - B)\n\t// \t})[1]\n\t// }\n\n\t/**\n\t * @see [[mix]]\n\t */\n\tpublic mix(col2: Chromable, f: number, m: InterpolationMode = \"rgb\") {\n\t\treturn mix(this, col2, f, m)\n\t}\n\tpublic rgb(doRound = true, clamp_ = true): RGB {\n\t\tconst f = (t: number) => {\n\t\t\tif (doRound) t = round(t)\n\t\t\tif (clamp_) t = clamp(t, 0, 255)\n\t\t\treturn t\n\t\t}\n\t\tconst { r, g, b } = this\n\t\treturn [f(r), f(g), f(b)]\n\t}\n\tpublic rgba(doRound = true, clamp_ = true): RGBA {\n\t\tconst f = (t: number) => {\n\t\t\tif (doRound) t = round(t)\n\t\t\tif (clamp_) t = clamp(t, 0, 255)\n\t\t\treturn t\n\t\t}\n\t\tconst { r, g, b, a } = this\n\t\treturn [f(r), f(g), f(b), a]\n\t}\n\n\t/**\n\t * Return a hex-string representation of this color.\n\t *\n\t * @param mode\n\t * @see #num for a hex-number representation.\n\t * @example chroma.color('yellow').alpha(0.7).hex()\n\t * @example chroma.color('yellow').alpha(0.7).hex('rgba')\n\t * @example chroma.color('yellow').alpha(0.7).hex('argb')\n\t */\n\tpublic hex(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb2hex(r, g, b, a, mode)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsl()\n\t */\n\tpublic hsl(): HSL {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsl(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsv()\n\t */\n\tpublic hsv() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsv(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [HSL] representation of this color. hue will always be in [0;360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hcg()\n\t */\n\tpublic hcg() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hcg(r, g, b)\n\t}\n\n\t/**\n\t * Returns a CSS `rgb(...)` or `hsl(...)` string representation that can be used as CSS-color definition. The alpha\n\t * value is not output if it 1.\n\t * @example chroma.color('teal').css() // == \"rgb(0,128,128)\"\n\t * @example chroma.color('teal').alpha(0.5).css() // == \"rgba(0,128,128,0.5)\"\n\t * @example chroma.color('teal').css('hsl') // == \"hsl(180,100%,25.1%)\"\n\t */\n\tpublic css(mode: \"rgb\" | \"hsl\" = \"rgb\") {\n\t\tif (\"rgb\" == mode) {\n\t\t\tconst { r, g, b, a } = this\n\t\t\treturn rgb2css(r, g, b, a)\n\t\t} else if (\"hsl\" == mode) {\n\t\t\treturn hsl2css(this.hsl(), this.alpha())\n\t\t} else {\n\t\t\tthrow new Error()\n\t\t}\n\t}\n\n\tpublic name(closest: true): string\n\t/**\n\t * Get the name of a color. By default, this method will try to match the color exactly (comparing rounded RGB\n\t * values). Pass `true` to return the name of the color which is closest to `this` in CIELAB color space. CIELAB is\n\t * used as it is perceptually uniform.\n\t * @param closest Whether this should find the closest color name. default=false\n\t * @return If `closest == false`, the name of this color or `undefined` if there is no match. Otherwise, will always\n\t * return a color name.\n\t * @example chroma.color('#ff0000').name() // == \"red\"\n\t * @example chroma.color('#ff0001').name() // == undefined\n\t * @example chroma.color('#ff0001').name(true) // == \"red\"\n\t */\n\tpublic name(closest?: boolean): string | undefined\n\tpublic name(closest: boolean = false): string | undefined {\n\t\tconst thisNum = this.num()\n\t\tconst name = Object.keys(w3cx11).find(name => (w3cx11 as any)[name] == thisNum)\n\t\tif (!name && closest) {\n\t\t\tconst [thisLStar, thisAStar, thisBStar] = this.lab()\n\t\t\treturn withMax(Object.keys(w3cx11) as (keyof typeof w3cx11)[], name => {\n\t\t\t\tconst [lStar, aStar, bStar] = num(w3cx11[name]).lab()\n\t\t\t\treturn -hypot(thisLStar - lStar, thisAStar - aStar, thisBStar - bStar)\n\t\t\t})\n\t\t}\n\t\treturn name\n\t}\n\n\t/**\n\t * Get the [CMYK](#CMYK) representation of this color.\n\t *\n\t * @example chroma.color('red').cmyk()\n\t */\n\tpublic cmyk() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2cmyk(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [GL] representation of this color.\n\t * @example chroma.color('33cc00').gl()\n\t */\n\tpublic gl(): GL {\n\t\tconst { r, g, b, a } = this\n\t\treturn [r / 255, g / 255, b / 255, a]\n\t}\n\n\t/**\n\t * Get luminance of the color. This is equal to the Y channel of the XYZ color space.\n\t * @example chroma.color('black').luminance() // == 0\n\t * @example chroma.color('white').luminance() // == 1\n\t * @example chroma.color('red').luminance() // == ~0.21\n\t * @see https://en.wikipedia.org/wiki/Relative_luminance\n\t */\n\tpublic luminance(): number\n\t/**\n\t * Return a new [Color] with `lum1` by linearly interpolating `this` with white (when increasing the luminance) or\n\t * black (otherwise) in the [XYZ] color space.\n\t * @see https://en.wikipedia.org/wiki/Relative_luminance\n\t * @example // Approximately doubling the luminance of red\n\t * @example chroma.color('red').luminance(0.4) // == #ff8686 // \"Vivid Tangerine\"\n\t * @param lum1 The desired luminance.\n\t */\n\tpublic luminance(lum1: number): this\n\tpublic luminance(lum1?: number) {\n\t\tconst { r, g, b, a } = this\n\t\tconst [, Y] = rgb2xyz(r, g, b)\n\t\tif (undefined === lum1) {\n\t\t\treturn Y\n\t\t}\n\t\tconst inverseLerp = (a: number, b: number, val: number) => (val - a) / (b - a)\n\t\tif (lum1 > Y) {\n\t\t\t// lerp to white\n\t\t\treturn mix(this, white, inverseLerp(Y, 1, lum1), \"xyz\").alpha(a)\n\t\t} else {\n\t\t\t// lerp to black\n\t\t\treturn mix(black, this, inverseLerp(0, Y, lum1), \"xyz\").alpha(a)\n\t\t}\n\t}\n\n\t/**\n\t * Get color temperature of this color in Kelvin. This only makes sense for colors close to those output by\n\t * kelvin\n\t *\n\t * @example [c = chroma.color('#ff3300'), c.temperature()]\n\t * @example [c = chroma.color('#ffe3cd'), c.temperature()]\n\t * @example [c = chroma.color('#b3ccff'), c.temperature()]\n\t */\n\tpublic temperature() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2kelvin(r, g, b)\n\t}\n\n\t/**\n\t * Returns a new [Color] with a channel changed.\n\t * @example chroma.color('skyblue').set('hsl.h', 0) // change hue to 0 deg (=red)\n\t * @example chroma.color('hotpink').set('lch.c', 30) // set chromaticity to 30\n\t * @example chroma.color('orangered').set('lab.l', x => x / 2) // half Lab lightness\n\t * @example chroma.color('darkseagreen').set('lch.c', x => x * 2) // double Lch saturation\n\t */\n\tpublic set(modeAndChannel: string, value: number | ((channel: number) => number)) {\n\t\tconst [mode, channel] = modeAndChannel.split(\".\") as [ColorMode, string]\n\t\tconst src = this[mode]()\n\t\tconst i = mode.indexOf(channel)\n\t\tif (-1 == i) throw new Error(\"invalid channel\")\n\t\tsrc[i] = \"number\" == typeof value ? value : value(src[i])\n\t\treturn color(src, mode).alpha(this.a)\n\t}\n\n\t/**\n\t * Returns whether this color is outside the RGB color cube and will be clipped/clamped when calling .rgb()\n\t *\n\t * @example [c = chroma.lch( 20, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 40, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 60, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch( 80, 40, 50), c.clipped()]\n\t * @example [c = chroma.lch(100, 40, 50), c.clipped()]\n\t */\n\tpublic clipped() {\n\t\tconst { r, g, b } = this\n\t\treturn !(0 <= r && r <= 255 && (0 <= g && g <= 255) && (0 <= b && b <= 255))\n\t}\n\n\t/**\n\t * Returns black or white, whichever has the highest contrast to `this`.\n\t * In the readme you should see the result of this.\n\t *\n\t * @example chroma.color('red')\n\t * @example chroma.color('yellow')\n\t */\n\tpublic textColor() {\n\t\treturn this.luminance() > 0.5 ? black : white\n\t}\n\n\t/**\n\t * Get alpha value of color.\n\t * @example chroma.rgb(0, 0, 255, 0.5).alpha() // == 0.5\n\t */\n\tpublic alpha(): number\n\t/**\n\t * Return new [Color] with given alpha value.\n\t * @example chroma.color('green').alpha(0.3)\n\t * @example chroma.color('green').alpha(0.3).hex('rgba') // == \"#00ff004d\"\n\t * @param alpha1 The desired alpha value.\n\t */\n\tpublic alpha(alpha1: number): Color\n\tpublic alpha(alpha1?: number): number | Color {\n\t\tif (undefined === alpha1) {\n\t\t\treturn this.a\n\t\t}\n\t\tconst { r, g, b } = this\n\t\treturn rgb(r, g, b, alpha1)\n\t}\n\n\tpublic darker(amount = 1) {\n\t\tconst [l, a, b] = this.lab()\n\t\treturn lab(l - LAB_Kn * amount, a, b, this.alpha())\n\t}\n\n\t/**\n\t *\n\t * @param amount\n\t * @example chroma.color('hotpink')\n\t * @example chroma.color('hotpink').brighter()\n\t * @example chroma.color('hotpink').brighter(2)\n\t * @example chroma.color('hotpink').brighter(3)\n\t */\n\tpublic brighter(amount = 1) {\n\t\treturn this.darker(-amount)\n\t}\n\n\t/**\n\t * Returns a new [Color] with increased saturation.\n\t * @param amount How much.\n\t * @example chroma.color('slategray')\n\t * @example chroma.color('slategray').saturate()\n\t * @example chroma.color('slategray').saturate(2)\n\t * @example chroma.color('slategray').saturate(3)\n\t */\n\tpublic saturate(amount = 1) {\n\t\tconst [l, c, h] = this.lch()\n\t\treturn lch(l, max(0, c + amount * LAB_Kn), h, this.alpha())\n\t}\n\n\t/**\n\t * Equivalent to `saturate(-amount)`.\n\t * @see #saturate\n\t */\n\tpublic desaturate(amount = 1) {\n\t\treturn this.saturate(-amount)\n\t}\n\n\tpublic premultiplied() {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb(r * a, g * a, b * a, a)\n\t}\n\n\t/**\n\t * Returns the [HSI] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').hsi()\n\t */\n\tpublic hsi() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2hsi(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [LAB] representation of this color.\n\t *\n\t * @example chroma.color('purple').lab()\n\t */\n\tpublic lab() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2lab(r, g, b)\n\t}\n\n\t/**\n\t * Return a hex-num of this color.\n\t *\n\t * @param mode\n\t * @see #num for a hex-number representation.\n\t * @example chroma.color('yellow').alpha(0.7).hex()\n\t * @example chroma.color('yellow').alpha(0.7).hex('rgba')\n\t * @example chroma.color('yellow').alpha(0.7).hex('argb')\n\t */\n\tpublic num(mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\t\tconst { r, g, b, a } = this\n\t\treturn rgb2num(r, g, b, a, mode)\n\t}\n\n\t/**\n\t * Returns the [LCH] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').lch()\n\t */\n\tpublic lch() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2lch(r, g, b)\n\t}\n\n\t/**\n\t * Returns the [XYZ] representation of this color. hue will always be in [0; 360). Values are never NaN.\n\t *\n\t * @example chroma.color('purple').xyz()\n\t */\n\tpublic xyz() {\n\t\tconst { r, g, b } = this\n\t\treturn rgb2xyz(r, g, b)\n\t}\n\n\t/**\n\t * Whether this [Color](#Color) is identical (strict equality of r, g, b, a) to `color`.\n\t */\n\tpublic equals(color: Color) {\n\t\tconst { r, g, b, a } = this\n\t\tconst { r: r2, g: g2, b: b2, a: a2 } = color\n\t\treturn r == r2 && g == g2 && b == b2 && a == a2\n\t}\n\n\tpublic hashCode() {\n\t\treturn this.num(\"rgba\")\n\t}\n\n\t/**\n\t * @example chroma.color('red').toSource() // == \"rgb(255, 0, 0)\"\n\t * @example chroma.rgb(-2, 100.02, 200, 0.5).toSource() // == \"rgb(-2, 100.02, 200, 0.5)\"\n\t */\n\tpublic toSource() {\n\t\tconst { r, g, b, a } = this\n\t\treturn \"chroma.rgb(\" + r + \", \" + g + \", \" + b + (a === 1 ? \")\" : \", \" + a + \")\")\n\t}\n}\nexport interface Color {\n\ttoString(): string\n\t//darker(amount: number): Color\n\t//brighter(amount: number): Color\n\tkelvin(): number\n}\nColor.prototype.toString = Color.prototype.css\nColor.prototype.kelvin = Color.prototype.temperature\n/**\n * @example chroma.black\n */\nexport const black = new Color(0, 0, 0, 1)\n\n/**\n * @example chroma.black\n */\nexport const white = new Color(255, 255, 255, 1)\n\nexport const brewer = {\n\tOrRd: [0xfff7ec, 0xfee8c8, 0xfdd49e, 0xfdbb84, 0xfc8d59, 0xef6548, 0xd7301f, 0xb30000, 0x7f0000],\n\tPuBu: [0xfff7fb, 0xece7f2, 0xd0d1e6, 0xa6bddb, 0x74a9cf, 0x3690c0, 0x0570b0, 0x045a8d, 0x023858],\n\tBuPu: [0xf7fcfd, 0xe0ecf4, 0xbfd3e6, 0x9ebcda, 0x8c96c6, 0x8c6bb1, 0x88419d, 0x810f7c, 0x4d004b],\n\tOranges: [0xfff5eb, 0xfee6ce, 0xfdd0a2, 0xfdae6b, 0xfd8d3c, 0xf16913, 0xd94801, 0xa63603, 0x7f2704],\n\tBuGn: [0xf7fcfd, 0xe5f5f9, 0xccece6, 0x99d8c9, 0x66c2a4, 0x41ae76, 0x238b45, 0x006d2c, 0x00441b],\n\tYlOrBr: [0xffffe5, 0xfff7bc, 0xfee391, 0xfec44f, 0xfe9929, 0xec7014, 0xcc4c02, 0x993404, 0x662506],\n\tYlGn: [0xffffe5, 0xf7fcb9, 0xd9f0a3, 0xaddd8e, 0x78c679, 0x41ab5d, 0x238443, 0x006837, 0x004529],\n\tReds: [0xfff5f0, 0xfee0d2, 0xfcbba1, 0xfc9272, 0xfb6a4a, 0xef3b2c, 0xcb181d, 0xa50f15, 0x67000d],\n\tRdPu: [0xfff7f3, 0xfde0dd, 0xfcc5c0, 0xfa9fb5, 0xf768a1, 0xdd3497, 0xae017e, 0x7a0177, 0x49006a],\n\tGreens: [0xf7fcf5, 0xe5f5e0, 0xc7e9c0, 0xa1d99b, 0x74c476, 0x41ab5d, 0x238b45, 0x006d2c, 0x00441b],\n\tYlGnBu: [0xffffd9, 0xedf8b1, 0xc7e9b4, 0x7fcdbb, 0x41b6c4, 0x1d91c0, 0x225ea8, 0x253494, 0x081d58],\n\tPurples: [0xfcfbfd, 0xefedf5, 0xdadaeb, 0xbcbddc, 0x9e9ac8, 0x807dba, 0x6a51a3, 0x54278f, 0x3f007d],\n\tGnBu: [0xf7fcf0, 0xe0f3db, 0xccebc5, 0xa8ddb5, 0x7bccc4, 0x4eb3d3, 0x2b8cbe, 0x0868ac, 0x084081],\n\tGreys: [0xffffff, 0xf0f0f0, 0xd9d9d9, 0xbdbdbd, 0x969696, 0x737373, 0x525252, 0x252525, 0x000000],\n\tYlOrRd: [0xffffcc, 0xffeda0, 0xfed976, 0xfeb24c, 0xfd8d3c, 0xfc4e2a, 0xe31a1c, 0xbd0026, 0x800026],\n\tPuRd: [0xf7f4f9, 0xe7e1ef, 0xd4b9da, 0xc994c7, 0xdf65b0, 0xe7298a, 0xce1256, 0x980043, 0x67001f],\n\tBlues: [0xf7fbff, 0xdeebf7, 0xc6dbef, 0x9ecae1, 0x6baed6, 0x4292c6, 0x2171b5, 0x08519c, 0x08306b],\n\tPuBuGn: [0xfff7fb, 0xece2f0, 0xd0d1e6, 0xa6bddb, 0x67a9cf, 0x3690c0, 0x02818a, 0x016c59, 0x014636],\n\tViridis: [0x440154, 0x482777, 0x3f4a8a, 0x31678e, 0x26838f, 0x1f9d8a, 0x6cce5a, 0xb6de2b, 0xfee825],\n\tSpectral: [\n\t\t0x9e0142,\n\t\t0xd53e4f,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee08b,\n\t\t0xffffbf,\n\t\t0xe6f598,\n\t\t0xabdda4,\n\t\t0x66c2a5,\n\t\t0x3288bd,\n\t\t0x5e4fa2,\n\t],\n\tRdYlGn: [\n\t\t0xa50026,\n\t\t0xd73027,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee08b,\n\t\t0xffffbf,\n\t\t0xd9ef8b,\n\t\t0xa6d96a,\n\t\t0x66bd63,\n\t\t0x1a9850,\n\t\t0x006837,\n\t],\n\tRdBu: [\n\t\t0x67001f,\n\t\t0xb2182b,\n\t\t0xd6604d,\n\t\t0xf4a582,\n\t\t0xfddbc7,\n\t\t0xf7f7f7,\n\t\t0xd1e5f0,\n\t\t0x92c5de,\n\t\t0x4393c3,\n\t\t0x2166ac,\n\t\t0x053061,\n\t],\n\tPiYG: [\n\t\t0x8e0152,\n\t\t0xc51b7d,\n\t\t0xde77ae,\n\t\t0xf1b6da,\n\t\t0xfde0ef,\n\t\t0xf7f7f7,\n\t\t0xe6f5d0,\n\t\t0xb8e186,\n\t\t0x7fbc41,\n\t\t0x4d9221,\n\t\t0x276419,\n\t],\n\tPRGn: [\n\t\t0x40004b,\n\t\t0x762a83,\n\t\t0x9970ab,\n\t\t0xc2a5cf,\n\t\t0xe7d4e8,\n\t\t0xf7f7f7,\n\t\t0xd9f0d3,\n\t\t0xa6dba0,\n\t\t0x5aae61,\n\t\t0x1b7837,\n\t\t0x00441b,\n\t],\n\tRdYlBu: [\n\t\t0xa50026,\n\t\t0xd73027,\n\t\t0xf46d43,\n\t\t0xfdae61,\n\t\t0xfee090,\n\t\t0xffffbf,\n\t\t0xe0f3f8,\n\t\t0xabd9e9,\n\t\t0x74add1,\n\t\t0x4575b4,\n\t\t0x313695,\n\t],\n\tBrBG: [\n\t\t0x543005,\n\t\t0x8c510a,\n\t\t0xbf812d,\n\t\t0xdfc27d,\n\t\t0xf6e8c3,\n\t\t0xf5f5f5,\n\t\t0xc7eae5,\n\t\t0x80cdc1,\n\t\t0x35978f,\n\t\t0x01665e,\n\t\t0x003c30,\n\t],\n\tRdGy: [\n\t\t0x67001f,\n\t\t0xb2182b,\n\t\t0xd6604d,\n\t\t0xf4a582,\n\t\t0xfddbc7,\n\t\t0xffffff,\n\t\t0xe0e0e0,\n\t\t0xbababa,\n\t\t0x878787,\n\t\t0x4d4d4d,\n\t\t0x1a1a1a,\n\t],\n\tPuOr: [\n\t\t0x7f3b08,\n\t\t0xb35806,\n\t\t0xe08214,\n\t\t0xfdb863,\n\t\t0xfee0b6,\n\t\t0xf7f7f7,\n\t\t0xd8daeb,\n\t\t0xb2abd2,\n\t\t0x8073ac,\n\t\t0x542788,\n\t\t0x2d004b,\n\t],\n\tSet2: [0x66c2a5, 0xfc8d62, 0x8da0cb, 0xe78ac3, 0xa6d854, 0xffd92f, 0xe5c494, 0xb3b3b3],\n\tAccent: [0x7fc97f, 0xbeaed4, 0xfdc086, 0xffff99, 0x386cb0, 0xf0027f, 0xbf5b17, 0x666666],\n\tSet1: [0xe41a1c, 0x377eb8, 0x4daf4a, 0x984ea3, 0xff7f00, 0xffff33, 0xa65628, 0xf781bf, 0x999999],\n\tSet3: [\n\t\t0x8dd3c7,\n\t\t0xffffb3,\n\t\t0xbebada,\n\t\t0xfb8072,\n\t\t0x80b1d3,\n\t\t0xfdb462,\n\t\t0xb3de69,\n\t\t0xfccde5,\n\t\t0xd9d9d9,\n\t\t0xbc80bd,\n\t\t0xccebc5,\n\t\t0xffed6f,\n\t],\n\tDark2: [0x1b9e77, 0xd95f02, 0x7570b3, 0xe7298a, 0x66a61e, 0xe6ab02, 0xa6761d, 0x666666],\n\tPaired: [\n\t\t0xa6cee3,\n\t\t0x1f78b4,\n\t\t0xb2df8a,\n\t\t0x33a02c,\n\t\t0xfb9a99,\n\t\t0xe31a1c,\n\t\t0xfdbf6f,\n\t\t0xff7f00,\n\t\t0xcab2d6,\n\t\t0x6a3d9a,\n\t\t0xffff99,\n\t\t0xb15928,\n\t],\n\tPastel2: [0xb3e2cd, 0xfdcdac, 0xcbd5e8, 0xf4cae4, 0xe6f5c9, 0xfff2ae, 0xf1e2cc, 0xcccccc],\n\tPastel1: [0xfbb4ae, 0xb3cde3, 0xccebc5, 0xdecbe4, 0xfed9a6, 0xffffcc, 0xe5d8bd, 0xfddaec, 0xf2f2f2],\n}\n\n/**\n * X11 color names\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @example chroma.Object.keys(w3cx11).slice(0, 4)\n */\nexport const w3cx11 = {\n\taliceblue: 0xf0f8ff,\n\tantiquewhite: 0xfaebd7,\n\taqua: 0x00ffff,\n\taquamarine: 0x7fffd4,\n\tazure: 0xf0ffff,\n\tbeige: 0xf5f5dc,\n\tbisque: 0xffe4c4,\n\tblack: 0x000000,\n\tblanchedalmond: 0xffebcd,\n\tblue: 0x0000ff,\n\tblueviolet: 0x8a2be2,\n\tbrown: 0xa52a2a,\n\tburlywood: 0xdeb887,\n\tcadetblue: 0x5f9ea0,\n\tchartreuse: 0x7fff00,\n\tchocolate: 0xd2691e,\n\tcoral: 0xff7f50,\n\tcornflower: 0x6495ed,\n\tcornflowerblue: 0x6495ed,\n\tcornsilk: 0xfff8dc,\n\tcrimson: 0xdc143c,\n\tcyan: 0x00ffff,\n\tdarkblue: 0x00008b,\n\tdarkcyan: 0x008b8b,\n\tdarkgoldenrod: 0xb8860b,\n\tdarkgray: 0xa9a9a9,\n\tdarkgreen: 0x006400,\n\tdarkgrey: 0xa9a9a9,\n\tdarkkhaki: 0xbdb76b,\n\tdarkmagenta: 0x8b008b,\n\tdarkolivegreen: 0x556b2f,\n\tdarkorange: 0xff8c00,\n\tdarkorchid: 0x9932cc,\n\tdarkred: 0x8b0000,\n\tdarksalmon: 0xe9967a,\n\tdarkseagreen: 0x8fbc8f,\n\tdarkslateblue: 0x483d8b,\n\tdarkslategray: 0x2f4f4f,\n\tdarkslategrey: 0x2f4f4f,\n\tdarkturquoise: 0x00ced1,\n\tdarkviolet: 0x9400d3,\n\tdeeppink: 0xff1493,\n\tdeepskyblue: 0x00bfff,\n\tdimgray: 0x696969,\n\tdimgrey: 0x696969,\n\tdodgerblue: 0x1e90ff,\n\tfirebrick: 0xb22222,\n\tfloralwhite: 0xfffaf0,\n\tforestgreen: 0x228b22,\n\tfuchsia: 0xff00ff,\n\tgainsboro: 0xdcdcdc,\n\tghostwhite: 0xf8f8ff,\n\tgold: 0xffd700,\n\tgoldenrod: 0xdaa520,\n\tgray: 0x808080,\n\tgreen: 0x008000,\n\tgreenyellow: 0xadff2f,\n\tgrey: 0x808080,\n\thoneydew: 0xf0fff0,\n\thotpink: 0xff69b4,\n\tindianred: 0xcd5c5c,\n\tindigo: 0x4b0082,\n\tivory: 0xfffff0,\n\tkhaki: 0xf0e68c,\n\tlaserlemon: 0xffff54,\n\tlavender: 0xe6e6fa,\n\tlavenderblush: 0xfff0f5,\n\tlawngreen: 0x7cfc00,\n\tlemonchiffon: 0xfffacd,\n\tlightblue: 0xadd8e6,\n\tlightcoral: 0xf08080,\n\tlightcyan: 0xe0ffff,\n\tlightgoldenrod: 0xfafad2,\n\tlightgoldenrodyellow: 0xfafad2,\n\tlightgray: 0xd3d3d3,\n\tlightgreen: 0x90ee90,\n\tlightgrey: 0xd3d3d3,\n\tlightpink: 0xffb6c1,\n\tlightsalmon: 0xffa07a,\n\tlightseagreen: 0x20b2aa,\n\tlightskyblue: 0x87cefa,\n\tlightslategray: 0x778899,\n\tlightslategrey: 0x778899,\n\tlightsteelblue: 0xb0c4de,\n\tlightyellow: 0xffffe0,\n\tlime: 0x00ff00,\n\tlimegreen: 0x32cd32,\n\tlinen: 0xfaf0e6,\n\tmagenta: 0xff00ff,\n\tmaroon: 0x800000,\n\tmaroon2: 0x7f0000,\n\tmaroon3: 0xb03060,\n\tmediumaquamarine: 0x66cdaa,\n\tmediumblue: 0x0000cd,\n\tmediumorchid: 0xba55d3,\n\tmediumpurple: 0x9370db,\n\tmediumseagreen: 0x3cb371,\n\tmediumslateblue: 0x7b68ee,\n\tmediumspringgreen: 0x00fa9a,\n\tmediumturquoise: 0x48d1cc,\n\tmediumvioletred: 0xc71585,\n\tmidnightblue: 0x191970,\n\tmintcream: 0xf5fffa,\n\tmistyrose: 0xffe4e1,\n\tmoccasin: 0xffe4b5,\n\tnavajowhite: 0xffdead,\n\tnavy: 0x000080,\n\toldlace: 0xfdf5e6,\n\tolive: 0x808000,\n\tolivedrab: 0x6b8e23,\n\torange: 0xffa500,\n\torangered: 0xff4500,\n\torchid: 0xda70d6,\n\tpalegoldenrod: 0xeee8aa,\n\tpalegreen: 0x98fb98,\n\tpaleturquoise: 0xafeeee,\n\tpalevioletred: 0xdb7093,\n\tpapayawhip: 0xffefd5,\n\tpeachpuff: 0xffdab9,\n\tperu: 0xcd853f,\n\tpink: 0xffc0cb,\n\tplum: 0xdda0dd,\n\tpowderblue: 0xb0e0e6,\n\tpurple: 0x800080,\n\tpurple2: 0x7f007f,\n\tpurple3: 0xa020f0,\n\trebeccapurple: 0x663399,\n\tred: 0xff0000,\n\trosybrown: 0xbc8f8f,\n\troyalblue: 0x4169e1,\n\tsaddlebrown: 0x8b4513,\n\tsalmon: 0xfa8072,\n\tsandybrown: 0xf4a460,\n\tseagreen: 0x2e8b57,\n\tseashell: 0xfff5ee,\n\tsienna: 0xa0522d,\n\tsilver: 0xc0c0c0,\n\tskyblue: 0x87ceeb,\n\tslateblue: 0x6a5acd,\n\tslategray: 0x708090,\n\tslategrey: 0x708090,\n\tsnow: 0xfffafa,\n\tspringgreen: 0x00ff7f,\n\tsteelblue: 0x4682b4,\n\ttan: 0xd2b48c,\n\tteal: 0x008080,\n\tthistle: 0xd8bfd8,\n\ttomato: 0xff6347,\n\tturquoise: 0x40e0d0,\n\tviolet: 0xee82ee,\n\twheat: 0xf5deb3,\n\twhite: 0xffffff,\n\twhitesmoke: 0xf5f5f5,\n\tyellow: 0xffff00,\n\tyellowgreen: 0x9acd32,\n}\n\n/**\n * Return a new [[CubeHelix]].\n *\n * @example chroma.cubehelix() // use the default helix\n * @example chroma.cubehelix().start(200).rotations(-0.5).gamma(0.8).lightness([0.3, 0.8])\n */\nexport function cubehelix(\n\tstart = 300,\n\trotations = -1.5,\n\thue: number | [number, number] = 1,\n\tgamma = 1,\n\tlightness: number | [number, number] = [0, 1],\n) {\n\tconst f: CubeHelix = (t => f.at(t)) as CubeHelix\n\t;(Object.getOwnPropertyNames(CubeHelix.prototype) as (keyof typeof CubeHelix)[]).forEach(\n\t\tkey => (f[key] = CubeHelix.prototype[key]),\n\t)\n\tf.start(start)\n\tf.rotations(rotations)\n\tf.hue(hue)\n\tf.gamma(gamma)\n\tf.lightness(lightness)\n\treturn f\n}\n\n/**\n * [Dave Green's cubehelix color scheme](http://www.mrao.cam.ac.uk/~dag/CUBEHELIX/)!\n *\n * A CubeHelix is a function defined on [0, 1] which returns colors.\n */\nexport interface CubeHelix {\n\t(f: number): Color\n}\nexport class CubeHelix {\n\tprivate _start!: number\n\tprivate _rotations!: number\n\tprivate _gamma!: number\n\tprivate _hue!: [number, number]\n\tprivate _lightness!: [number, number]\n\tpublic start(s: number) {\n\t\tif (undefined === s) {\n\t\t\treturn this._start\n\t\t}\n\t\tthis._start = s\n\t\treturn this\n\t}\n\tpublic rotations(r: number) {\n\t\tif (undefined === r) {\n\t\t\treturn this._rotations\n\t\t}\n\t\tthis._rotations = r\n\t\treturn this\n\t}\n\tpublic gamma(g: number) {\n\t\tif (undefined === g) {\n\t\t\treturn this._gamma\n\t\t}\n\t\tthis._gamma = g\n\t\treturn this\n\t}\n\tpublic hue(h: number | [number, number]) {\n\t\tif (undefined === h) {\n\t\t\treturn this._hue\n\t\t}\n\t\tthis._hue = Array.isArray(h) ? h : [h, h]\n\t\treturn this\n\t}\n\tpublic lightness(h: number | [number, number]) {\n\t\tif (undefined === h) {\n\t\t\treturn this._lightness\n\t\t}\n\t\tthis._lightness = Array.isArray(h) ? h : [h, h]\n\t\treturn this\n\t}\n\n\t/**\n\t * Convert to a [[Scale]].\n\t *\n\t * @example chroma.cubehelix().scale().correctLightness().domain(2, 22)\n\t */\n\tpublic scale() {\n\t\treturn scale(this)\n\t}\n\n\tpublic at(fract: number) {\n\t\tconst a = TWOPI * ((this._start + 120) / 360 + this._rotations * fract)\n\t\tconst l = lerp(this._lightness[0], this._lightness[1], fract) ** this._gamma\n\t\tconst h = lerp(this._hue[0], this._hue[1], fract)\n\t\tconst amp = (h * l * (1 - l)) / 2\n\t\tconst cos_a = cos(a)\n\t\tconst sin_a = sin(a)\n\t\tconst r = l + amp * (-0.14861 * cos_a + 1.78277 * sin_a)\n\t\tconst g = l + amp * (-0.29227 * cos_a - 0.90649 * sin_a)\n\t\tconst b = l + amp * (+1.97294 * cos_a)\n\t\treturn rgb([r * 255, g * 255, b * 255, 1])\n\t}\n}\n\n/**\n * Create a new random [Color] from a random point in the RGB color space.\n * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\n *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\n */\nexport function random(randomSource = Math.random) {\n\treturn num((randomSource() * 0x1_00_00_00) | 0)\n}\n\n/**\n * Create a valid RGB color (`.clipped() == false`) from a random point in the CIELAB color space. This results in\n * more colors in the RGB color space where humans can perceive more differences.\n * @param randomSource A function which returns random `number`s in the interval [0; 1). Useful if you want to\n *     create a deterministic sequence of \"random\" colors. Defaults to `Math.random`.\n * @example chroma.random((() => { let i = 0; return () => (i = (i *Math.SQRT2) % 1); })())\n */\n// export function randomLab(randomSource = Math.random) {\n// \tconst labAMin = -87,\n// \t\tlabAMax = 99,\n// \t\tlabBMin = -108,\n// \t\tlabBMax = 95\n// \tlet maxIterations = 100\n// \twhile (maxIterations--) {\n// \t\tconst u = randomSource(),\n// \t\t\tv = randomSource(),\n// \t\t\tw = randomSource()\n// \t\t// The following matrix multiplication transform the random point (u v w) in the unit cube into the\n// \t\t// oriented bounding box (OBB) of the projection of the RGB space into the LAB space. This is necessary to\n// \t\t// avoid a huge number of misses.\n// \t\tconst color = lab(\n// \t\t\tu * -53.903 + v * -88.755 + w * 71.7 + 99.707,\n// \t\t\tu * -82.784 + v * 187.036 + w * -2.422 + -28.17,\n// \t\t\tu * -75.813 + v * -141.406 + w * -48.261 + 152.469,\n// \t\t)\n// \t\tconsole.log(color.lab())\n// \t\tconsole.log(color.rgba(false, false))\n// \t\tif (!color.clipped()) return color\n// \t}\n// \tthrow new Error(\"Could find a random color in 100 iterations\")\n// }\n\n/**\n * Mixes two colors. The mix ratio is a value between 0 and 1.\n * The color mixing produces different results based the color space used for interpolation.\n *\n * @param col2\n * @param f\n * @param m\n * @example chroma.mix('red', 'blue')\n * @example chroma.mix('red', 'blue', 0.25)\n * @example chroma.mix('red', 'blue', 0.75)\n *\n * @example chroma.mix('red', 'blue', 0.5, 'rgb')\n * @example chroma.mix('red', 'blue', 0.5, 'hsl')\n * @example chroma.mix('red', 'blue', 0.5, 'lab')\n * @example chroma.mix('red', 'blue', 0.5, 'lch')\n * @example chroma.mix('red', 'blue', 0.5, 'lrgb')\n */\nexport function mix(col1: Chromable, col2: Chromable, f = 0.5, m: InterpolationMode = \"rgb\") {\n\tconst c1 = color(col1)\n\tconst c2 = color(col2)\n\tconst res = interpolators[m] && ((interpolators as any)[m](c1, c2, f, m) as Color)\n\tif (!res) {\n\t\tthrow new Error(\"color mode \" + m + \" is not supported\")\n\t}\n\treturn res.alpha(lerp(c1.alpha(), c2.alpha(), f))\n}\n\n/**\n * Parse a CSS color. See [MDN](https://developer.mozilla.org/en-US/docs/Web/CSS/color) for all the possible\n * variants.\n *\n * @example chroma.css('hsl(2rad 90% 50% / 0.9)')\n * @example chroma.css('laserlemon')\n */\nexport function css(cssString: string) {\n\tconst [r, g, b, a] = css2rgb(cssString)\n\treturn new Color(r, g, b, a)\n}\n\n/**\n * @example chroma.cmyk(0.2, 0.8, 0, 0)\n * @example chroma.color(0.2, 0.8, 0, 0, 'cmyk')\n */\nexport function cmyk(cmyk: CMYK): Color\nexport function cmyk(cyan1: number, magenta1: number, yellow1: number, key1: number): Color\nexport function cmyk(...args: any[]) {\n\treturn guess(args, \"cmyk\")\n}\n\n/**\n * @example chroma.gl(1, 1, 0, 1)\n */\nexport function gl(gl: RGBA | RGB): Color\n/**\n * @example chroma.gl([1, 0, 1, 0.5])\n */\nexport function gl(red1: number, green1: number, blue1: number, alpha1: number): Color\nexport function gl(...args: any[]) {\n\treturn guess(args, \"gl\")\n}\n\nexport function hcg(hcg: HCG): Color\n/**\n * @param alpha1 default=1\n */\nexport function hcg(h: number, c: number, g: number, alpha1?: number): Color\nexport function hcg(...args: any[]) {\n\treturn guess(args, \"hcg\")\n}\n\nexport function lch(lch: LCH): Color\n/**\n * @param alpha1 default=1\n */\nexport function lch(h: number, c: number, l: number, alpha1?: number): Color\nexport function lch(...args: any[]) {\n\treturn guess(args, \"lch\")\n}\n\nexport function hsi(hsi: HSI): Color\n/**\n * @param alpha1 default=1\n */\nexport function hsi(h: number, s: number, i: number, alpha1?: number): Color\nexport function hsi(...args: any[]) {\n\treturn guess(args, \"hsi\")\n}\n\nexport function hsl(hsl: HSL): Color\n/**\n * @param alpha1 default=1\n * @example chroma.hsl(30, 1, 0.5)\n * @example chroma.hsl(30, 0.6, 0.5)\n */\nexport function hsl(hueDegrees: number, saturation1: number, lightness1: number, alpha1?: number): Color\nexport function hsl(...args: any[]) {\n\treturn guess(args, \"hsl\")\n}\n\nexport function hsv(hsv: LAB): Color\nexport function hsv(h: number, s: number, v: number): Color\nexport function hsv(...args: any[]) {\n\treturn guess(args, \"hsv\")\n}\n\n/**\n *\n * @param temperature\n * @example chroma.kelvin(2000) // candle light\n * @example chroma.kelvin(3500) // sunset\n * @example chroma.kelvin(6500) // daylight\n * @example x0_1 => chroma.kelvin(x0_1 * 30000) // effective range: [0; 30000]\n */\nexport function kelvin(temperature: number) {\n\tconst [r, g, b] = kelvin2rgb(temperature)\n\treturn new Color(r, g, b)\n}\n\nexport function lab(lab: LAB): Color\n/**\n * @param alpha1 default=1\n */\nexport function lab(lightness1: number, a1: number, b: number, alpha1?: number): Color\nexport function lab(...args: any[]) {\n\treturn guess(args, \"lab\")\n}\n\n/**\n * @example chroma.num(0x663399) // rebeccapurple\n */\nexport function num(num: number) {\n\tconst [r, g, b] = num2rgb(num)\n\treturn new Color(r, g, b)\n}\n\nexport function rgb(rgb: RGBA | RGB): Color\n/**\n * @param alpha1 default=1\n * @example chroma.rgb(0, 100, 200)\n */\nexport function rgb(red255: number, green255: number, blue255: number, alpha1?: number): Color\nexport function rgb(...args: any[]) {\n\treturn guess(args, \"rgb\")\n}\n\nexport function xyz(xyz: XYZ): Color\n/** @param alpha1 default=1 */\nexport function xyz(x1: number, y1: number, z1: number, alpha1?: number): Color\nexport function xyz(...args: any[]) {\n\treturn guess(args, \"xyz\")\n}\n\n/**\n * Similar to mix, but accepts more than two colors.\n *\n * @example colors = ['#ddd', 'yellow', 'red', 'teal']\n * @example chroma.average(colors) // default = 'rgb'\n * @example chroma.average(colors, 'lab')\n * @example chroma.average(colors, 'lch')\n * @example chroma.average(colors, 'lrgb')\n * @example chroma.average(['red', 'rgba(0,0,0,0.5)']).css()\n */\nexport function average(chromables: Chromable[], mode: InterpolationMode = \"rgb\") {\n\tconst colors = chromables.map(c => color(c))\n\tif (mode == \"lrgb\") {\n\t\treturn _average_lrgb(colors)\n\t}\n\tif (mode == \"num\") {\n\t\tlet numSum = 0,\n\t\t\talphaSum = 0\n\t\tfor (const col of colors) {\n\t\t\tnumSum += col.num()\n\t\t\talphaSum += col.alpha()\n\t\t}\n\t\treturn num(numSum / colors.length).alpha(alphaSum / colors.length)\n\t}\n\tconst xyz = [0, 0, 0]\n\tlet dx = 0\n\tlet dy = 0\n\tlet alphaSum = 0\n\tfor (const c of colors) {\n\t\tconst xyz2 = c[mode]()\n\t\talphaSum += c.alpha()\n\t\tconsole.log(alphaSum)\n\n\t\tfor (let i = 0; i < xyz.length; i++) {\n\t\t\tif (mode.charAt(i) == \"h\") {\n\t\t\t\tconst A = xyz2[i] * DEG2RAD\n\t\t\t\tdx += cos(A)\n\t\t\t\tdy += sin(A)\n\t\t\t} else {\n\t\t\t\txyz[i] += xyz2[i]\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < xyz.length; i++) {\n\t\tif (mode.charAt(i) == \"h\") {\n\t\t\tconst A = atan2(dy / colors.length, dx / colors.length) * RAD2DEG\n\t\t\txyz[i] = (A + 360) % 360\n\t\t} else {\n\t\t\txyz[i] = xyz[i] / colors.length\n\t\t}\n\t}\n\treturn guess(xyz, mode).alpha(alphaSum / colors.length)\n}\n\n/**\n *\n * @param chromables\n * @example chroma.scale('black', 'red', 'gold') // linear interpolation\n * @example chroma.bezier('black', 'red', 'gold') // bezier interpolation\n */\nexport function bezier(chromables: Chromable[]): { (t: number): Color; scale(): Scale }\nexport function bezier(...chromables: Chromable[]): { (t: number): Color; scale(): Scale }\nexport function bezier(...args: any[]) {\n\tconst chromables: Chromable[] = Array.isArray(args[0]) ? args[0] : args\n\tconst f = _bezier(chromables) as { (t: number): Color; scale(): Scale }\n\tf.scale = CubeHelix.prototype.scale\n\treturn f\n}\n\n/**\n * Blends two colors using RGB channel-wise blend functions.\n * @param bottom\n * @param top\n * @param mode\n * @example chroma.blend('4CBBFC', 'EEEE22', 'multiply')\n * @example chroma.blend('4CBBFC', 'EEEE22', 'darken')\n * @example chroma.blend('4CBBFC', 'EEEE22', 'lighten')\n */\nexport function blend(bottom: Chromable, top: Chromable, mode: BlendMode) {\n\tif (!blend_fs[mode]) {\n\t\tthrow new Error(\"unknown blend mode \" + mode)\n\t}\n\treturn blend_fs[mode](bottom, top)\n}\nexport type BlendMode = keyof typeof blend_fs\nnamespace blend_fs {\n\texport const normal = blend_f(each((a, _) => a))\n\texport const multiply = blend_f(each((a, b) => (a * b) / 255))\n\texport const screen = blend_f(each(_screen))\n\texport const overlay = blend_f(each(_overlay))\n\texport const darken = blend_f(each(min))\n\texport const lighten = blend_f(each(max))\n\texport const dodge = blend_f(each(_dodge))\n\texport const burn = blend_f(each(_burn))\n}\n\n/**\n * @param colors\n * @example scale = chroma.scale(['yellow', '008ae5'])\n * @example scale(0.25)\n * @example scale(0.5)\n * @example scale(0.75)\n * @example chroma.scale('Viridis')\n */\nexport function scale(colors: Chromable[] | keyof typeof brewer | ((f: number) => Color)): Scale\nexport function scale(...colors: Chromable[]): Scale\nexport function scale(...args: any[]) {\n\tconst f: Scale = (t => (f as any)._at(t)) as Scale\n\t;(Object.getOwnPropertyNames(Scale.prototype) as (keyof typeof Scale)[]).forEach(\n\t\tkey => (f[key] = Scale.prototype[key]),\n\t)\n\tif (Array.isArray(args[0])) args = args[0]\n\tif (args.length == 1 && \"string\" == typeof args[0]) args = brewer[args[0] as keyof typeof brewer]\n\t;(f as any)._init(\"function\" == typeof args[0] ? args[0] : args.map(a => color(a)))\n\t//f.setColors(args.length > 1 ? args : args[0])\n\treturn f\n}\n/**\n * A color scale, created with scale, is a function that maps numeric values to a color palette.\n *\n * The type parameter describes the output type and can be changed with out(). Defaults to Color objects.\n *\n * @param T The output format. default=Color\n * @example chroma.scale('Purples')\n * @example chroma.scale('Purples')(0.4)\n */\nexport interface Scale<T = Color> {\n\t(val: number): T\n}\nexport class Scale<T = Color> {\n\tprivate _colors!: Color[] | ((t: number) => Color)\n\tprivate _classes!: number[] | undefined\n\t/**\n\t * Color cache. undefined if the cache should not be used.\n\t */\n\tprivate _cache!: Map<number, Color> | undefined\n\tprivate _correctLightness!: boolean\n\tprivate _gamma!: number\n\tprivate _mode!: InterpolationMode\n\tprivate _out!: ColorFormat | undefined\n\tprivate _min!: number\n\tprivate _max!: number\n\tprivate _paddingLeft!: number\n\tprivate _paddingRight!: number\n\t// positions of the colors on the interval [0, 1]. guaranteed to have the same length as _colors\n\t// undefined when _colors is a function\n\tprivate _pos: number[] | undefined\n\n\t/**\n\t * Get the current scale classes.\n\t */\n\tpublic classes(): number[]\n\t/**\n\t * Make the scale return a number of distint color instead of a continuous gradient.\n\t * If you pass a number the scale will broken into equi-distant classes:\n\t *\n\t * @example chroma.scale('OrRd') // continous\n\t * @example chroma.scale('OrRd').classes(5) // equidistant classes\n\t * @example chroma.scale('OrRd').classes(8)\n\t *\n\t * @example chroma.scale('OrRd').classes([0, 6, 11, 17, 20]) // also sets domain\n\t */\n\tpublic classes(classes: number | number[]): this\n\tpublic classes(classes?: number | number[]) {\n\t\tif (undefined === classes) {\n\t\t\treturn this._classes\n\t\t}\n\t\tif (Array.isArray(classes)) {\n\t\t\tthis._classes = classes\n\t\t\tthis.domain(classes[0], classes[classes.length - 1])\n\t\t} else {\n\t\t\tif (classes % 1 != 0 || classes < 1) throw new Error(\"invalid classes param\")\n\t\t\t// const d = analyze(this.domain())\n\t\t\tthis._classes = limits(this.domain(), \"e\", classes)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the domain.\n\t * @return If _colors is a function, [this._min, this._max]. If _colors is an array of colors, an array with the\n\t * same length as the number of colors.\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 20).domain() // == [0, 10, 20]\n\t */\n\tpublic domain(): number[]\n\t/**\n\t * Set the domain interval on which the scale is defined. Colors are distributed equidistantly along the\n\t * interval.\n\t * @param start\n\t * @param end\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 100)(50) // == white\n\t * @example chroma.scale(\"red\", \"white\", \"blue\").domain(0, 0.25, 1).domain(0, 100).domain() // == [0, 25, 100]\n\t */\n\tpublic domain(start: number, end: number): this\n\t/**\n\t * Set the domain interval and the individual positions of the colors. The number of passed values must match\n\t * the number of colors which define the scale. Not valid if the scale is defined by a function.\n\t * @param domain The positions of all scale colors. Values must be in ascending order and should not have\n\t * duplicates.\n\t * @return `this`\n\t * @example scale = chroma.scale(\"red\", \"white\", \"blue\").domain(0, 25, 100)\n\t * @example scale(25) // == white\n\t * @example scale(100) // == blue\n\t * @example scale(50) // == #aaaaff\n\t */\n\tpublic domain(...domain: number[]): this\n\tpublic domain(...domain: number[]): number[] | this {\n\t\tif (undefined === domain[0]) {\n\t\t\treturn \"function\" !== typeof this._colors\n\t\t\t\t? this._pos!.map(p => lerp(this._min, this._max, p))\n\t\t\t\t: [this._min, this._max]\n\t\t}\n\t\tthis._min = domain[0]\n\t\tthis._max = domain[domain.length - 1]\n\t\tif (2 == domain.length) {\n\t\t\tif (\"function\" !== typeof this._colors) {\n\t\t\t\t// equidistant positions\n\t\t\t\tthis._pos = this._colors.map((_, c) => c / (this._colors.length - 1))\n\t\t\t}\n\t\t} else if (\"function\" !== typeof this._colors && domain.length == this._colors.length) {\n\t\t\tthis._pos = domain.map(d => lerpInv(this._min, this._max, d))\n\t\t} else {\n\t\t\tthrow new Error(\"invalid domain \" + domain)\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the interpolation mode used when calculating colors.\n\t */\n\tpublic mode(): InterpolationMode\n\t/**\n\t * Set the interpolation mode used when calculating colors. The defaut mode is \"rgb\".\n\t * See also {@link chroma#mix}\n\t * @param mode the mode to set.\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"green\").mode(\"lab\")\n\t * @example chroma.scale(\"red\", \"green\").mode(\"lrgb\")\n\t */\n\tpublic mode(mode: InterpolationMode): this\n\tpublic mode(mode?: InterpolationMode) {\n\t\tif (undefined === mode) {\n\t\t\treturn this._mode\n\t\t}\n\t\tthis._mode = mode\n\t\tthis._resetCache()\n\t\treturn this\n\t}\n\n\t/**\n\t * Set the output format return by `this(x)` and `this.colors(n)`.\n\t * @param outputFormat The color format to use. Pass `undefined` to return [Color] objects.\n\t * @return `this`\n\t * @example chroma.scale(\"red\", \"white\").out(\"hex\")(0) // == \"#ff0000\"\n\t * @example chroma.scale(\"red\", \"white\").out(\"num\").colors(2) // == [0xff0000, 0xffffff]\n\t */\n\tpublic out<M extends ColorFormat | undefined>(\n\t\toutputFormat: M,\n\t): Scale<M extends ColorFormat ? ReturnType<Color[M]> : Color> {\n\t\tthis._out = outputFormat\n\t\treturn this as any\n\t}\n\n\t/**\n\t * This makes sure the lightness range is spread evenly across a color scale. Especially useful when working\n\t * with [multi-hue color scales](https://www.vis4.net/blog/2013/09/mastering-multi-hued-color-scales/), where\n\t * simple gamma correction can't help you very much.\n\t *\n\t * @example chroma.scale('black','red','yellow','white')\n\t * @example chroma.scale('black','red','yellow','white').correctLightness()\n\t */\n\tpublic correctLightness(enableCorrectLightness = true) {\n\t\tif (this._correctLightness != enableCorrectLightness) {\n\t\t\tthis._resetCache()\n\t\t\tconst colors = this._colors\n\t\t\tif (enableCorrectLightness && \"function\" !== typeof colors) {\n\t\t\t\t// make sure that the colors have ascending or descending lightnesses\n\t\t\t\tlet sign = 0\n\t\t\t\tfor (let i = 1; i < colors.length; i++) {\n\t\t\t\t\tconst sign2 = colors[i].lab()[0] - colors[i - 1].lab()[0]\n\t\t\t\t\tif (0 == sign) {\n\t\t\t\t\t\tsign = sign2\n\t\t\t\t\t} else if (sign * sign2 < 0) {\n\t\t\t\t\t\tthrow new Error(\"scale color lightnesses must be monotonic\")\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tthis._correctLightness = enableCorrectLightness\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the padding.\n\t * @returns [paddingLeft, paddingRight]\n\t */\n\tpublic padding(): [number, number]\n\t/**\n\t * Set the padding. Positive values will \"cut off\" the ends of gradient, while negative values will add a\n\t * section of constant color at the ends.\n\t * @example chroma.scale(\"red\", \"white\").padding(0.2)\n\t * @example chroma.scale(\"red\", \"white\").padding(0.1)(0) // == color('#ff1a1a'), instead of red\n\t * @example chroma.scale(\"red\", \"white\").padding(-0.1)(0) // == color('red')\n\t * @param paddingLeft padding on left side.(lower-valued end of the interval).\n\t * @param paddingRight padding on right (higher-valued end of the interval).\n\t * default=paddingLeft\n\t */\n\tpublic padding(paddingLeft: number, paddingRight?: number): this\n\tpublic padding(paddingLeft?: number, paddingRight: number | undefined = paddingLeft) {\n\t\tif (!paddingLeft) {\n\t\t\treturn [this._paddingLeft, this._paddingRight]\n\t\t}\n\t\tthis._paddingLeft = paddingLeft\n\t\tthis._paddingRight = paddingRight!\n\t\treturn this\n\t}\n\n\t/**\n\t * Get a number of equidistant colors.\n\t * @param numColors The number of colors to return.\n\t * @param format Output format. Defaults to `\"hex\"`. Pass `false` to get {@link Color} objects.\n\t * @returns If `numColors` is `undefined`, the colors which define this [Scale]. If `numColors` is 1,\n\t * `[this((min + max) / 2)]`. Otherwise, an array where the first element is `this(min)`, the last one is\n\t * `this(max)` and the rest are equidistant samples between min and max.\n\t * @example chroma.scale('OrRd').colors(5)\n\t * @example chroma.scale(['white', 'black']).colors(12)\n\t */\n\tpublic colors(numColors?: number, format: ColorFormat | false = \"hex\"): T[] {\n\t\tlet result: Color[]\n\t\tif (undefined === numColors) {\n\t\t\tresult = (this._colors as Color[]).slice()\n\t\t} else if (numColors == 1) {\n\t\t\tresult = [this._color((this._min + this._max) / 2)]\n\t\t} else if (numColors > 1) {\n\t\t\tresult = Array.from({ length: numColors }, (_, i) =>\n\t\t\t\tthis._color(lerp(this._min, this._max, i / (numColors - 1))),\n\t\t\t)\n\t\t} else {\n\t\t\t// returns all colors based on the defined classes\n\t\t\tlet samples\n\t\t\tif (this._classes && this._classes.length > 2) {\n\t\t\t\tsamples = Array.from(\n\t\t\t\t\t{ length: this._classes.length - 1 },\n\t\t\t\t\t(_, i) => (this._classes![i] + this._classes![i + 1]) * 0.5,\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\tsamples = this.domain() // TODO?!\n\t\t\t}\n\t\t\tresult = samples.map(s => this._color(s))\n\t\t}\n\n\t\treturn (format ? result.map(c => c[format]()) : result) as any\n\t}\n\n\t/**\n\t * Get whether the cache is enabled. Defaults to true.\n\t */\n\tpublic cache(): boolean\n\t/**\n\t * Enable or disable the cache.\n\t * @param enableCache Whether the cache should be enabled.\n\t */\n\tpublic cache(enableCache: boolean): this\n\tpublic cache(enableCache?: boolean) {\n\t\tif (undefined === enableCache) {\n\t\t\treturn !!this._cache\n\t\t}\n\t\tthis._cache = enableCache ? this._cache || new Map() : undefined\n\t\treturn this\n\t}\n\n\t/**\n\t * Get the current gamma value. Defaults to 1.\n\t */\n\tpublic gamma(): number\n\t/**\n\t * Set the gamma value. Gamma-correction can be used to \"shift\" a scale's center more the the beginning (gamma <\n\t * 1) or end (gamma > 1), typically used to \"even\" the lightness gradient. Default is 1.\n\t * @example chroma.scale('YlGn').gamma(0.5)\n\t * @example chroma.scale('YlGn').gamma(1)\n\t * @example chroma.scale('YlGn').gamma(2)\n\t */\n\tpublic gamma(gamma: number): this\n\tpublic gamma(gamma?: number) {\n\t\tif (undefined === gamma) {\n\t\t\treturn this._gamma\n\t\t}\n\t\tthis._gamma = gamma\n\t\treturn this\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _at(t: number) {\n\t\tconst c = this._color(t)\n\t\treturn this._out ? c[this._out]() : c\n\t}\n\n\t/**\n\t * @ignore\n\t */\n\tpublic _init(colorsOrFunction: Color[] | ((t: number) => Color)) {\n\t\tthis._colors = colorsOrFunction\n\t\tif (\"function\" != typeof colorsOrFunction) {\n\t\t\tthis._pos = colorsOrFunction.map((_, i) => i / (colorsOrFunction.length - 1))\n\t\t}\n\t\tthis._mode = \"rgb\"\n\t\tthis.domain(0, 1)\n\t\tthis._paddingLeft = 0\n\t\tthis._paddingRight = 0\n\t\tthis._correctLightness = false\n\t\tthis._cache = new Map()\n\t\tthis._gamma = 1\n\t}\n\n\tprivate _getClass(value: number) {\n\t\treturn this._classes!.findIndex(cls => value <= cls) - 1\n\t}\n\n\tprivate _color(val: number, bypassMap = false) {\n\t\tlet t\n\t\tif (!bypassMap) {\n\t\t\tconst min = this._min,\n\t\t\t\tmax = this._max\n\t\t\tif (this._classes && this._classes.length > 2) {\n\t\t\t\tconst c = this._getClass(val)\n\t\t\t\tt = c / (this._classes.length - 2)\n\t\t\t} else if (max !== min) {\n\t\t\t\tt = (val - min) / (max - min)\n\t\t\t} else {\n\t\t\t\tt = 1\n\t\t\t}\n\t\t\tif (this._correctLightness) {\n\t\t\t\tt = this._tCorrectedLightness(t)\n\t\t\t}\n\t\t} else {\n\t\t\tt = val\n\t\t}\n\t\tt = t ** this._gamma\n\t\tt = (this._paddingLeft + t) / (1 + this._paddingLeft + this._paddingRight)\n\t\t//\tt = this._paddingLeft + t * (1 - this._paddingLeft - this._paddingRight)\n\t\tt = clamp(t, 0, 1)\n\t\tconst tHash = t\n\t\tconst cacheResult = this._cache && this._cache.get(tHash)\n\t\tif (cacheResult) {\n\t\t\treturn cacheResult\n\t\t} else {\n\t\t\tlet col: Color\n\t\t\tif (Array.isArray(this._colors)) {\n\t\t\t\tfor (let i = 0; i < this._pos!.length; i++) {\n\t\t\t\t\tconst p = this._pos![i]\n\t\t\t\t\tif (t <= p) {\n\t\t\t\t\t\tcol = this._colors[i]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (t >= p && i == this._pos!.length - 1) {\n\t\t\t\t\t\tcol = this._colors[i]\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t\tif (t > p && t < this._pos![i + 1]) {\n\t\t\t\t\t\tt = (t - p) / (this._pos![i + 1] - p)\n\t\t\t\t\t\tcol = mix(this._colors[i], this._colors[i + 1], t, this._mode)\n\t\t\t\t\t\tbreak\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tcol = this._colors(t)\n\t\t\t}\n\t\t\tif (this._cache) {\n\t\t\t\t// tslint:disable-next-line\n\t\t\t\tthis._cache.set(tHash, col!)\n\t\t\t}\n\t\t\t// tslint:disable-next-line\n\t\t\treturn col!\n\t\t}\n\t}\n\tprivate _tCorrectedLightness(t0_1: number) {\n\t\tconst L0 = this._color(0, true).lab()[0]\n\t\tconst L1 = this._color(1, true).lab()[0]\n\t\tconst L_ideal = lerp(L0, L1, t0_1)\n\t\treturn bisect(t => this._color(t, true).lab()[0] - L_ideal, 0, 1, 8)\n\t}\n\tprivate _resetCache() {\n\t\tif (this._cache) this._cache.clear()\n\t}\n}\n\nexport namespace scales {\n\t/**\n\t * @example chroma.scales.cool()\n\t */\n\texport function cool() {\n\t\treturn scale([hsl(180, 1, 0.9), hsl(250, 0.7, 0.4)])\n\t}\n\n\t/**\n\t * @example chroma.scales.hot()\n\t */\n\texport function hot() {\n\t\treturn scale([\"#000\", \"#f00\", \"#ff0\", \"#fff\"]).mode(\"rgb\")\n\t}\n}\n\n/**\n * Computes the WCAG contrast ratio between two colors. A minimum contrast of 4.5:1\n * [is recommended](http://www.w3.org/TR/WCAG20-TECHS/G18.html) to ensure that text is still readable against a\n * background color.\n *\n * @param a\n * @param b\n */\nexport function contrast(a: Chromable, b: Chromable) {\n\tconst l1 = color(a).luminance()\n\tconst l2 = color(b).luminance()\n\tif (l1 > l2) {\n\t\treturn (l1 + 0.05) / (l2 + 0.05)\n\t} else {\n\t\treturn (l2 + 0.05) / (l1 + 0.05)\n\t}\n}\n\n/**\n * Compute the [euclidean distance](https://en.wikipedia.org/wiki/Euclidean_distance#Three_dimensions) between two\n * colors in a given color space.\n * @param a First color.\n * @param b Second color.\n * @param mode The color space in which to compute the distance. Defaults to \"lab\".\n * @example chroma.distance('#fff', '#ff0', 'rgb')\n * @example chroma.distance('#fff', '#f0f', 'rgb')\n * @example chroma.distance('#fff', '#ff0')\n * @example chroma.distance('#fff', '#f0f')\n */\nexport function distance(a: Chromable, b: Chromable, mode: ColorMode = \"lab\") {\n\tconst l1 = color(a)[mode]()\n\tconst l2 = color(b)[mode]()\n\tconst channelDifferences = l1.map((channelValue: number, channelIndex: number) => channelValue - l2[channelIndex])\n\treturn hypot(...channelDifferences)\n}\n\n/**\n * Computes color difference as developed by the Colour Measurement Committee of the Society of Dyers and Colourists\n * (CMC) in 1984. The implementation is adapted from Bruce Lindbloom. The parameters L and C are weighting factors\n * for lightness and chromaticity.\n * @param reference\n * @param sample\n * @param L\n * @param C\n * @example [r = '#ededee', s = '#edeeed', chroma.deltaE(r, s)]\n * @example [r = '#ececee', s = '#eceeec', chroma.deltaE(r, s)]\n * @example [r = '#e9e9ee', s = '#e9eee9', chroma.deltaE(r, s)]\n * @example [r = '#e4e4ee', s = '#e4eee4', chroma.deltaE(r, s)]\n * @example [r = '#e0e0ee', s = '#e0eee0', chroma.deltaE(r, s)]\n */\nexport function deltaE(reference: Chromable, sample: Chromable, L = 1, C = 1) {\n\tconst [L1, a1, b1] = color(reference).lab()\n\tconst [L2, a2, b2] = color(sample).lab()\n\tconst c1 = sqrt(a1 * a1 + b1 * b1)\n\tconst c2 = sqrt(a2 * a2 + b2 * b2)\n\tconst sl = L1 < 16.0 ? 0.511 : (0.040975 * L1) / (1.0 + 0.01765 * L1)\n\tconst sc = (0.0638 * c1) / (1.0 + 0.0131 * c1) + 0.638\n\tconst h1 = norm360(c1 < 0.000001 ? 0.0 : atan2(b1, a1) * RAD2DEG)\n\tconst t =\n\t\th1 >= 164.0 && h1 <= 345.0\n\t\t\t? 0.56 + abs(0.2 * cos((h1 + 168.0) * DEG2RAD))\n\t\t\t: 0.36 + abs(0.4 * cos((h1 + 35.0) * DEG2RAD))\n\tconst c4 = c1 * c1 * c1 * c1\n\tconst f = sqrt(c4 / (c4 + 1900.0))\n\tconst sh = sc * (f * t + 1.0 - f)\n\tconst delL = L1 - L2\n\tconst delC = c1 - c2\n\tconst delA = a1 - a2\n\tconst delB = b1 - b2\n\tconst dH2 = delA * delA + delB * delB - delC * delC\n\tconst v1 = delL / (L * sl)\n\tconst v2 = delC / (C * sc)\n\tconst v3 = sh\n\treturn sqrt(v1 * v1 + v2 * v2 + dH2 / (v3 * v3))\n}\ntype DataInfo = {\n\tmin: number\n\tmax: number\n\tsum: number\n\tvalues: number[]\n\tcount: number\n\tdomain: [number, number]\n\tlimits(mode: LimitsMode, num: number): number[]\n}\nexport function analyze(data: number[]): DataInfo {\n\tconst r: DataInfo = {\n\t\tmin: Infinity,\n\t\tmax: -Infinity,\n\t\tsum: 0,\n\t\tvalues: [] as number[],\n\t\tcount: 0,\n\t} as DataInfo\n\tfunction add(val: number) {\n\t\tif (val != undefined && !isNaN(val)) {\n\t\t\tr.values.push(val)\n\t\t\tr.sum += val\n\t\t\tif (val < r.min) r.min = val\n\t\t\tif (val > r.max) r.max = val\n\t\t\tr.count += 1\n\t\t}\n\t}\n\tdata.forEach(val => add(val))\n\tr.domain = [r.min, r.max]\n\tr.limits = function(mode, num) {\n\t\treturn limits(this, mode, num)\n\t}\n\treturn r\n}\n\ntype LimitsMode = \"c\" | \"e\" | \"q\" | \"l\" | \"k\"\nexport function limits(data: number[] | DataInfo, mode: LimitsMode = \"e\", num = 7): number[] {\n\tconst info = Array.isArray(data) ? analyze(data) : data\n\tconst { min, max, values } = info\n\tvalues.sort((a, b) => a - b)\n\tif (num == 1) {\n\t\treturn [min, max]\n\t}\n\tif (mode.startsWith(\"c\")) {\n\t\treturn [min, max]\n\t} else if (mode.startsWith(\"e\")) {\n\t\treturn Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\n\t} else if (mode.startsWith(\"l\")) {\n\t\tif (min <= 0) {\n\t\t\tthrow new Error(\"Logarithmic scales are only possible for values > 0\")\n\t\t}\n\t\tconst min_log = Math.LOG10E * log(min)\n\t\tconst max_log = Math.LOG10E * log(max)\n\t\treturn Array.from({ length: num + 1 }, (_, i) => 10 ** lerp(min_log, max_log, i / num))\n\t} else if (mode.startsWith(\"q\")) {\n\t\treturn Array.from({ length: num + 1 }, (_, i) => {\n\t\t\tconst p = ((values.length - 1) * i) / num\n\t\t\tconst pb = floor(p)\n\t\t\treturn pb == p ? values[pb] : lerp(values[pb], values[pb + 1], p - pb)\n\t\t})\n\t} else if (mode.startsWith(\"k\")) {\n\t\t// implementation based on\n\t\t// http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n\t\t// simplified for 1-d input values\n\t\tconst n = values.length\n\t\tconst assignments = new Array(n)\n\t\tconst clusterSizes = new Array(num)\n\t\tlet repeat = true\n\t\tlet nb_iters = 0\n\t\tlet centroids = Array.from({ length: num + 1 }, (_, i) => lerp(min, max, i / num))\n\t\tdo {\n\t\t\t// assignment step\n\t\t\tclusterSizes.fill(0)\n\t\t\tfor (let i = 0; i < values.length; i++) {\n\t\t\t\tconst value = values[i]\n\t\t\t\tconst minDistIndex = indexOfMax(centroids, c => -abs(c - value))\n\t\t\t\tclusterSizes[minDistIndex]++\n\t\t\t\tassignments[i] = minDistIndex\n\t\t\t}\n\n\t\t\t// update centroids step\n\t\t\tconst newCentroids = new Array(num).fill(0)\n\t\t\tfor (let i = 0; i < assignments.length; i++) {\n\t\t\t\tconst cluster = assignments[i]\n\t\t\t\tnewCentroids[cluster] += values[i]\n\t\t\t}\n\t\t\tfor (let j = 0; j < newCentroids.length; j++) {\n\t\t\t\tnewCentroids[j] /= clusterSizes[j]\n\t\t\t}\n\n\t\t\t// check convergence\n\t\t\trepeat = newCentroids.some((nc, j) => nc != centroids[j])\n\t\t\tcentroids = newCentroids\n\t\t} while (nb_iters++ < 200 && repeat)\n\n\t\t// finished k-means clustering\n\t\t// the next part is borrowed from gabrielflor.it\n\t\tconst kClusters: number[][] = Array.from({ length: num }, () => [])\n\t\tfor (let i = 0; i < assignments.length; i++) {\n\t\t\tconst cluster = assignments[i]\n\t\t\tkClusters[cluster].push(values[i])\n\t\t}\n\t\tconst tmpKMeansBreaks = []\n\t\tfor (const kCluster of kClusters) {\n\t\t\ttmpKMeansBreaks.push(kCluster[0], kCluster[kCluster.length - 1])\n\t\t}\n\t\ttmpKMeansBreaks.sort((a, b) => a - b)\n\n\t\tconst limits = []\n\t\tlimits.push(tmpKMeansBreaks[0])\n\t\tfor (let i = 1; i < tmpKMeansBreaks.length; i += 2) {\n\t\t\tconst v = tmpKMeansBreaks[i]\n\t\t\tif (!isNaN(v) && limits.indexOf(v) == -1) {\n\t\t\t\tlimits.push(v)\n\t\t\t}\n\t\t}\n\t\treturn limits\n\t} else {\n\t\tthrow new Error(\"unknown mode\")\n\t}\n}\n\nconst interpolators: { [K in InterpolationMode]?: (color1: Color, color2: Color, f: number, mode: K) => Color } = {}\n\n// const _guess_formats: { p: number; test: (args: any[]) => ColorFormat | undefined }[] = []\nconst _input: {\n\t[mode: string]: (...args: any[]) => RGB | RGBA\n} = {}\n\nfunction linear_interpolator(col1: Color, col2: Color, f: number, m: ColorMode) {\n\tconst xyz1 = col1[m]()\n\tconst xyz2 = col2[m]()\n\treturn guess(\n\t\t[\n\t\t\tlerp(xyz1[0], xyz2[0], f),\n\t\t\tlerp(xyz1[1], xyz2[1], f),\n\t\t\tlerp(xyz1[2], xyz2[2], f),\n\t\t\tlerp(col1.alpha(), col2.alpha(), f),\n\t\t],\n\t\tm,\n\t)\n}\ninterpolators.xyz = interpolators.rgb = interpolators.lab = linear_interpolator\n\ninterpolators.num = function(col1, col2, f) {\n\tconst n1 = col1.num()\n\tconst n2 = col2.num()\n\treturn num(lerp(n1, n2, f))\n}\n\ninterpolators.lrgb = function(col1, col2, f) {\n\tconst [r1, g1, b1, a1] = col1.rgba(false, false)\n\tconst [r2, g2, b2, a2] = col2.rgba(false, false)\n\treturn new Color(\n\t\tsqrt(r1 ** 2 * (1 - f) + r2 ** 2 * f),\n\t\tsqrt(g1 ** 2 * (1 - f) + g2 ** 2 * f),\n\t\tsqrt(b1 ** 2 * (1 - f) + b2 ** 2 * f),\n\t\tlerp(a1, a2, f),\n\t)\n}\n\nfunction _bezier(chromables: Chromable[]): (t: number) => Color {\n\tconst colors = chromables.map(c => color(c))\n\tconst [lab0, lab1, lab2, lab3] = colors.map(c => c.lab())\n\tif (2 == chromables.length) {\n\t\t// linear interpolation\n\t\treturn t => {\n\t\t\treturn lab([0, 1, 2].map(i => lerp(lab0[i], lab1[i], t)) as LAB)\n\t\t}\n\t} else if (3 == chromables.length) {\n\t\t// quadratic bezier interpolation\n\t\tconst bezier2 = (p0: number, p1: number, p2: number, t: number) =>\n\t\t\t(1 - t) ** 2 * p0 + 2 * (1 - t) * t * p1 + t ** 2 * p2\n\t\treturn t => lab([0, 1, 2].map(i => bezier2(lab0[i], lab1[i], lab2[i], t)) as LAB)\n\t} else if (4 == chromables.length) {\n\t\t// cubic bezier interpolation\n\t\tconst bezier3 = (p0: number, p1: number, p2: number, p3: number, t: number) =>\n\t\t\t(1 - t) ** 3 * p0 + 3 * (1 - t) ** 2 * t * p1 + 3 * (1 - t) * t ** 2 * p2 + t ** 3 * p3\n\t\treturn t => lab([0, 1, 2].map(i => bezier3(lab0[i], lab1[i], lab2[i], lab3[i], t)) as LAB)\n\t} else if (5 == chromables.length) {\n\t\tconst I0 = _bezier(colors.slice(0, 3))\n\t\tconst I1 = _bezier(colors.slice(2, 5))\n\t\treturn t => (t < 0.5 ? I0(t * 2) : I1((t - 0.5) * 2))\n\t} else throw new Error()\n}\n\nfunction guess(args: any[], mode?: ColorFormat): Color {\n\tif (Array.isArray(args[0])) args = args[0]\n\tif (!mode) {\n\t\tif (args.length == 1 && args[0] in w3cx11) {\n\t\t\tmode = \"name\"\n\t\t} else if (args.length == 1 && \"string\" == typeof args[0]) {\n\t\t\tmode = \"css\"\n\t\t} else if (args.length == 3) {\n\t\t\tmode = \"rgb\"\n\t\t} else if (args.length == 4 && \"number\" == typeof args[3] && args[3] >= 0 && args[3] <= 1) {\n\t\t\tmode = \"rgb\"\n\t\t} else if (args.length == 1 && \"number\" == typeof args[0] && args[0] >= 0 && args[0] <= 0xffffff) {\n\t\t\tmode = \"num\"\n\t\t} else throw new Error(\"could not guess mode. args \" + JSON.stringify(args))\n\t}\n\tconst channels = _input[mode](...args)\n\treturn new Color(channels[0], channels[1], channels[2], undefined !== channels[3] ? channels[3] : 1)\n}\n\nfunction _average_lrgb(colors: Color[]) {\n\tlet rSquareSum = 0,\n\t\tgSquareSum = 0,\n\t\tbSquareSum = 0,\n\t\talphaSum = 0\n\tfor (const col of colors) {\n\t\tconst [r, g, b, alpha] = col.rgba(false, false)\n\t\trSquareSum += r ** 2\n\t\tgSquareSum += g ** 2\n\t\tbSquareSum += b ** 2\n\t\talphaSum += alpha\n\t}\n\treturn new Color(\n\t\tsqrt(rSquareSum) / colors.length,\n\t\tsqrt(gSquareSum) / colors.length,\n\t\tsqrt(bSquareSum) / colors.length,\n\t\talphaSum / colors.length,\n\t)\n}\n\nfunction hex2rgb(hex: string): RGBA {\n\tlet m\n\tif ((m = hex.match(/^#?([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})([A-F\\d]{2})?$/i))) {\n\t\treturn [parseInt(m[1], 16), parseInt(m[2], 16), parseInt(m[3], 16), m[4] ? parseInt(m[4], 16) / 255 : 1]\n\t} else if ((m = hex.match(/^#?([A-F\\d])([A-F\\d])([A-F\\d])([A-F\\d])?$/i))) {\n\t\treturn [\n\t\t\tparseInt(m[1], 16) * 0x11,\n\t\t\tparseInt(m[2], 16) * 0x11,\n\t\t\tparseInt(m[3], 16) * 0x11,\n\t\t\tm[4] ? (parseInt(m[4], 16) * 0x11) / 255 : 1,\n\t\t]\n\t}\n\tthrow new Error(\"invalid hex color: \" + hex)\n}\n// color mode, i.e. representation as array of number\nexport type ColorMode = \"rgb\" | \"cmyk\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"gl\" | \"lch\" | \"xyz\"\nexport type InterpolationMode = \"rgb\" | \"lab\" | \"hsv\" | \"hsi\" | \"hcg\" | \"hsl\" | \"lch\" | \"xyz\" | \"lrgb\" | \"num\"\nexport type ColorFormat = ColorMode | \"hex\" | \"num\" | \"name\" | \"kelvin\" | \"css\"\n/**\n * CMYK color space\n * @see https://en.wikipedia.org/wiki/cmyk_color_model\n * [cyan, magenta, yellow, alpha1]\n */\ntype CMYK = [number, number, number, number]\n/**\n * WebGL colors. Like RGB, but floats in [0; 1] instead of 0-255.\n * [red255, green255, blue255, alpha1]\n */\ntype GL = [number, number, number, number]\n/**\n * Red, green, blue ranging from 0-255.\n * Can be floats and outside the above range internally.\n */\ntype RGB = [number, number, number]\n/**\n * RGB plus alpha ranging from 0-1\n * [red255, green255, blue255, alpha1]\n */\ntype RGBA = [number, number, number, number]\n/**\n * CIELAB color space\n * [lightness, A*, B*]\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space\n */\ntype LAB = [number, number, number]\n/**\n * Cylindrical representation of CIELAB\n * @see https://en.wikipedia.org/wiki/CIELAB_color_space#Cylindrical_representation:_CIELCh_or_CIEHLC\n *\n */\ntype LCH = [number, number, number]\n/**\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\n * [hueDegrees, saturation1, lightness1]\n */\ntype HSL = [number, number, number]\n/**\n * @see https://en.wikipedia.org/wiki/HSL_and_HSV\n * [hueDegrees, saturation1, value1]\n */\ntype HSV = [number, number, number]\n/**\n * @see https://en.wikipedia.org/w/index.php?title=HSI_color_space&redirect=no\n * [hueDegrees, saturation1, intensity1]\n */\ntype HSI = [number, number, number]\ntype XYZ = [number, number, number]\n/**\n * HCG Color Model\n * See https://github.com/acterhd/hcg-color\n * A color value in the HCG format is an array of three numbers [h, c, g], where\n * `h` is the hue as an angle in degrees [0; 360)\n * `c` is the chroma value in [0; 1]\n * `g` is the gray value in [0; 1]\n */\ntype HCG = [number, number, number]\n\n// interface ColorModes {\n// \tcmyk: CMYK\n// \tgl: GL\n// \trgb: RGB\n// \trgba: RGBA\n// \tlab: LAB\n// \thsl: HSL\n// \thsv: HSV\n// \thsi: HSI\n// \txyz: XYZ\n// \thcg: HCG\n// \tlch: LCH\n// \thex: string\n// \tnum: number\n// \tname: string\n// \tkelvin: number\n// \tcss: string\n// }\nfunction rgb2hex(r255: number, g255: number, b255: number, a1: number, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\tr255 = clamp(round(r255), 0, 255)\n\tg255 = clamp(round(g255), 0, 255)\n\tb255 = clamp(round(b255), 0, 255)\n\tconst rgb = (r255 << 16) | (g255 << 8) | b255\n\tconst rgbString = rgb.toString(16).padStart(6, \"0\")\n\tconst alphaString = round(clamp(a1) * 255)\n\t\t.toString(16)\n\t\t.padStart(2, \"0\")\n\treturn \"#\" + (\"argb\" == mode ? alphaString + rgbString : \"rgba\" == mode ? rgbString + alphaString : rgbString)\n}\n\n_input.lrgb = _input.rgb\n\n_input.hex = hex2rgb\n_input.hsl = hsl2rgb\nfunction norm360(degrees: number) {\n\treturn ((degrees % 360) + 360) % 360\n}\n\n_input.hsv = hsv2rgb\n\nfunction num2rgb(num: number): RGBA {\n\tif (!(\"number\" == typeof num && num >= 0 && num <= 0xffffff)) {\n\t\tthrow new Error(\"unknown num color: \" + num)\n\t}\n\tconst r = num >> 16\n\tconst g = (num >> 8) & 0xff\n\tconst b = num & 0xff\n\treturn [r, g, b, 1]\n}\n\nfunction rgb2num(r255: number, g255: number, b255: number, a1: number = 1, mode: \"rgb\" | \"rgba\" | \"argb\" = \"rgb\") {\n\tconst rgbNum = (round(r255) << 16) | (round(g255) << 8) | round(b255)\n\tif (\"rgb\" === mode) {\n\t\treturn rgbNum\n\t} else if (\"rgba\" === mode) {\n\t\treturn (rgbNum << 8) | (round(a1 * 255) << 24)\n\t} else {\n\t\treturn (round(a1 * 255) << 24) | rgbNum\n\t}\n}\n\n_input.num = num2rgb\n\nconst WS = \"\\\\s*\"\nconst FLOAT = \"([+-]?(?:\\\\d*\\\\.?)?\\\\d+(?:[eE][+-]?\\\\d+)?)\"\nconst CSS_RGB_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT, \",\", FLOAT, \",\", FLOAT, \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_RGB_WS_REGEX = new RegExp([\"^rgba?\\\\(\", FLOAT, FLOAT, FLOAT, \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS), \"i\")\nconst CSS_RGB_PERCENT_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_RGB_WS_PERCENT_REGEX = new RegExp(\n\t[\"^rgba?\\\\(\", FLOAT + \"%\", FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nconst CSS_HSL_REGEX = new RegExp(\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\", \",\", FLOAT + \"%\", \",\", FLOAT + \"%\", \"(?:,\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(\n\t\tWS,\n\t),\n\t\"i\",\n)\nconst CSS_HSL_WS_REGEX = new RegExp(\n\t[\"^hsla?\\\\(\", FLOAT + \"(deg|rad|turn)?\\\\s+\" + FLOAT + \"%\", FLOAT + \"%\", \"(?:/\", FLOAT + \"(%)?\", \")?\\\\)$\"].join(WS),\n\t\"i\",\n)\nfunction css2rgb(css: string): RGBA {\n\tif (w3cx11 && (w3cx11 as any)[css.toLowerCase()]) {\n\t\treturn num2rgb((w3cx11 as any)[css.toLowerCase()])\n\t}\n\tlet m\n\tif ((m = css.match(CSS_RGB_REGEX) || css.match(CSS_RGB_WS_REGEX))) {\n\t\treturn [\n\t\t\tclamp(+m[1], 0, 255),\n\t\t\tclamp(+m[2], 0, 255),\n\t\t\tclamp(+m[3], 0, 255),\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\n\t\t]\n\t} else if ((m = css.match(CSS_RGB_PERCENT_REGEX) || css.match(CSS_RGB_WS_PERCENT_REGEX))) {\n\t\treturn [\n\t\t\tclamp(+m[1] / 100) * 255,\n\t\t\tclamp(+m[2] / 100) * 255,\n\t\t\tclamp(+m[3] / 100) * 255,\n\t\t\tm[4] ? clamp(m[5] ? +m[4] / 100 : +m[4]) : 1,\n\t\t]\n\t} else if ((m = css.match(CSS_HSL_REGEX) || css.match(CSS_HSL_WS_REGEX))) {\n\t\tconst CONVERSION = { deg: 1, rad: RAD2DEG, turn: 360 }\n\t\tconst angleUnit = (m[2] ? m[2].toLowerCase() : \"deg\") as \"deg\" | \"rad\" | \"turn\"\n\t\treturn hsl2rgb(\n\t\t\t(((+m[1] * CONVERSION[angleUnit]) % 360) + 360) % 360,\n\t\t\tclamp(+m[3] / 100),\n\t\t\tclamp(+m[4] / 100),\n\t\t\tm[5] ? clamp(m[6] ? +m[5] / 100 : +m[5]) : 1,\n\t\t)\n\t} else {\n\t\treturn hex2rgb(css)\n\t}\n}\n\nfunction rgb2css(r: number, g: number, b: number, a = 1) {\n\tif (a >= 1) {\n\t\treturn \"rgb(\" + [r, g, b].map(round).join(\",\") + \")\"\n\t} else {\n\t\treturn \"rgba(\" + [r, g, b].map(round).join(\",\") + \",\" + a + \")\"\n\t}\n}\n\nfunction rnd(a: any) {\n\treturn round(a * 100) / 100\n}\n\nfunction hsl2css([h, s, l]: HSL, alpha: number) {\n\tconst mode = alpha < 1 ? \"hsla\" : \"hsl\"\n\treturn (\n\t\tmode +\n\t\t\"(\" +\n\t\trnd(h) +\n\t\t\",\" +\n\t\trnd(s * 100) +\n\t\t\"%\" +\n\t\t\",\" +\n\t\trnd(l * 100) +\n\t\t\"%\" +\n\t\t(\"hsla\" == mode ? \",\" + rnd(alpha) : \"\") +\n\t\t\")\"\n\t)\n}\n\n_input.css = css2rgb\n\n_input.name = function(name) {\n\treturn num2rgb((w3cx11 as any)[name])\n}\n\nfunction lch2lab(l: number, c: number, hueDegrees: number): LAB {\n\t/*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel.\n    These formulas were invented by David Dalrymple to obtain maximum contrast without going\n    out of gamut if the parameters are in the range 0-1.\n\n    A saturation multiplier was added by Gregor Aisch\n     */\n\treturn [l, cos(hueDegrees * DEG2RAD) * c, sin(hueDegrees * DEG2RAD) * c]\n}\n\nfunction lch2rgb(l: number, c: number, hDegrees: number, alpha1 = 1): RGBA {\n\tconst [, a, b] = lch2lab(l, c, hDegrees)\n\treturn cielab2rgb(l, a, b, alpha1)\n}\n\nfunction lab2lch(l: number, a: number, b: number): LCH {\n\tconst c = hypot(a, b)\n\tconst h = (atan2(b, a) * RAD2DEG + 360) % 360\n\treturn [l, c, h]\n}\n\nfunction rgb2lch(r255: number, g255: number, b255: number) {\n\tconst [l, a, b2] = rgb2lab(r255, g255, b255)\n\treturn lab2lch(l, a, b2)\n}\n\n_input.lch = lch2rgb\n\nfunction rgb2cmyk(r255: number, g255: number, b255: number): CMYK {\n\tr255 /= 255\n\tg255 /= 255\n\tb255 /= 255\n\tconst k = 1 - max(r255, g255, b255)\n\tif (1 == k) return [0, 0, 0, 1]\n\tconst c = (1 - r255 - k) / (1 - k)\n\tconst m = (1 - g255 - k) / (1 - k)\n\tconst y = (1 - b255 - k) / (1 - k)\n\treturn [c, m, y, k]\n}\n\nfunction cmyk2rgb(c1: number, m1: number, y1: number, k1: number, alpha1 = 1): RGBA {\n\tif (k1 == 1) {\n\t\treturn [0, 0, 0, alpha1]\n\t}\n\tconst r255 = 255 * (1 - c1) * (1 - k1)\n\tconst g255 = 255 * (1 - m1) * (1 - k1)\n\tconst b255 = 255 * (1 - y1) * (1 - k1)\n\treturn [r255, g255, b255, alpha1]\n}\n\n_input.cmyk = cmyk2rgb\n\n_input.gl = function(r: number, g: number, b: number, a: number = 1): RGBA {\n\treturn [r * 255, g * 255, b * 255, a]\n}\n\n//function rgb2luminance(r: number, g: number, b: number) {\n//\t// https://en.wikipedia.org/wiki/Relative_luminance\n//\tconst [, Y] = rgb2xyz(r, g, b)\n//\treturn Y\n//}\n\nfunction rgbChannel2RgbLinear(x255: number) {\n\tconst x1 = x255 / 255\n\t// http://entropymine.com/imageworsener/srgbformula/\n\tif (x1 <= 0.04045) {\n\t\treturn x1 / 12.92\n\t} else {\n\t\treturn ((x1 + 0.055) / 1.055) ** 2.4\n\t}\n}\nfunction rgbLinearChannel2Rgb(xLinear1: number) {\n\tif (xLinear1 <= 0.0031308) {\n\t\treturn 255 * (12.92 * xLinear1)\n\t} else {\n\t\treturn 255 * ((1 + 0.055) * xLinear1 ** (1 / 2.4) - 0.055)\n\t}\n}\n\nfunction kelvin2rgb(kelvin: number): RGB {\n\tconst t = kelvin / 100\n\tlet r, g, b\n\tif (t < 66) {\n\t\tr = 255\n\t\tg = -155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)\n\t\tb = t < 20 ? 0 : -254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)\n\t} else {\n\t\tr = 351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)\n\t\tg = 325.4494125711974 + 0.07943456536662342 * (t - 50) - 28.0852963507957 * log(t - 50)\n\t\tb = 255\n\t}\n\treturn [r, g, b]\n}\n\n_input.rgb = (...args: number[]) => args as RGB\n\nfunction rgb2kelvin(r255: number, g255: number, b255: number) {\n\tconsole.log(b255 - r255)\n\tif (g255 + b255 < 158.61) {\n\t\tconsole.log(\"0 < t < 20\")\n\t\t// calc from green\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\tt => g255 - (-155.25485562709179 - 0.44596950469579133 * (t - 2) + 104.49216199393888 * log(t - 2)),\n\t\t\t\t15,\n\t\t\t\t4,\n\t\t\t) * 100,\n\t\t)\n\t\treturn (Math.E ** ((g255 + 155.25485562709179 + 0.44596950469579133 * (15 - 2)) / 104.49216199393888) + 2) * 100\n\t} else if (b255 - r255 < 0) {\n\t\tconsole.log(\"20 < t < 66\")\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\tt => b255 - (-254.76935184120902 + 0.8274096064007395 * (t - 10) + 115.67994401066147 * log(t - 10)),\n\t\t\t\t43,\n\t\t\t\t4,\n\t\t\t) * 100,\n\t\t)\n\t\treturn (\n\t\t\t(Math.E ** ((b255 + 254.76935184120902 - 0.8274096064007395 * (43 - 10)) / 115.67994401066147) + 10) * 100\n\t\t)\n\t} else {\n\t\tconsole.log(\"0 < t < 400, start= \" + (-1.4 * (r255 + g255) + 755))\n\t\treturn round(\n\t\t\tnewtonIterate1d(\n\t\t\t\tt => r255 - (351.97690566805693 + 0.114206453784165 * (t - 55) - 40.25366309332127 * log(t - 55)),\n\t\t\t\t-1.4 * (r255 + g255) + 755,\n\t\t\t\t8,\n\t\t\t) * 100,\n\t\t)\n\t\treturn ((r255 / 329.698727446) ** (1 / -0.1332047592) + 60) * 100\n\t}\n\treturn newtonIterate1d(\n\t\tk => {\n\t\t\tconst eps = 1e-9\n\t\t\tconst [kr, kg, kb] = kelvin2rgb(k)\n\t\t\tconst [kr2, kg2, kb2] = kelvin2rgb(k + eps)\n\t\t\tconst dkr = (kr2 - kr) / eps,\n\t\t\t\tdkg = (kg2 - kg) / eps,\n\t\t\t\tdkb = (kb2 - kb) / eps\n\t\t\treturn dkr * (kr - r255) + dkg * (kg - g255) + dkb * (kb - b255)\n\n\t\t\treturn kb / kr - b255 / r255\n\t\t},\n\t\t//1000,\n\t\t//40000,\n\t\tMath.E ** ((b255 / r255 + 2.5) / 0.4),\n\t\t20,\n\t\t//1e-6,\n\t)\n\tlet maxTemp = 40000\n\tlet minTemp = 1000\n\tconst eps = 0.4\n\tlet temp: number = 0\n\tlet rgb\n\twhile (maxTemp - minTemp > eps) {\n\t\ttemp = (maxTemp + minTemp) * 0.5\n\t\trgb = kelvin2rgb(temp)\n\t\tif (rgb[2] / rgb[0] >= b255 / r255) {\n\t\t\tmaxTemp = temp\n\t\t} else {\n\t\t\tminTemp = temp\n\t\t}\n\t}\n\treturn round(temp)\n}\n\n_input.temperature = _input.kelvin = _input.K = kelvin2rgb\n\nfunction blend_f(f: (c1: RGB, c2: RGB) => RGB) {\n\treturn function(bottom: Chromable, top: Chromable) {\n\t\tconst [r, g, b] = f(color(top).rgb(), color(bottom).rgb())\n\t\treturn rgb(r, g, b)\n\t}\n}\n\nfunction each(f: (a: number, b: number) => number) {\n\treturn function(c1: RGB, c2: RGB): RGB {\n\t\treturn c1.map((e, i) => f(e, c2[i])) as RGB\n\t}\n}\n\nfunction _screen(a: number, b: number) {\n\treturn 255 * (1 - (1 - a / 255) * (1 - b / 255))\n}\n\nfunction _overlay(a: number, b: number) {\n\tif (b < 128) {\n\t\treturn (2 * a * b) / 255\n\t} else {\n\t\treturn 255 * (1 - 2 * (1 - a / 255) * (1 - b / 255))\n\t}\n}\n\nfunction _burn(a: number, b: number) {\n\treturn 255 * (1 - (1 - b / 255) / (a / 255))\n}\n\nfunction _dodge(a: number, b: number) {\n\tif (a == 255) {\n\t\treturn 255\n\t}\n\treturn 255 * min(1, b / 255 / (1 - a / 255))\n}\n\n/**\n * r, g, b can be in any interval (0-1 or 0-255)\n * @param r\n * @param g\n * @param b\n */\nfunction rgb2hexhue(r: number, g: number, b: number) {\n\tconst m = min(r, g, b)\n\tconst M = max(r, g, b)\n\tconst delta = M - m\n\tlet hueTurnX6 // angle as value between 0 and 6\n\tif (0 == delta) {\n\t\thueTurnX6 = 0\n\t} else if (r == M) {\n\t\t// second term to make sure the value is > 0\n\t\thueTurnX6 = (g - b) / delta + (g < b ? 6 : 0)\n\t} else if (g == M) {\n\t\thueTurnX6 = 2 + (b - r) / delta\n\t} else {\n\t\thueTurnX6 = 4 + (r - g) / delta\n\t}\n\treturn [hueTurnX6 * 60, m, M]\n}\nfunction hcxm2rgb(hueDegrees: number, c1: number, x1: number, m1: number, alpha1: number): RGBA {\n\tconst m255 = m1 * 255\n\tconst cm255 = c1 * 255 + m255\n\tconst xm255 = x1 * 255 + m255\n\tif (hueDegrees < 60) {\n\t\treturn [cm255, xm255, m255, alpha1]\n\t} else if (hueDegrees < 120) {\n\t\treturn [xm255, cm255, m255, alpha1]\n\t} else if (hueDegrees < 180) {\n\t\treturn [m255, cm255, xm255, alpha1]\n\t} else if (hueDegrees < 240) {\n\t\treturn [m255, xm255, cm255, alpha1]\n\t} else if (hueDegrees < 300) {\n\t\treturn [xm255, m255, cm255, alpha1]\n\t} else {\n\t\treturn [cm255, m255, xm255, alpha1]\n\t}\n}\n\n/**\n * https://en.wikipedia.org/w/index.php?title=HSL_and_HSV&oldid=856714654#From_HSL\n */\nfunction hsl2rgb(hueDegrees: number, s1: number, l1: number, alpha1 = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst c1 = (1 - abs(2 * l1 - 1)) * s1\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), l1 - c1 / 2, alpha1)\n}\nfunction rgb2hsl(r255: number, g255: number, b255: number): HSL {\n\tconst [hue, min1, max1] = rgb2hexhue(r255 / 255, g255 / 255, b255 / 255)\n\tconst l1 = (max1 + min1) / 2\n\tlet s1: number\n\tif (max1 == min1) {\n\t\ts1 = 0\n\t} else {\n\t\ts1 = l1 < 0.5 ? (max1 - min1) / (max1 + min1) : (max1 - min1) / (2 - max1 - min1)\n\t}\n\treturn [hue, s1, l1]\n}\n\nfunction hsv2rgb(hueDegrees: number, s1: number, v1: number, alpha1: number = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst c1 = v1 * s1\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), v1 - c1, alpha1)\n}\n\nfunction rgb2hsv(r255: number, g255: number, b255: number): HSV {\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\n\tconst delta255 = max255 - min255\n\tconst v1 = max255 / 255.0\n\tconst s1 = max255 == 0 ? 0 : delta255 / max255\n\treturn [hue, s1, v1]\n}\n\nfunction hcg2rgb(hueDegrees: number, c1: number, g1: number, alpha1 = 1): RGBA {\n\thueDegrees = norm360(hueDegrees)\n\tconst p = g1 * (1 - c1)\n\treturn hcxm2rgb(hueDegrees, c1, c1 * (1 - abs(((hueDegrees / 60) % 2) - 1)), p, alpha1)\n}\n\nfunction rgb2hcg(r255: number, g255: number, b255: number): HCG {\n\tconst [hue, min255, max255] = rgb2hexhue(r255, g255, b255)\n\tconst c1 = (max255 - min255) / 255\n\tconst _g1 = c1 < 1 ? min255 / 255 / (1 - c1) : 0\n\treturn [hue, c1, _g1]\n}\n\n_input.hcg = hcg2rgb\n\nfunction cielab2rgb(LStar100: number, aStar: number, bStar: number, alpha = 1): RGBA {\n\tconst [x, y, z] = cielab2xyz(LStar100, aStar, bStar)\n\treturn xyz2rgb(x, y, z, alpha)\n}\n\nfunction cielab2xyz(LStar100: number, aStar: number, bStar: number) {\n\tfunction fInv(t: number) {\n\t\tif (t > LAB_delta) {\n\t\t\treturn t ** 3\n\t\t} else {\n\t\t\treturn LAB_3DeltaPow2 * (t - 4 / 29)\n\t\t}\n\t}\n\treturn [\n\t\tLAB_Xn * fInv((LStar100 + 16) / 116 + aStar / 500),\n\t\tLAB_Yn * fInv((LStar100 + 16) / 116),\n\t\tLAB_Zn * fInv((LStar100 + 16) / 116 - bStar / 200),\n\t]\n}\nfunction xyz2cielab(x: number, y: number, z: number): LAB {\n\t// https://en.wikipedia.org/w/index.php?title=CIELAB_color_space&oldid=849576085#Forward_transformation\n\tfunction f(t: number) {\n\t\tif (t > LAB_deltaPow3) {\n\t\t\treturn cbrt(t)\n\t\t} else {\n\t\t\treturn t / LAB_3DeltaPow2 + 4 / 29\n\t\t}\n\t}\n\treturn [116 * f(y / LAB_Yn) - 16, 500 * (f(x / LAB_Xn) - f(y / LAB_Yn)), 200 * (f(y / LAB_Yn) - f(z / LAB_Zn))]\n}\n\n// const LAB_CONSTANTS = {\nconst LAB_Kn = 18\nconst LAB_Xn = 0.95047\nconst LAB_Yn = 1\nconst LAB_Zn = 1.08883\nconst LAB_delta = 0.206896552 // delta = 6 / 29\nconst LAB_3DeltaPow2 = 0.12841855 // 3 * delta ** 2\nconst LAB_deltaPow3 = 0.008856452 // delta ** 3\n// }\n\nfunction rgb2lab(r255: number, g255: number, b255: number): RGB {\n\tconst [x, y, z] = rgb2xyz(r255, g255, b255)\n\treturn xyz2cielab(x, y, z)\n}\n\nfunction rgb2xyz(r255: number, g255: number, b255: number): XYZ {\n\t// https://en.wikipedia.org/wiki/SRGB#The_reverse_transformation\n\tconst r1Linear = rgbChannel2RgbLinear(r255)\n\tconst g1Linear = rgbChannel2RgbLinear(g255)\n\tconst b1Linear = rgbChannel2RgbLinear(b255)\n\tconst X = 0.4124564 * r1Linear + 0.3575761 * g1Linear + 0.1804375 * b1Linear\n\tconst Y = 0.2126729 * r1Linear + 0.7151522 * g1Linear + 0.072175 * b1Linear\n\tconst Z = 0.0193339 * r1Linear + 0.119192 * g1Linear + 0.9503041 * b1Linear\n\treturn [X, Y, Z]\n}\nfunction xyz2rgb(X1: number, Y1: number, Z1: number, alpha1 = 1): RGBA {\n\t// https://en.wikipedia.org/wiki/SRGB#The_forward_transformation_(CIE_XYZ_to_sRGB)\n\tconst r1Linear = 3.2404542 * X1 - 1.5371385 * Y1 - 0.4985314 * Z1\n\tconst g1Linear = -0.969266 * X1 + 1.8760108 * Y1 + 0.041556 * Z1\n\tconst b1Linear = 0.0556434 * X1 - 0.2040259 * Y1 + 1.0572252 * Z1\n\treturn [rgbLinearChannel2Rgb(r1Linear), rgbLinearChannel2Rgb(g1Linear), rgbLinearChannel2Rgb(b1Linear), alpha1]\n}\n\n_input.xyz = xyz2rgb\n_input.lab = cielab2rgb\n\n/**\n * For HSI, we use the direct angle calculation. I.e. atan2(beta, alpha). See wikipedia link. This is why we don't use\n * hcxm2rgb.\n */\nfunction hsi2rgb(hueDegrees: number, s1: number, i1: number, alpha1 = 1): RGBA {\n\t/*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n     */\n\tlet r, g, b\n\tlet hRad = hueDegrees * DEG2RAD\n\tif (hRad < (2 * PI) / 3) {\n\t\tb = (1 - s1) / 3\n\t\tr = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tg = 1 - (b + r)\n\t} else if (hRad < (4 * PI) / 3) {\n\t\thRad -= (2 * PI) / 3\n\t\tr = (1 - s1) / 3\n\t\tg = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tb = 1 - (r + g)\n\t} else {\n\t\thRad -= (4 * PI) / 3\n\t\tg = (1 - s1) / 3\n\t\tb = (1 + (s1 * cos(hRad)) / cos(PI / 3 - hRad)) / 3\n\t\tr = 1 - (g + b)\n\t}\n\treturn [3 * i1 * r * 255, 3 * i1 * g * 255, 3 * i1 * b * 255, alpha1]\n}\n\n/**\n * For HSI, we use the direct angle calculation. I.e. atan2(beta, alpha). See wikipedia link. This is why we don't use\n * rgb2hexhue.\n */\nfunction rgb2hsi(r255: number, g255: number, b255: number): HSI {\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Hue_and_chroma\n\t// See https://en.wikipedia.org/wiki/HSL_and_HSV#Lightness\n\tconst r1 = r255 / 255\n\tconst g1 = g255 / 255\n\tconst b1 = b255 / 255\n\tconst i1 = (r1 + g1 + b1) / 3\n\tif (r1 == g1 && g1 == b1) {\n\t\treturn [0, 0, i1]\n\t} else {\n\t\tconst alpha = (1 / 2) * (2 * r1 - g1 - b1)\n\t\tconst beta = (sqrt(3) / 2) * (g1 - b1)\n\t\tconst hRad = atan2(beta, alpha)\n\t\tconst min1 = min(r1, g1, b1)\n\t\tconst s1 = 1 - min1 / i1\n\t\treturn [(hRad < 0 ? 2 * PI + hRad : hRad) * RAD2DEG, s1, i1]\n\t}\n}\n\n_input.hsi = hsi2rgb\n\ninterpolators.hsv = interpolators.hsl = interpolators.hsi = interpolators.lch = interpolators.hcg = function interpolate_hsx(\n\tcolor1: Color,\n\tcolor2: Color,\n\tf: number,\n\tm: \"hsv\" | \"hsl\" | \"hsi\" | \"lch\" | \"hcg\",\n) {\n\tconst [a1, b1, c1] = color1[m]()\n\tconst [a2, b2, c2] = color2[m]()\n\tfunction lerpHue(hue1: number, hue2: number, f: number) {\n\t\tconst dh = norm360(hue2 - hue1 + 180) - 180\n\t\treturn hue1 + f * dh\n\t}\n\treturn color(\n\t\t(\"h\" == m.charAt(0) ? lerpHue : lerp)(a1, a2, f),\n\t\tlerp(b1, b2, f),\n\t\t(\"h\" == m.charAt(2) ? lerpHue : lerp)(c1, c2, f),\n\t\tm,\n\t)\n}\n\nfunction indexOfMax<T>(arr: ArrayLike<T>, f: (el: T) => number) {\n\tlet maxValue = -Infinity,\n\t\tmaxValueIndex = -1\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tconst value = f(arr[i])\n\t\tif (value > maxValue) {\n\t\t\tmaxValue = value\n\t\t\tmaxValueIndex = i\n\t\t}\n\t}\n\treturn maxValueIndex\n}\nfunction withMax<T>(arr: ArrayLike<T>, f: (el: T) => number): T {\n\treturn arr[indexOfMax(arr, f)]\n}\n","import { assert, int, NLA_DEBUG, V3 } from 'ts3dutils'\nimport { currentGL, TSGLContext } from './index'\n\nimport GL = WebGLRenderingContextStrict\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\n\nexport class Buffer {\n\tbuffer: WebGLBuffer | undefined = undefined\n\tdata: any[] = []\n\n\t/** Number of elements in buffer. 2 V3s is still 2, not 6. */\n\tcount: int = 0\n\n\t/** Space between elements in buffer. 3 for V3s. */\n\tspacing: 1 | 2 | 3 | 4 = 1\n\n\thasBeenCompiled: boolean = false\n\n\tname?: string\n\n\tmaxValue?: number\n\n\tbindSize: GL['UNSIGNED_INT'] | GL['UNSIGNED_SHORT']\n\n\t/**\n\t * Provides a simple method of uploading data to a GPU buffer.\n\t *\n\t * @example\n\t *     const vertices = new Buffer(WGL.ARRAY_BUFFER, Float32Array)\n\t *     vertices.data = [[0, 0, 0], [1, 0, 0], [0, 1, 0], [1, 1, 0]]\n\t *     vertices.compile()\n\t *\n\t * @example\n\t *     const indices = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, Uint16Array)\n\t *     indices.data = [[0, 1, 2], [2, 1, 3]]\n\t *     indices.compile()\n\t *\n\t * @param target Specifies the target to which the buffer object is bound.\n\t * @param type\n\t */\n\tconstructor(\n\t\tpublic readonly target: GL.BufferTarget,\n\t\tpublic readonly type: typeof Float32Array | typeof Uint16Array | typeof Uint32Array,\n\t) {\n\t\tassert(\n\t\t\ttarget == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER,\n\t\t\t'target == WGL.ARRAY_BUFFER || target == WGL.ELEMENT_ARRAY_BUFFER',\n\t\t)\n\t\tassert(\n\t\t\ttype == Float32Array || type == Uint16Array || type == Uint32Array,\n\t\t\t'type == Float32Array || type == Uint16Array || type == Uint32Array',\n\t\t)\n\t\tif (Uint16Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_SHORT\n\t\t} else if (Uint32Array == type) {\n\t\t\tthis.bindSize = WGL.UNSIGNED_INT\n\t\t}\n\t}\n\n\t/**\n\t * Upload the contents of `data` to the GPU in preparation for rendering. The data must be a list of lists\n\t * where each inner list has the same length. For example, each element of data for vertex normals would be a\n\t * list of length three. This will remember the data length and element length for later use by shaders.\n\t *\n\t * This could have used `[].concat.apply([], this.data)` to flatten the array but Google\n\t * Chrome has a maximum number of arguments so the concatenations are chunked to avoid that limit.\n\t *\n\t * @param usage Either `WGL.STATIC_DRAW` or `WGL.DYNAMIC_DRAW`. Defaults to `WGL.STATIC_DRAW`\n\t */\n\tcompile(usage: GL.BufferDataUsage = WGL.STATIC_DRAW, gl: TSGLContext = currentGL()): void {\n\t\tassert(\n\t\t\tWGL.STATIC_DRAW == usage || WGL.DYNAMIC_DRAW == usage,\n\t\t\t'WGL.STATIC_DRAW == type || WGL.DYNAMIC_DRAW == type',\n\t\t)\n\t\tthis.buffer = this.buffer || gl.createBuffer()!\n\t\tlet buffer: Float32Array | Uint16Array | Uint32Array\n\t\tif (this.data.length == 0) {\n\t\t\tconsole.warn('empty buffer ' + this.name)\n\t\t\t//console.trace()\n\t\t}\n\t\tif (this.data.length == 0 || this.data[0] instanceof V3) {\n\t\t\tassert(!(this.data[0] instanceof V3) || this.type == Float32Array)\n\t\t\tV3.pack(this.data, (buffer = new this.type(this.data.length * 3) as Float32Array)) // asserts that all\n\t\t\t// elements are V3s\n\t\t\tthis.spacing = 3\n\t\t\tthis.count = this.data.length\n\t\t\tthis.maxValue = 0\n\t\t} else {\n\t\t\t//assert(Array != this.data[0].constructor, this.name + this.data[0])\n\t\t\tif (Array.isArray(this.data[0])) {\n\t\t\t\tconst bufferLength = this.data.length * this.data[0].length\n\t\t\t\tbuffer = new this.type(bufferLength)\n\t\t\t\tlet i = this.data.length,\n\t\t\t\t\tdestPtr = bufferLength\n\t\t\t\twhile (i--) {\n\t\t\t\t\tconst subArray = this.data[i]\n\t\t\t\t\tlet j = subArray.length\n\t\t\t\t\twhile (j--) {\n\t\t\t\t\t\tbuffer[--destPtr] = subArray[j]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tassert(0 == destPtr)\n\t\t\t} else {\n\t\t\t\tbuffer = new this.type(this.data)\n\t\t\t}\n\n\t\t\tconst spacing = this.data.length ? buffer.length / this.data.length : 0\n\t\t\tassert(spacing % 1 == 0, `buffer ${this.name} elements not of consistent size, average size is ` + spacing)\n\t\t\tif (NLA_DEBUG) {\n\t\t\t\tif (10000 <= buffer.length) {\n\t\t\t\t\tthis.maxValue = 0\n\t\t\t\t} else {\n\t\t\t\t\tthis.maxValue = Math.max.apply(undefined, buffer)\n\t\t\t\t}\n\t\t\t}\n\t\t\tassert([1, 2, 3, 4].includes(spacing))\n\t\t\tthis.spacing = spacing as 1 | 2 | 3 | 4\n\t\t\tthis.count = this.data.length\n\t\t}\n\t\tgl.bindBuffer(this.target, this.buffer)\n\t\tgl.bufferData(this.target, buffer, usage)\n\t\tthis.hasBeenCompiled = true\n\t}\n}\n","import {\r\n\tAABB,\r\n\tarrayFromFunction,\r\n\tassert,\r\n\tassertVectors,\r\n\teq0,\r\n\tint,\r\n\tlerp,\r\n\tM4,\r\n\tNLA_PRECISION,\r\n\traddd,\r\n\tTransformable,\r\n\tTuple3,\r\n\tV,\r\n\tV3,\r\n} from 'ts3dutils'\r\n\r\nimport { Buffer, currentGL, GL_COLOR, pushQuad, TSGLContext } from './index'\r\n\r\nconst { cos, sin, PI, min, max } = Math\r\n\r\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\r\nimport GL = WebGLRenderingContextStrict\r\n\r\nconst tempM4_1 = new M4()\r\nconst tempM4_2 = new M4()\r\n\r\nexport interface MeshData {\r\n\tnormals: V3[]\r\n\tcoords: [number, number][]\r\n\tcolors: GL_COLOR[]\r\n\tTRIANGLES: int[]\r\n\tLINES: int[]\r\n}\r\nexport type MeshWith<T extends keyof MeshData = never> = Mesh & Pick<MeshData, T>\r\n\r\n/**\r\n * @example new Mesh()\r\n *        .addIndexBuffer('TRIANGLES')\r\n *        .addIndexBuffer('LINES')\r\n *        .addVertexBuffer('normals', 'ts_Normal')\r\n */\r\nexport class Mesh extends Transformable {\r\n\thasBeenCompiled: boolean = false\r\n\tvertexBuffers: { [name: string]: Buffer } = {}\r\n\tindexBuffers: { [name: string]: Buffer } = {}\r\n\r\n\tvertices: V3[]\r\n\tnormals?: V3[]\r\n\r\n\tconstructor() {\r\n\t\tsuper()\r\n\t\tthis.addVertexBuffer('vertices', 'ts_Vertex')\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate area, volume and centroid of the mesh.\r\n\t *\r\n\t * The area is the sum of the areas of the triangles.\r\n\t *\r\n\t * For closed meshes, the volume is the contained volume. If the volume is inside-out, i.e. the face normals point\r\n\t * inwards, the returned value is negative. In general, this calculates the sum of the z-direction shadow volumes\r\n\t * of the triangles. The z-dir shadow volume is the cut-off prism with the triangle projected onto the XY plane as\r\n\t * the base face and the triangle itself as the top face.\r\n\t *\r\n\t * The centroid is the \"mean point of all points inside the volume\". If a uniform density is assumed, this is\r\n\t * equivalent to the center of gravity. In general, this calculates the weighted average of the centroids of all the\r\n\t * triangle shadow volumes.\r\n\t */\r\n\tcalcVolume(this: Mesh & { TRIANGLES: int[] }): { volume: number; centroid: V3; area: number } {\r\n\t\tlet totalVolumeX2 = 0,\r\n\t\t\ttotalCentroidWithZX2 = V3.O,\r\n\t\t\ttotalAreaX2 = 0\r\n\t\tconst triangles = this.TRIANGLES\r\n\t\tconst vertices = this.vertices\r\n\t\tfor (let i = 0; i < triangles.length; i += 3) {\r\n\t\t\tconst ai = triangles[i + 0],\r\n\t\t\t\tbi = triangles[i + 1],\r\n\t\t\t\tci = triangles[i + 2]\r\n\t\t\tconst a = vertices[ai],\r\n\t\t\t\tb = vertices[bi],\r\n\t\t\t\tc = vertices[ci]\r\n\t\t\tconst ab = b.minus(a),\r\n\t\t\t\tac = c.minus(a)\r\n\t\t\tconst normal = ab.cross(ac)\r\n\t\t\t//const centroidZ = (v0.z + v1.z + v2.z) / 3\r\n\t\t\tconst faceCentroid = V3.add(a, b, c).div(3)\r\n\t\t\t//totalVolume += centroidZ * (area === v01.cross(v02).length() / 2) * v01.cross(v02).unit().z\r\n\t\t\ttotalVolumeX2 += faceCentroid.z * normal.z\r\n\t\t\tconst faceAreaX2 = normal.length()\r\n\t\t\ttotalAreaX2 += faceAreaX2\r\n\r\n\t\t\t// NB: the shadow volume centroid does NOT have the same XY coordinates\r\n\t\t\t// as the face centroid.\r\n\t\t\t// calculate the weighted centroid of the shadow volume:\r\n\t\t\t// faceShadowCentroid = INTEGRATE [0; 1] (\r\n\t\t\t//   INTEGRATE [0; 1 - s] (\r\n\t\t\t//     normal.z *\r\n\t\t\t//     ((1 - s - t) a + s b + t c) *\r\n\t\t\t//     ((1 - s - t) a + s b + t c).z\r\n\t\t\t//   ) dt\r\n\t\t\t// ) ds\r\n\t\t\t// = (a (2 a.z + b.z + c.z) + b (a.z + 2 b.z + c.z) + c (a.z + b.z + 2 c.z)) / 24\r\n\t\t\tconst faceShadowCentroid = V3.add(\r\n\t\t\t\ta.times(2 * a.z + b.z + c.z),\r\n\t\t\t\tb.times(a.z + 2 * b.z + c.z),\r\n\t\t\t\tc.times(a.z + b.z + 2 * c.z),\r\n\t\t\t).times(normal.z) // 1/24 factor is done at very end\r\n\t\t\ttotalCentroidWithZX2 = totalCentroidWithZX2.plus(faceShadowCentroid)\r\n\t\t}\r\n\t\t// sumInPlaceTree adds negligible additional accuracy for XY sphere\r\n\t\tconst volume = totalVolumeX2 / 2\r\n\t\treturn {\r\n\t\t\tvolume,\r\n\t\t\tcentroid: eq0(volume) ? V3.O : totalCentroidWithZX2.div(24 * volume).schur(new V3(1, 1, 0.5)),\r\n\t\t\tarea: totalAreaX2 / 2,\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Add a new vertex buffer with a list as a property called `name` on this object and map it to\r\n\t * the attribute called `attribute` in all shaders that draw this mesh.\r\n\t * @example new Mesh().addVertexBuffer('coords', 'ts_TexCoord')\r\n\t */\r\n\taddVertexBuffer<K extends string>(name: K, attribute: string): this & { [k in K]: any[] } {\r\n\t\tassert(!this.vertexBuffers[attribute], 'Buffer ' + attribute + ' already exists.')\r\n\t\t//assert(!this[name])\r\n\t\tthis.hasBeenCompiled = false\r\n\t\tassert('string' == typeof name)\r\n\t\tassert('string' == typeof attribute)\r\n\t\tconst buffer = (this.vertexBuffers[attribute] = new Buffer(WGL.ARRAY_BUFFER, Float32Array))\r\n\t\tbuffer.name = name\r\n\t\t;(this as any)[name] = []\r\n\t\treturn this as any\r\n\t}\r\n\r\n\t/**\r\n\t * Add a new index buffer.\r\n\t * @example new Mesh().addIndexBuffer('TRIANGLES')\r\n\t * @example new Mesh().addIndexBuffer('LINES')\r\n\t */\r\n\taddIndexBuffer<K extends string>(\r\n\t\tname: K,\r\n\t\ttype: GL['UNSIGNED_SHORT'] | GL['UNSIGNED_INT'] = WGL.UNSIGNED_SHORT,\r\n\t): this & { [k in K]: int[] } {\r\n\t\tthis.hasBeenCompiled = false\r\n\t\tconst arrayType = WGL.UNSIGNED_SHORT == type ? Uint16Array : Uint32Array\r\n\t\tconst buffer = (this.indexBuffers[name] = new Buffer(WGL.ELEMENT_ARRAY_BUFFER, arrayType))\r\n\t\tbuffer.name = name\r\n\t\t;(this as any)[name] = []\r\n\t\treturn this as any\r\n\t}\r\n\r\n\tconcat(...others: this[]): this {\r\n\t\tconst result = new Mesh() as any\r\n\t\tconst allMeshes = [this as Mesh].concat(others)\r\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\r\n\t\t\tassert(others.every(other => !!other.vertexBuffers[attribute]))\r\n\t\t\tconst bufferName = this.vertexBuffers[attribute].name!\r\n\t\t\tif ('ts_Vertex' !== attribute) {\r\n\t\t\t\tresult.addVertexBuffer(bufferName, attribute)\r\n\t\t\t}\r\n\t\t\tresult[bufferName] = allMeshes.map(mesh => (mesh as any)[bufferName]).concatenated()\r\n\t\t})\r\n\t\tObject.getOwnPropertyNames(this.indexBuffers).forEach(name => {\r\n\t\t\tassert(others.every(other => !!other.indexBuffers[name]))\r\n\t\t\tresult.addIndexBuffer(name, this.indexBuffers[name].bindSize)\r\n\t\t\tconst newIndexBufferData = new Array(allMeshes.reduce((sum, mesh) => sum + (mesh as any)[name].length, 0))\r\n\t\t\tlet ptr = 0\r\n\t\t\tlet startIndex = 0\r\n\t\t\tfor (const mesh of allMeshes) {\r\n\t\t\t\tfor (const index of (mesh as any)[name] as int[]) {\r\n\t\t\t\t\tnewIndexBufferData[ptr++] = startIndex + index\r\n\t\t\t\t}\r\n\t\t\t\tstartIndex += mesh.vertices.length\r\n\t\t\t}\r\n\t\t\tresult[name] = newIndexBufferData\r\n\t\t})\r\n\t\tresult.compile()\r\n\t\treturn result\r\n\t}\r\n\r\n\t/**\r\n\t * Upload all attached buffers to the GPU in preparation for rendering. This doesn't need to be called every\r\n\t * frame, only needs to be done when the data changes.\r\n\t *\r\n\t * Sets `this.hasBeenCompiled` to true.\r\n\t */\r\n\tcompile(gl: TSGLContext = currentGL()) {\r\n\t\t// figure out shortest vertex buffer to make sure indexBuffers are in bounds\r\n\t\tlet minVertexBufferLength = Infinity // TODO, _minBufferName\r\n\t\tObject.getOwnPropertyNames(this.vertexBuffers).forEach(attribute => {\r\n\t\t\tconst buffer = this.vertexBuffers[attribute]\r\n\t\t\tbuffer.data = (this as any)[buffer.name!]\r\n\t\t\tbuffer.compile(undefined, gl)\r\n\t\t\tif ((this as any)[buffer.name!].length < minVertexBufferLength) {\r\n\t\t\t\t// _minBufferName = attribute\r\n\t\t\t\tminVertexBufferLength = (this as any)[buffer.name!].length\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tfor (const name in this.indexBuffers) {\r\n\t\t\tconst buffer = this.indexBuffers[name]\r\n\t\t\tbuffer.data = (this as any)[buffer.name!]\r\n\t\t\tbuffer.compile(undefined, gl)\r\n\t\t\t// if (NLA_DEBUG && buffer.maxValue >= minVertexBufferLength) {\r\n\t\t\t// \tthrow new Error(`max index value for buffer ${name}\r\n\t\t\t// \tis too large ${buffer.maxValue} min Vbuffer size: ${minVertexBufferLength} ${minBufferName}`)\r\n\t\t\t// }\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = true\r\n\t\treturn this\r\n\t}\r\n\r\n\tstatic async fromBinarySTL(stl: Blob) {\r\n\t\treturn new Promise<Mesh & { normals: V3[] }>((resolve, reject) => {\r\n\t\t\tconst mesh = new Mesh().addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\tconst fileReader = new FileReader()\r\n\t\t\tfileReader.onerror = reject\r\n\t\t\tfileReader.onload = function(_progressEvent) {\r\n\t\t\t\tconst dataView = new DataView(this.result as ArrayBuffer)\r\n\t\t\t\tconst HEADER_BYTE_SIZE = 80\r\n\t\t\t\tconst triangleCount = dataView.getUint32(HEADER_BYTE_SIZE, true)\r\n\t\t\t\tmesh.normals.length = triangleCount * 3\r\n\t\t\t\tmesh.vertices.length = triangleCount * 3\r\n\t\t\t\tlet i = triangleCount * 3,\r\n\t\t\t\t\tbufferPtr = HEADER_BYTE_SIZE + 4\r\n\r\n\t\t\t\tfunction readV3() {\r\n\t\t\t\t\tconst x = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\tconst y = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\tconst z = dataView.getFloat32(bufferPtr, true)\r\n\t\t\t\t\tbufferPtr += 4\r\n\t\t\t\t\treturn new V3(x, y, z)\r\n\t\t\t\t}\r\n\r\n\t\t\t\twhile (i) {\r\n\t\t\t\t\ti -= 3\r\n\t\t\t\t\tconst normal = readV3()\r\n\t\t\t\t\tmesh.normals[i + 0] = normal\r\n\t\t\t\t\tmesh.normals[i + 1] = normal\r\n\t\t\t\t\tmesh.normals[i + 2] = normal\r\n\t\t\t\t\tmesh.vertices[i + 0] = readV3()\r\n\t\t\t\t\tmesh.vertices[i + 1] = readV3()\r\n\t\t\t\t\tmesh.vertices[i + 2] = readV3()\r\n\r\n\t\t\t\t\tbufferPtr += 2\r\n\t\t\t\t}\r\n\t\t\t\tresolve(mesh)\r\n\t\t\t}\r\n\t\t\tfileReader.readAsArrayBuffer(stl)\r\n\t\t})\r\n\t}\r\n\r\n\ttoBinarySTL(this: Mesh & { TRIANGLES: number[] }): Blob {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tconst HEADER_BYTE_SIZE = 80,\r\n\t\t\tFLOAT_BYTE_SIZE = 4\r\n\t\tconst triangles = this.TRIANGLES\r\n\t\tconst triangleCount = triangles.length / 3\r\n\t\tconst buffer = new ArrayBuffer(HEADER_BYTE_SIZE + 4 + triangleCount * (4 * 3 * FLOAT_BYTE_SIZE + 2))\r\n\t\tconst dataView = new DataView(buffer)\r\n\t\tdataView.setUint32(HEADER_BYTE_SIZE, triangleCount, true)\r\n\t\tlet bufferPtr = HEADER_BYTE_SIZE + 4\r\n\t\tlet i = triangles.length\r\n\t\twhile (i) {\r\n\t\t\ti -= 3\r\n\t\t\tconst a = this.vertices[triangles[i]],\r\n\t\t\t\tb = this.vertices[triangles[i + 1]],\r\n\t\t\t\tc = this.vertices[triangles[i + 2]]\r\n\t\t\tconst normal = V3.normalOnPoints(a, b, c)\r\n\t\t\t;[normal, a, b, c].forEach(v => {\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.x, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.y, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t\tdataView.setFloat32(bufferPtr, v.z, true)\r\n\t\t\t\tbufferPtr += 4\r\n\t\t\t})\r\n\t\t\t// skip 2 bytes, already initalized to zero\r\n\t\t\tbufferPtr += 2\r\n\t\t}\r\n\t\tassert(bufferPtr == buffer.byteLength, bufferPtr + ' ' + buffer.byteLength)\r\n\t\treturn new Blob([buffer], { type: 'application/octet-stream' })\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a new Mesh with transformed vertices.\r\n\t *\r\n\t * Transform all vertices by `matrix` and all normals by the inverse transpose of `matrix`.\r\n\t *\r\n\t * Index buffer data is referenced.\r\n\t */\r\n\ttransform(m4: M4): this {\r\n\t\tconst mesh = new Mesh()\r\n\t\tmesh.vertices = m4.transformedPoints(this.vertices)\r\n\t\tif (this.normals) {\r\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\tconst invTrans = m4\r\n\t\t\t\t.as3x3(tempM4_1)\r\n\t\t\t\t.inversed(tempM4_2)\r\n\t\t\t\t.transposed(tempM4_1)\r\n\t\t\tmesh.normals = this.normals.map(n => invTrans.transformVector(n).unit())\r\n\t\t\t// mesh.normals.forEach(n => assert(n.hasLength(1)))\r\n\t\t}\r\n\t\tfor (const name in this.indexBuffers) {\r\n\t\t\tmesh.addIndexBuffer(name)\r\n\t\t\t;(mesh as any)[name] = (this as any)[name]\r\n\t\t}\r\n\t\tfor (const attribute in this.vertexBuffers) {\r\n\t\t\tif ('ts_Vertex' !== attribute && 'ts_Normal' !== attribute) {\r\n\t\t\t\tconst name = this.vertexBuffers[attribute].name!\r\n\t\t\t\tmesh.addVertexBuffer(name, attribute)\r\n\t\t\t\t;(mesh as any)[name] = (this as any)[name]\r\n\t\t\t}\r\n\t\t}\r\n\t\t// this.hasBeenCompiled && mesh.compile()\r\n\t\treturn mesh as this\r\n\t}\r\n\r\n\t/**\r\n\t * Computes a new normal for each vertex from the average normal of the neighboring triangles. This means\r\n\t * adjacent triangles must share vertices for the resulting normals to be smooth.\r\n\t */\r\n\tcomputeNormalsFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { normals: V3[] } {\r\n\t\tif (!this.normals) this.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t// tslint:disable:no-string-literal\r\n\t\t//this.vertexBuffers['ts_Normal'].data = arrayFromFunction(this.vertices.length, i => V3.O)\r\n\r\n\t\tconst TRIANGLES = this.TRIANGLES,\r\n\t\t\tvertices = this.vertices,\r\n\t\t\tnormals = this.normals!\r\n\t\tnormals.length = vertices.length\r\n\t\tfor (let i = 0; i < TRIANGLES.length; i += 3) {\r\n\t\t\tconst ai = TRIANGLES[i],\r\n\t\t\t\tbi = TRIANGLES[i + 1],\r\n\t\t\t\tci = TRIANGLES[i + 2]\r\n\t\t\tconst a = vertices[ai]\r\n\t\t\tconst b = vertices[bi]\r\n\t\t\tconst c = vertices[ci]\r\n\t\t\tconst normal = b\r\n\t\t\t\t.minus(a)\r\n\t\t\t\t.cross(c.minus(a))\r\n\t\t\t\t.unit()\r\n\t\t\tnormals[ai] = normals[ai].plus(normal)\r\n\t\t\tnormals[bi] = normals[bi].plus(normal)\r\n\t\t\tnormals[ci] = normals[ci].plus(normal)\r\n\t\t}\r\n\t\tfor (let i = 0; i < vertices.length; i++) {\r\n\t\t\tnormals[i] = normals[i].unit()\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this as any\r\n\t}\r\n\r\n\t/**\r\n\t * Populate the specified index buffer (default 'LINES') from the `triangles` index buffer.\r\n\t */\r\n\tcomputeWireframeFromFlatTriangles(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\r\n\tcomputeWireframeFromFlatTriangles<T extends string>(\r\n\t\tthis: Mesh & { TRIANGLES: int[] },\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeWireframeFromFlatTriangles(this: any, indexBufferName: string = 'LINES'): this {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tconst canonEdges = new Set()\r\n\r\n\t\tfunction canonEdge(i0: int, i1: int) {\r\n\t\t\tconst iMin = min(i0, i1),\r\n\t\t\t\tiMax = max(i0, i1)\r\n\t\t\treturn (iMin << 16) | iMax\r\n\t\t}\r\n\r\n\t\t// function uncanonEdge(key) {\r\n\t\t// \treturn [key >> 16, key & 0xffff]\r\n\t\t// }\r\n\t\tconst t = this.TRIANGLES\r\n\t\tfor (let i = 0; i < t.length; i += 3) {\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 0], t[i + 1]))\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 1], t[i + 2]))\r\n\t\t\tcanonEdges.add(canonEdge(t[i + 2], t[i + 0]))\r\n\t\t}\r\n\t\tconst data = indexBufferName\r\n\t\tif (!this[data]) this.addIndexBuffer(indexBufferName)\r\n\t\t//this.LINES = new Array(canonEdges.size)\r\n\t\tcanonEdges.forEach(val => this[data].push(val >> 16, val & 0xffff))\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: Mesh & { TRIANGLES: int[] }): this & { LINES: int[] }\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh<T extends string>(\r\n\t\tthis: Mesh & { TRIANGLES: int[] },\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeWireframeFromFlatTrianglesClosedMesh(this: any, indexBufferName: string = 'LINES'): this {\r\n\t\tif (!this.TRIANGLES) throw new Error('TRIANGLES must be defined.')\r\n\t\tif (!this.LINES) this.addIndexBuffer('LINES')\r\n\t\tconst tris = this.TRIANGLES\r\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\r\n\t\tconst lines = this[indexBufferName]\r\n\t\tfor (let i = 0; i < tris.length; i += 3) {\r\n\t\t\tif (tris[i + 0] < tris[i + 1]) lines.push(tris[i + 0], tris[i + 1])\r\n\t\t\tif (tris[i + 1] < tris[i + 2]) lines.push(tris[i + 1], tris[i + 2])\r\n\t\t\tif (tris[i + 2] < tris[i + 0]) lines.push(tris[i + 2], tris[i + 0])\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tcomputeNormalLines(this: Mesh & { normals: V3[] }, length: number): this & { LINES: int[] }\r\n\tcomputeNormalLines<T extends string>(\r\n\t\tthis: Mesh & { normals: V3[] },\r\n\t\tlength: number,\r\n\t\tindexBufferName: T,\r\n\t): this & { [k in T]: int[] }\r\n\tcomputeNormalLines(this: any, length: number = 1, indexBufferName: string = 'LINES') {\r\n\t\tif (!this.normals) {\r\n\t\t\tthrow new Error('normals must be defined.')\r\n\t\t}\r\n\t\tconst vs = this.vertices,\r\n\t\t\tsi = this.vertices.length\r\n\t\tif (!this[indexBufferName]) this.addIndexBuffer(indexBufferName)\r\n\r\n\t\tfor (let i = 0; i < this.normals.length; i++) {\r\n\t\t\tvs[si + i] = vs[i].plus(this.normals[i].toLength(length))\r\n\t\t\tthis[indexBufferName].push(si + i, i)\r\n\t\t}\r\n\t\tthis.hasBeenCompiled = false\r\n\t\treturn this\r\n\t}\r\n\r\n\tgetAABB(): AABB {\r\n\t\treturn new AABB().addPoints(this.vertices)\r\n\t}\r\n\r\n\tgetBoundingSphere(): { center: V3; radius: number } {\r\n\t\tconst sphere = { center: this.getAABB().getCenter(), radius: 0 }\r\n\t\tfor (let i = 0; i < this.vertices.length; i++) {\r\n\t\t\tsphere.radius = Math.max(sphere.radius, this.vertices[i].minus(sphere.center).length())\r\n\t\t}\r\n\t\treturn sphere\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a square mesh in the XY plane.\r\n\t * Texture coordinates (buffer \"coords\") are set to go from 0 to 1 in either direction.\r\n\t *\r\n\t * @param options foo\r\n\t * @param options.detail Defaults to 1\r\n\t * @param options.detailX Defaults to options.detail. Number of subdivisions in X direction.\r\n\t * @param options.detailY Defaults to options.detail. Number of subdivisions in Y direction.j\r\n\t * @param options.width defaults to 1\r\n\t * @param options.height defaults to 1\r\n\t * @param options.startX defaults to 0\r\n\t * @param options.startY defaults to 0\r\n\t */\r\n\tstatic plane(\r\n\t\toptions: {\r\n\t\t\tdetail?: int\r\n\t\t\tdetailX?: int\r\n\t\t\tdetailY?: int\r\n\t\t\twidth?: number\r\n\t\t\theight?: number\r\n\t\t\tstartX?: number\r\n\t\t\tstartY?: number\r\n\t\t} = {},\r\n\t) {\r\n\t\tconst detailX = options.detailX || options.detail || 1\r\n\t\tconst detailY = options.detailY || options.detail || 1\r\n\t\tconst startX = options.startX || 0\r\n\t\tconst startY = options.startY || 0\r\n\t\tconst width = options.width || 1\r\n\t\tconst height = options.height || 1\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addVertexBuffer('coords', 'ts_TexCoord')\r\n\r\n\t\tfor (let j = 0; j <= detailY; j++) {\r\n\t\t\tconst t = j / detailY\r\n\t\t\tfor (let i = 0; i <= detailX; i++) {\r\n\t\t\t\tconst s = i / detailX\r\n\t\t\t\tmesh.vertices.push(new V3(startX + s * width, startY + t * height, 0))\r\n\t\t\t\tmesh.coords.push([s, t])\r\n\t\t\t\tmesh.normals.push(V3.Z)\r\n\t\t\t\tif (i < detailX && j < detailY) {\r\n\t\t\t\t\tconst offset = i + j * (detailX + 1)\r\n\t\t\t\t\tmesh.TRIANGLES.push(\r\n\t\t\t\t\t\toffset,\r\n\t\t\t\t\t\toffset + detailX + 1,\r\n\t\t\t\t\t\toffset + 1,\r\n\t\t\t\t\t\toffset + detailX + 1,\r\n\t\t\t\t\t\toffset + detailX + 2,\r\n\t\t\t\t\t\toffset + 1,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfor (let i = 0; i < detailX; i++) {\r\n\t\t\tmesh.LINES.push(i, i + 1)\r\n\t\t\tmesh.LINES.push((detailX + 1) * detailY + i, (detailX + 1) * detailY + i + 1)\r\n\t\t}\r\n\t\tfor (let j = 0; j < detailY; j++) {\r\n\t\t\tmesh.LINES.push(detailX * j, detailX * (j + 1) + 1)\r\n\t\t\tmesh.LINES.push(detailX * (j + 1), detailX * (j + 2) + 1)\r\n\t\t}\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t// unique corners of a unit cube. Used by Mesh.cube to generate a cube mesh.\r\n\tstatic UNIT_CUBE_CORNERS = [\r\n\t\tV3.O,\r\n\t\tnew V3(0, 0, 1),\r\n\t\tnew V3(0, 1, 0),\r\n\t\tnew V3(0, 1, 1),\r\n\r\n\t\tnew V3(1, 0, 0),\r\n\t\tnew V3(1, 0, 1),\r\n\t\tnew V3(1, 1, 0),\r\n\t\tV3.XYZ,\r\n\t]\r\n\r\n\tstatic box(xDetail: int = 1, yDetail: int = 1, zDetail: int = 1) {\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tmesh.vertices.length = mesh.normals.length =\r\n\t\t\t2 * ((xDetail + 1) * (yDetail + 1) + (yDetail + 1) * (zDetail + 1) + (zDetail + 1) * (xDetail + 1))\r\n\t\tmesh.TRIANGLES.length = 4 * (xDetail * yDetail + yDetail * zDetail + zDetail * xDetail)\r\n\t\tlet vi = 0,\r\n\t\t\tti = 0\r\n\t\tfunction x(detailX: int, detailY: int, m: M4, startX = 0, width = 1, startY = 0, height = 1) {\r\n\t\t\tconst normal = m.transformVector(V3.Z)\r\n\t\t\tfor (let j = 0; j <= detailY; j++) {\r\n\t\t\t\tconst t = j / detailY\r\n\t\t\t\tfor (let i = 0; i <= detailX; i++) {\r\n\t\t\t\t\tconst s = i / detailX\r\n\t\t\t\t\tmesh.vertices[vi] = m.transformPoint(new V3(startX + s * width, startY + t * height, 0))\r\n\t\t\t\t\tmesh.normals[vi] = normal\r\n\t\t\t\t\tvi++\r\n\t\t\t\t\tif (i < detailX && j < detailY) {\r\n\t\t\t\t\t\tconst offset = i + j * (detailX + 1)\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 1\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + detailX + 2\r\n\t\t\t\t\t\tmesh.TRIANGLES[ti++] = offset + 1\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tx(yDetail, xDetail, M4.forSys(V3.Y, V3.X, V3.Z.negated()))\r\n\t\tx(xDetail, yDetail, M4.translate(V3.Z))\r\n\t\tx(zDetail, yDetail, M4.forSys(V3.Z, V3.Y, V3.X.negated()))\r\n\t\tx(yDetail, zDetail, M4.forSys(V3.Y, V3.Z, V3.X, V3.X))\r\n\t\tx(xDetail, zDetail, M4.forSys(V3.X, V3.Z, V3.Y.negated()))\r\n\t\tx(zDetail, xDetail, M4.forSys(V3.Z, V3.X, V3.Y, V3.Y))\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t/**\r\n\t * Generates a unit cube (1x1x1) starting at the origin and extending into the (+ + +) octant.\r\n\t * I.e. box from V3.O to V3(1,1,1)\r\n\t * Creates line (only cube edges), triangle, vertex and normal1 buffers.\r\n\t */\r\n\tstatic cube() {\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addIndexBuffer('LINES')\r\n\r\n\t\t// basically indexes for faces of the cube. vertices each need to be added 3 times,\r\n\t\t// as they have different normals depending on the face being rendered\r\n\t\t// prettier-ignore\r\n\t\tconst VERTEX_CORNERS = [\r\n\t\t\t0, 1, 2, 3, // X = 0\r\n\t\t\t4, 5, 6, 7, // X = 1\r\n\r\n\t\t\t0, 4, 1, 5, // Y = 0\r\n\t\t\t2, 6, 3, 7, // Y = 1\r\n\r\n\t\t\t2, 6, 0, 4, // Z = 0\r\n\t\t\t3, 7, 1, 5, // Z = 1\r\n\t\t]\r\n\t\tmesh.vertices = VERTEX_CORNERS.map(i => Mesh.UNIT_CUBE_CORNERS[i])\r\n\t\tmesh.normals = [V3.X.negated(), V3.X, V3.Y.negated(), V3.Y, V3.Z.negated(), V3.Z].flatMap(v => [v, v, v, v])\r\n\t\tfor (let i = 0; i < 6 * 4; i += 4) {\r\n\t\t\tpushQuad(\r\n\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\t0 != i % 8,\r\n\t\t\t\tVERTEX_CORNERS[i],\r\n\t\t\t\tVERTEX_CORNERS[i + 1],\r\n\t\t\t\tVERTEX_CORNERS[i + 2],\r\n\t\t\t\tVERTEX_CORNERS[i + 3],\r\n\t\t\t)\r\n\t\t}\r\n\t\t// indexes of LINES relative to UNIT_CUBE_CORNERS. Mapped to VERTEX_CORNERS.indexOf\r\n\t\t// so they make sense in the context of the mesh\r\n\t\t// prettier-ignore\r\n\t\tmesh.LINES = [\r\n\t\t\t0, 1,\r\n\t\t\t0, 2,\r\n\t\t\t1, 3,\r\n\t\t\t2, 3,\r\n\r\n\t\t\t0, 4,\r\n\t\t\t1, 5,\r\n\t\t\t2, 6,\r\n\t\t\t3, 7,\r\n\r\n\t\t\t4, 5,\r\n\t\t\t4, 6,\r\n\t\t\t5, 7,\r\n\t\t\t6, 7,\r\n\t\t].map(i => VERTEX_CORNERS.indexOf(i))\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic isocahedron() {\r\n\t\treturn Mesh.sphere(0)\r\n\t}\r\n\r\n\tstatic sphere2(latitudes: int, longitudes: int) {\r\n\t\tconst baseVertices = arrayFromFunction(latitudes, i => {\r\n\t\t\tconst angle = (i / (latitudes - 1)) * PI - PI / 2\r\n\t\t\treturn new V3(0, cos(angle), sin(angle))\r\n\t\t})\r\n\t\treturn Mesh.rotation(baseVertices, { anchor: V3.O, dir1: V3.Z }, 2 * PI, longitudes, true, baseVertices)\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a sphere mesh with radius 1 created by subdividing the faces of a isocahedron (20-sided) recursively\r\n\t * The sphere is positioned at the origin\r\n\t * @param subdivisions\r\n\t *      How many recursive divisions to do. A subdivision divides a triangle into 4,\r\n\t *      so the total number of triangles is 20 * 4^subdivisions\r\n\t * @returns\r\n\t *      Contains vertex and normal1 buffers and index buffers for triangles and LINES\r\n\t */\r\n\tstatic sphere(subdivisions: int = 3) {\r\n\t\tconst golden = (1 + Math.sqrt(5)) / 2,\r\n\t\t\tu = new V3(1, golden, 0).unit(),\r\n\t\t\ts = u.x,\r\n\t\t\tt = u.y\r\n\t\t// base vertices of isocahedron\r\n\t\tconst vertices = [\r\n\t\t\tnew V3(-s, t, 0),\r\n\t\t\tnew V3(s, t, 0),\r\n\t\t\tnew V3(-s, -t, 0),\r\n\t\t\tnew V3(s, -t, 0),\r\n\r\n\t\t\tnew V3(0, -s, t),\r\n\t\t\tnew V3(0, s, t),\r\n\t\t\tnew V3(0, -s, -t),\r\n\t\t\tnew V3(0, s, -t),\r\n\r\n\t\t\tnew V3(t, 0, -s),\r\n\t\t\tnew V3(t, 0, s),\r\n\t\t\tnew V3(-t, 0, -s),\r\n\t\t\tnew V3(-t, 0, s),\r\n\t\t]\r\n\t\t// base triangles of isocahedron\r\n\t\t// prettier-ignore\r\n\t\tconst triangles = [\r\n\t\t\t// 5 faces around point 0\r\n\t\t\t0, 11, 5,\r\n\t\t\t0, 5, 1,\r\n\t\t\t0, 1, 7,\r\n\t\t\t0, 7, 10,\r\n\t\t\t0, 10, 11,\r\n\r\n\t\t\t// 5 adjacent faces\r\n\t\t\t1, 5, 9,\r\n\t\t\t5, 11, 4,\r\n\t\t\t11, 10, 2,\r\n\t\t\t10, 7, 6,\r\n\t\t\t7, 1, 8,\r\n\r\n\t\t\t// 5 faces around point 3\r\n\t\t\t3, 9, 4,\r\n\t\t\t3, 4, 2,\r\n\t\t\t3, 2, 6,\r\n\t\t\t3, 6, 8,\r\n\t\t\t3, 8, 9,\r\n\r\n\t\t\t// 5 adjacent faces\r\n\t\t\t4, 9, 5,\r\n\t\t\t2, 4, 11,\r\n\t\t\t6, 2, 10,\r\n\t\t\t8, 6, 7,\r\n\t\t\t9, 8, 1,\r\n\t\t]\r\n\r\n\t\t/**\r\n\t\t * Tesselates triangle a b c\r\n\t\t * a b c must already be in vertices with the indexes ia ib ic\r\n\t\t * res is the number of subdivisions to do. 0 just results in triangle and line indexes being added to the\r\n\t\t * respective buffers.\r\n\t\t */\r\n\t\tfunction tesselateRecursively(\r\n\t\t\ta: V3,\r\n\t\t\tb: V3,\r\n\t\t\tc: V3,\r\n\t\t\tres: int,\r\n\t\t\tvertices: V3[],\r\n\t\t\ttriangles: int[],\r\n\t\t\tia: int,\r\n\t\t\tib: int,\r\n\t\t\tic: int,\r\n\t\t\tlines: int[],\r\n\t\t) {\r\n\t\t\tif (0 == res) {\r\n\t\t\t\ttriangles.push(ia, ib, ic)\r\n\t\t\t\tif (ia < ib) lines.push(ia, ib)\r\n\t\t\t\tif (ib < ic) lines.push(ib, ic)\r\n\t\t\t\tif (ic < ia) lines.push(ic, ia)\r\n\t\t\t} else {\r\n\t\t\t\t// subdivide the triangle abc into 4 by adding a vertex (with the correct distance from the origin)\r\n\t\t\t\t// between each segment ab, bc and cd, then calling the function recursively\r\n\t\t\t\tconst abMid1 = a.plus(b).toLength(1),\r\n\t\t\t\t\tbcMid1 = b.plus(c).toLength(1),\r\n\t\t\t\t\tcaMid1 = c.plus(a).toLength(1)\r\n\t\t\t\t// indexes of new vertices:\r\n\t\t\t\tconst iabm = vertices.length,\r\n\t\t\t\t\tibcm = iabm + 1,\r\n\t\t\t\t\ticam = iabm + 2\r\n\t\t\t\tvertices.push(abMid1, bcMid1, caMid1)\r\n\t\t\t\ttesselateRecursively(abMid1, bcMid1, caMid1, res - 1, vertices, triangles, iabm, ibcm, icam, lines)\r\n\t\t\t\ttesselateRecursively(a, abMid1, caMid1, res - 1, vertices, triangles, ia, iabm, icam, lines)\r\n\t\t\t\ttesselateRecursively(b, bcMid1, abMid1, res - 1, vertices, triangles, ib, ibcm, iabm, lines)\r\n\t\t\t\ttesselateRecursively(c, caMid1, bcMid1, res - 1, vertices, triangles, ic, icam, ibcm, lines)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tconst mesh = new Mesh()\r\n\t\t\t.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t.addIndexBuffer('TRIANGLES')\r\n\t\t\t.addIndexBuffer('LINES')\r\n\t\tmesh.vertices.push(...vertices)\r\n\t\tsubdivisions = undefined == subdivisions ? 4 : subdivisions\r\n\t\tfor (let i = 0; i < 20; i++) {\r\n\t\t\tconst [ia, ic, ib] = triangles.slice(i * 3, i * 3 + 3)\r\n\t\t\ttesselateRecursively(\r\n\t\t\t\tvertices[ia],\r\n\t\t\t\tvertices[ic],\r\n\t\t\t\tvertices[ib],\r\n\t\t\t\tsubdivisions,\r\n\t\t\t\tmesh.vertices,\r\n\t\t\t\tmesh.TRIANGLES,\r\n\t\t\t\tia,\r\n\t\t\t\tic,\r\n\t\t\t\tib,\r\n\t\t\t\tmesh.LINES,\r\n\t\t\t)\r\n\t\t}\r\n\r\n\t\tmesh.normals = mesh.vertices\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic aabb(aabb: AABB) {\r\n\t\tconst matrix = M4.product(\r\n\t\t\tM4.translate(aabb.min),\r\n\t\t\tM4.scale(aabb.size().max(new V3(NLA_PRECISION, NLA_PRECISION, NLA_PRECISION))),\r\n\t\t)\r\n\t\tconst mesh = Mesh.cube().transform(matrix)\r\n\t\t// mesh.vertices = aabb.corners()\r\n\t\tmesh.computeNormalLines(20)\r\n\t\tmesh.compile()\r\n\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic offsetVertices(\r\n\t\tvertices: V3[],\r\n\t\toffset: V3,\r\n\t\tclose: boolean,\r\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][] }\r\n\tstatic offsetVertices(\r\n\t\tvertices: V3[],\r\n\t\toffset: V3,\r\n\t\tclose: boolean,\r\n\t\tnormals: V3[],\r\n\t): Mesh & { TRIANGLES: int[]; coords: [number, number][]; normals: V3[] }\r\n\tstatic offsetVertices(vertices: V3[], offset: V3, close: boolean, normals?: V3[]) {\r\n\t\tassertVectors.apply(undefined, vertices)\r\n\t\tassertVectors(offset)\r\n\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\r\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tmesh.vertices = vertices.concat(vertices.map(v => v.plus(offset)))\r\n\t\tconst vl = vertices.length\r\n\t\tmesh.coords = arrayFromFunction(vl * 2, (i): [number, number] => [(i % vl) / vl, (i / vl) | 0])\r\n\r\n\t\tconst triangles = mesh.TRIANGLES\r\n\t\tfor (let i = 0; i < vertices.length - 1; i++) {\r\n\t\t\tpushQuad(triangles, false, i, i + 1, vertices.length + i, vertices.length + i + 1)\r\n\t\t}\r\n\t\tif (close) {\r\n\t\t\tpushQuad(triangles, false, vertices.length - 1, 0, vertices.length * 2 - 1, vertices.length)\r\n\t\t}\r\n\t\tif (normals) {\r\n\t\t\tmesh.normals = normals.concat(normals)\r\n\t\t}\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\t// Creates a new $Mesh by rotating $vertices by $totalRads around $lineAxis (according to the right-hand\r\n\t// rule). $steps is the number of steps to take. $close is whether the vertices of the first and last step\r\n\t// should be connected by triangles. If $normals is set (pass an array of V3s of the same length as $vertices),\r\n\t// these will also be rotated and correctly added to the mesh.\r\n\t// @example const precious = Mesh.rotation([V(10, 0, -2), V(10, 0, 2), V(11, 0, 2), V(11, 0, -2)], , L3.Z, 512)\r\n\tstatic rotation(\r\n\t\tvertices: V3[],\r\n\t\tlineAxis: { anchor: V3; dir1: V3 },\r\n\t\ttotalRads: raddd,\r\n\t\tsteps: int,\r\n\t\tclose = true,\r\n\t\tnormals?: V3[],\r\n\t) {\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES')\r\n\t\tnormals && mesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\tconst vc = vertices.length,\r\n\t\t\tvTotal = vc * steps\r\n\r\n\t\tconst rotMat = new M4()\r\n\t\tconst triangles = mesh.TRIANGLES\r\n\t\tfor (let i = 0; i < steps; i++) {\r\n\t\t\t// add triangles\r\n\t\t\tconst rads = (totalRads / steps) * i\r\n\t\t\tM4.rotateLine(lineAxis.anchor, lineAxis.dir1, rads, rotMat)\r\n\t\t\tmesh.vertices.push(...rotMat.transformedPoints(vertices))\r\n\r\n\t\t\tnormals && mesh.normals!.push(...rotMat.transformedVectors(normals))\r\n\t\t\tif (close || i !== steps - 1) {\r\n\t\t\t\tfor (let j = 0; j < vc - 1; j++) {\r\n\t\t\t\t\tpushQuad(\r\n\t\t\t\t\t\ttriangles,\r\n\t\t\t\t\t\tfalse,\r\n\t\t\t\t\t\ti * vc + j + 1,\r\n\t\t\t\t\t\ti * vc + j,\r\n\t\t\t\t\t\t((i + 1) * vc + j + 1) % vTotal,\r\n\t\t\t\t\t\t((i + 1) * vc + j) % vTotal,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: undefined,\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t): Mesh & { TRIANGLES: int[] }\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: ((d: number, z: number) => V3),\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t): Mesh & { normals: V3[]; TRIANGLES: int[] }\r\n\tstatic parametric(\r\n\t\tpF: (d: number, z: number) => V3,\r\n\t\tpN: ((d: number, z: number) => V3) | undefined,\r\n\t\tsMin: number,\r\n\t\tsMax: number,\r\n\t\ttMin: number,\r\n\t\ttMax: number,\r\n\t\tsRes: number,\r\n\t\ttRes: number,\r\n\t) {\r\n\t\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('normals', 'ts_Normal')\r\n\t\tfor (let si = 0; si <= sRes; si++) {\r\n\t\t\tconst s = lerp(sMin, sMax, si / sRes)\r\n\t\t\tfor (let ti = 0; ti <= tRes; ti++) {\r\n\t\t\t\tconst t = lerp(tMin, tMax, ti / tRes)\r\n\t\t\t\tmesh.vertices.push(pF(s, t))\r\n\t\t\t\tpN && mesh.normals.push(pN(s, t))\r\n\t\t\t\tif (ti < tRes && si < sRes) {\r\n\t\t\t\t\tconst offset = ti + si * (tRes + 1)\r\n\t\t\t\t\tpushQuad(mesh.TRIANGLES, false, offset, offset + tRes + 1, offset + 1, offset + tRes + 2)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn mesh\r\n\t}\r\n\r\n\tstatic load(json: { vertices: Tuple3<number>[]; triangles?: Tuple3<number>[]; normals?: Tuple3<number>[] }) {\r\n\t\tconst mesh = new Mesh()\r\n\t\tif (Array.isArray(json.vertices[0])) {\r\n\t\t\tmesh.vertices = json.vertices.map(x => V(x))\r\n\t\t} else {\r\n\t\t\tthrow new Error()\r\n\t\t}\r\n\t\tif (json.triangles) {\r\n\t\t\tmesh.addIndexBuffer('TRIANGLES')\r\n\t\t\t;(mesh as any).TRIANGLES = json.triangles\r\n\t\t}\r\n\t\tif (json.normals) {\r\n\t\t\tmesh.addVertexBuffer('normals', 'ts_Normal')\r\n\t\t\t;(mesh as any).normals = json.normals\r\n\t\t}\r\n\t\tmesh.compile()\r\n\t\treturn mesh\r\n\t}\r\n\r\n\ttoJSON() {\r\n\t\treturn {\r\n\t\t\tvertices: this.vertices.map(x => x.toArray()),\r\n\t\t\tTRIANGLES: (this as any).TRIANGLES,\r\n\t\t}\r\n\t}\r\n}\r\n","/* tslint:disable:no-string-literal */\r\nimport { assert, assertf, assertInst, assertVectors, int, M4, NLA_DEBUG, V3 } from 'ts3dutils'\r\n\r\nimport { Buffer, currentGL, GL_COLOR, Mesh, TSGLContext } from './index'\r\n\r\nimport GL = WebGLRenderingContextStrict\r\nconst WGL = (WebGLRenderingContext as any) as WebGLRenderingContextStrict.Constants\r\n\r\n/**\r\n * These are all the draw modes usable in OpenGL ES\r\n */\r\nconst DRAW_MODE_NAMES = {\r\n\t[WGL.POINTS]: 'POINTS',\r\n\t[WGL.LINES]: 'LINES',\r\n\t[WGL.LINE_STRIP]: 'LINE_STRIP',\r\n\t[WGL.LINE_LOOP]: 'LINE_LOOP',\r\n\t[WGL.TRIANGLES]: 'TRIANGLES',\r\n\t[WGL.TRIANGLE_STRIP]: 'TRIANGLE_STRIP',\r\n\t[WGL.TRIANGLE_FAN]: 'TRIANGLE_FAN',\r\n}\r\nconst DRAW_MODE_CHECKS: { [type: string]: (x: int) => boolean } = {\r\n\t[WGL.POINTS]: _ => true,\r\n\t[WGL.LINES]: x => 0 == x % 2, // divisible by 2\r\n\t[WGL.LINE_STRIP]: x => x > 2, // need at least 2\r\n\t[WGL.LINE_LOOP]: x => x > 2, // more like > 3, but oh well\r\n\t[WGL.TRIANGLES]: x => 0 == x % 3, // divisible by 3\r\n\t[WGL.TRIANGLE_STRIP]: x => x > 3,\r\n\t[WGL.TRIANGLE_FAN]: x => x > 3,\r\n}\r\n\r\nexport const SHADER_VAR_TYPES = [\r\n\t'FLOAT',\r\n\t'FLOAT_MAT2',\r\n\t'FLOAT_MAT3',\r\n\t'FLOAT_MAT4',\r\n\t'FLOAT_VEC2',\r\n\t'FLOAT_VEC3',\r\n\t'FLOAT_VEC4',\r\n\t'INT',\r\n\t'INT_VEC2',\r\n\t'INT_VEC3',\r\n\t'INT_VEC4',\r\n\t'UNSIGNED_INT',\r\n]\r\n\r\nexport function isArray<T>(obj: any): obj is T[] {\r\n\treturn Array == obj.constructor || Float32Array == obj.constructor || Float64Array == obj.constructor\r\n}\r\n\r\nexport interface UniformTypesMap {\r\n\tFLOAT_VEC4: GL_COLOR | V3\r\n\tFLOAT_VEC3: [number, number, number] | V3\r\n\tFLOAT_VEC2: [number, number] | V3\r\n\tFLOAT: number\r\n\tINT: int\r\n\tFLOAT_MAT4: M4 | number[]\r\n\tFLOAT_MAT3: M4 | number[]\r\n\tSAMPLER_2D: int\r\n\tBOOL: boolean\r\n}\r\nexport type UniformTypes = keyof UniformTypesMap\r\n\r\nfunction isFloatArray(obj: any): obj is number[] | Float64Array | Float32Array {\r\n\treturn (\r\n\t\tFloat32Array == obj.constructor ||\r\n\t\tFloat64Array == obj.constructor ||\r\n\t\t(Array.isArray(obj) && obj.every(x => 'number' == typeof x))\r\n\t)\r\n}\r\n\r\nfunction isIntArray(x: any) {\r\n\tif (\r\n\t\t[Int8Array, Uint8Array, Uint8ClampedArray, Int16Array, Uint16Array, Int32Array, Uint32Array].some(\r\n\t\t\ty => x instanceof y,\r\n\t\t)\r\n\t) {\r\n\t\treturn true\r\n\t}\r\n\treturn (\r\n\t\t(x instanceof Float32Array || x instanceof Float64Array || Array.isArray(x)) &&\r\n\t\t(x as number[]).every(x => Number.isInteger(x))\r\n\t)\r\n}\r\n\r\nexport type ShaderType<UniformTypes, AttributeTypes = {}> = string & { T?: UniformTypes; A?: AttributeTypes }\r\nexport type VarTypeMap = { [name: string]: UniformTypes }\r\nexport type ShaderSource<\r\n\tU extends VarTypeMap,\r\n\tIN extends VarTypeMap,\r\n\tOUT extends VarTypeMap,\r\n\tkind extends 'vertex' | 'fragment'\r\n> = string & { U: U; IN: IN; OUT: OUT; kind: kind }\r\n\r\n//const x:UniformTypes = undefined as 'FLOAT_VEC4' | 'FLOAT_VEC3'\r\nexport class Shader<UniformTypes extends VarTypeMap = any, AttributeTypes extends VarTypeMap = any> {\r\n\tprogram: WebGLProgram\r\n\tactiveMatrices: { [matrixName: string]: boolean }\r\n\tattributeLocations: { [attributeName: string]: number }\r\n\tconstantAttributes: { [attributeName: string]: boolean }\r\n\tuniformLocations: { [uniformName: string]: WebGLUniformLocation }\r\n\tuniformInfos: { [uniformName: string]: GL.WebGLActiveInfo<GL.UniformType> }\r\n\tprojectionMatrixVersion = -1\r\n\tmodelViewMatrixVersion = -1\r\n\tgl: TSGLContext\r\n\r\n\t/**\r\n\t * Create shader drom typed vertex and fragment source. Weird generic arguments are because\r\n\t * the vertex shader is required to have the OUT types the fragment shader needs as IN,\r\n\t * but not vice-versa.\r\n\t */\r\n\tstatic create<\r\n\t\tFragSrc extends ShaderSource<{}, {}, {}, 'fragment'>,\r\n\t\tVertSrc extends ShaderSource<{}, {}, FragSrc['IN'], 'vertex'>\r\n\t>(\r\n\t\tvertexSource: VertSrc,\r\n\t\tfragmentSource: FragSrc,\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<VertSrc['U'] & FragSrc['U'], VertSrc['IN']>\r\n\t/**\r\n\t * Create shader from typed vertex and untyped fragment source. Uniform of the fragment shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<FU extends VarTypeMap, VertSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\r\n\t\tvertexSource: VertSrc,\r\n\t\tfragmentSource: string & { IN?: undefined },\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<FU & VertSrc['U'], VertSrc['IN']>\r\n\t/**\r\n\t * Create shader from untyped vertex and typed fragment source. Uniform and attribute types of the shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<VU extends VarTypeMap, VA extends VarTypeMap, FragSrc extends ShaderSource<{}, {}, {}, 'vertex'>>(\r\n\t\tvertexSource: string & { IN?: undefined },\r\n\t\tfragmentSource: FragSrc,\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<VU & FragSrc['U'], VA>\r\n\t/**\r\n\t * Create shader from untyped vertex and fragment source. Uniform and attribute types of the shader\r\n\t * can optionally be manually specified.\r\n\t */\r\n\tstatic create<U extends VarTypeMap = {}, A extends VarTypeMap = {}>(\r\n\t\tvertexSource: string & { IN?: undefined },\r\n\t\tfragmentSource: string & { IN?: undefined },\r\n\t\tgl?: TSGLContext,\r\n\t): Shader<U, A>\r\n\tstatic create(vertexSource: string, fragmentSource: string, gl?: TSGLContext) {\r\n\t\treturn new Shader(vertexSource, fragmentSource, gl) as any\r\n\t}\r\n\r\n\t/**\r\n\t * Provides a convenient wrapper for WebGL shaders. A few uniforms and attributes,\r\n\t * prefixed with `gl_`, are automatically added to all shader sources to make\r\n\t * simple shaders easier to write.\r\n\t * Headers for the following variables are automatically prepended to the passed source. The correct variables\r\n\t * are also automatically passed to the shader when drawing.\r\n\t *\r\n\t * For vertex and fragment shaders:\r\n\t uniform mat3 ts_NormalMatrix;\r\n\t uniform mat4 ts_ModelViewMatrix;\r\n\t uniform mat4 ts_ProjectionMatrix;\r\n\t uniform mat4 ts_ModelViewProjectionMatrix;\r\n\t uniform mat4 ts_ModelViewMatrixInverse;\r\n\t uniform mat4 ts_ProjectionMatrixInverse;\r\n\t uniform mat4 ts_ModelViewProjectionMatrixInverse;\r\n\t *\r\n\t *\r\n\t * Example usage:\r\n\t *\r\n\t *  const shader = new GL.Shader(\r\n\t *      `void main() { gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex; }`,\r\n\t *      `uniform vec4 color; void main() { gl_FragColor = color; }`)\r\n\t *\r\n\t *  shader.uniforms({ color: [1, 0, 0, 1] }).draw(mesh)\r\n\t *\r\n\t * Compiles a shader program using the provided vertex and fragment shaders.\r\n\t */\r\n\tprotected constructor(vertexSource: string, fragmentSource: string, gl = currentGL()) {\r\n\t\t// const versionRegex = /^(?:\\s+|\\/\\/[\\s\\S]*?[\\r\\n]+|\\/\\*[\\s\\S]*?\\*\\/)+(#version\\s+(\\d+)\\s+es)/\r\n\t\t// Headers are prepended to the sources to provide some automatic functionality.\r\n\t\tconst header = `\r\n\t\tuniform mat3 ts_NormalMatrix;\r\n\t\tuniform mat4 ts_ModelViewMatrix;\r\n\t\tuniform mat4 ts_ProjectionMatrix;\r\n\t\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\t\tuniform mat4 ts_ModelViewMatrixInverse;\r\n\t\tuniform mat4 ts_ProjectionMatrixInverse;\r\n\t\tuniform mat4 ts_ModelViewProjectionMatrixInverse;\r\n\t`\r\n\t\tconst matrixNames = header.match(/\\bts_\\w+/g)\r\n\r\n\t\t// Compile and link errors are thrown as strings.\r\n\t\tfunction compileSource(type: GL.ShaderType, source: string) {\r\n\t\t\tconst shader = gl.createShader(type)!\r\n\t\t\tgl.shaderSource(shader, source)\r\n\t\t\tgl.compileShader(shader)\r\n\t\t\tif (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n\t\t\t\tthrow new Error('compile error: ' + gl.getShaderInfoLog(shader))\r\n\t\t\t}\r\n\t\t\treturn shader\r\n\t\t}\r\n\r\n\t\tthis.gl = gl\r\n\t\tthis.program = gl.createProgram()!\r\n\t\tgl.attachShader(this.program, compileSource(gl.VERTEX_SHADER, vertexSource))\r\n\t\tgl.attachShader(this.program, compileSource(gl.FRAGMENT_SHADER, fragmentSource))\r\n\t\tgl.linkProgram(this.program)\r\n\t\tif (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\r\n\t\t\tthrow new Error('link error: ' + gl.getProgramInfoLog(this.program))\r\n\t\t}\r\n\t\tthis.attributeLocations = {}\r\n\t\tthis.uniformLocations = {}\r\n\t\tthis.constantAttributes = {}\r\n\r\n\t\t// Check for the use of built-in matrices that require expensive matrix\r\n\t\t// multiplications to compute, and record these in `activeMatrices`.\r\n\t\tthis.activeMatrices = {}\r\n\t\tmatrixNames &&\r\n\t\t\tmatrixNames.forEach(name => {\r\n\t\t\t\tif (gl.getUniformLocation(this.program, name)) {\r\n\t\t\t\t\tthis.activeMatrices[name] = true\r\n\t\t\t\t}\r\n\t\t\t})\r\n\r\n\t\tthis.uniformInfos = {}\r\n\t\tfor (let i = gl.getProgramParameter(this.program, gl.ACTIVE_UNIFORMS); i-- > 0; ) {\r\n\t\t\t// see https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glGetActiveUniform.xml\r\n\t\t\t// this.program has already been checked\r\n\t\t\t// i is in bounds\r\n\t\t\tconst info = gl.getActiveUniform(this.program, i)!\r\n\t\t\tthis.uniformInfos[info.name] = info\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set a uniform for each property of `uniforms`. The correct `viewerGL.uniform*()` method is inferred from the\r\n\t * value types and from the stored uniform sampler flags.\r\n\t */\r\n\tuniforms(uniforms: Partial<{ [K in keyof UniformTypes]: UniformTypesMap[UniformTypes[K]] }>): this {\r\n\t\tconst gl = this.gl\r\n\t\tgl.useProgram(this.program)\r\n\r\n\t\tfor (const name in uniforms) {\r\n\t\t\tconst location = this.uniformLocations[name] || gl.getUniformLocation(this.program, name)\r\n\t\t\t// !location && console.warn(name + ' uniform is not used in shader')\r\n\t\t\tif (!location) continue\r\n\t\t\tthis.uniformLocations[name] = location\r\n\t\t\tlet value: any = uniforms[name] as any\r\n\t\t\tconst info = this.uniformInfos[name]\r\n\t\t\tif (NLA_DEBUG) {\r\n\t\t\t\t// TODO: better errors\r\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\r\n\t\t\t\t\tif (1 == info.size) {\r\n\t\t\t\t\t\tassert(Number.isInteger(value))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tassert(\r\n\t\t\t\t\t\t\tisIntArray(value) && value.length == info.size,\r\n\t\t\t\t\t\t\t'value must be int array if info.size != 1',\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tassert(gl.FLOAT != info.type || ((1 == info.size && 'number' === typeof value) || isFloatArray(value)))\r\n\t\t\t\tassert(\r\n\t\t\t\t\tgl.FLOAT_VEC3 != info.type ||\r\n\t\t\t\t\t\t((1 == info.size && value instanceof V3) ||\r\n\t\t\t\t\t\t\t(Array.isArray(value) && info.size == value.length && assertVectors(...value))),\r\n\t\t\t\t)\r\n\t\t\t\tassert(gl.FLOAT_VEC4 != info.type || 1 != info.size || (isFloatArray(value) && value.length == 4))\r\n\t\t\t\tassert(gl.FLOAT_MAT4 != info.type || value instanceof M4, () => value.toSource())\r\n\t\t\t\tassert(gl.FLOAT_MAT3 != info.type || value.length == 9 || value instanceof M4)\r\n\t\t\t}\r\n\t\t\tif (value instanceof V3) {\r\n\t\t\t\tvalue = value.toArray()\r\n\t\t\t}\r\n\t\t\tif (gl.FLOAT_VEC4 == info.type && info.size != 1) {\r\n\t\t\t\tif (value instanceof Float32Array || value instanceof Float64Array) {\r\n\t\t\t\t\tgl.uniform4fv(location, value instanceof Float32Array ? value : Float32Array.from(value))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.uniform4fv(location, value.concatenated())\r\n\t\t\t\t}\r\n\t\t\t} else if (gl.FLOAT == info.type && info.size != 1) {\r\n\t\t\t\tgl.uniform1fv(location, value)\r\n\t\t\t} else if (gl.FLOAT_VEC3 == info.type && info.size != 1) {\r\n\t\t\t\tgl.uniform3fv(location, V3.pack(value))\r\n\t\t\t} else if (value.length) {\r\n\t\t\t\tswitch (value.length) {\r\n\t\t\t\t\tcase 1:\r\n\t\t\t\t\t\tgl.uniform1fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 2:\r\n\t\t\t\t\t\tgl.uniform2fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 3:\r\n\t\t\t\t\t\tgl.uniform3fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 4:\r\n\t\t\t\t\t\tgl.uniform4fv(location, value)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t// Matrices are automatically transposed, since WebGL uses column-major\r\n\t\t\t\t\t// indices instead of row-major indices.\r\n\t\t\t\t\tcase 9:\r\n\t\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\t\tgl.uniformMatrix3fv(location, false, new Float32Array([\r\n\t\t\t\t\t\t\tvalue[0], value[3], value[6],\r\n\t\t\t\t\t\t\tvalue[1], value[4], value[7],\r\n\t\t\t\t\t\t\tvalue[2], value[5], value[8],\r\n\t\t\t\t\t\t]))\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tcase 16:\r\n\t\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\t\tgl.uniformMatrix4fv(location, false, new Float32Array([\r\n\t\t\t\t\t\t\tvalue[0], value[4], value[8], value[12],\r\n\t\t\t\t\t\t\tvalue[1], value[5], value[9], value[13],\r\n\t\t\t\t\t\t\tvalue[2], value[6], value[10], value[14],\r\n\t\t\t\t\t\t\tvalue[3], value[7], value[11], value[15],\r\n\t\t\t\t\t\t]))\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tdefault:\r\n\t\t\t\t\t\tthrow new Error('don\\'t know how to load uniform \"' + name + '\" of length ' + value.length)\r\n\t\t\t\t}\r\n\t\t\t} else if ('number' == typeof value) {\r\n\t\t\t\tif (gl.SAMPLER_2D == info.type || gl.SAMPLER_CUBE == info.type || gl.INT == info.type) {\r\n\t\t\t\t\tgl.uniform1i(location, value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tgl.uniform1f(location, value)\r\n\t\t\t\t}\r\n\t\t\t} else if ('boolean' == typeof value) {\r\n\t\t\t\tgl.uniform1i(location, +value)\r\n\t\t\t} else if (value instanceof M4) {\r\n\t\t\t\tconst m = value.m\r\n\t\t\t\tif (gl.FLOAT_MAT4 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix4fv(location, false, [\r\n\t\t\t\t\t\tm[0], m[4], m[8], m[12],\r\n\t\t\t\t\t\tm[1], m[5], m[9], m[13],\r\n\t\t\t\t\t\tm[2], m[6], m[10], m[14],\r\n\t\t\t\t\t\tm[3], m[7], m[11], m[15]])\r\n\t\t\t\t} else if (gl.FLOAT_MAT3 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix3fv(location, false, [\r\n\t\t\t\t\t\tm[0], m[4], m[8],\r\n\t\t\t\t\t\tm[1], m[5], m[9],\r\n\t\t\t\t\t\tm[2], m[6], m[10]])\r\n\t\t\t\t} else if (gl.FLOAT_MAT2 == info.type) {\r\n\t\t\t\t\t// prettier-ignore\r\n\t\t\t\t\tgl.uniformMatrix2fv(location, false, new Float32Array([\r\n\t\t\t\t\t\tm[0], m[4],\r\n\t\t\t\t\t\tm[1], m[5]]))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error(`Can't assign M4 to ${info.type}`)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('attempted to set uniform \"' + name + '\" to invalid value ' + value)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn this\r\n\t}\r\n\r\n\tattributes(attributes: Partial<{ [K in keyof AttributeTypes]: UniformTypesMap[AttributeTypes[K]] }>): this {\r\n\t\tconst gl = this.gl\r\n\t\tgl.useProgram(this.program)\r\n\r\n\t\tfor (const name in attributes) {\r\n\t\t\tconst location = this.attributeLocations[name] || gl.getAttribLocation(this.program, name)\r\n\t\t\tif (location == -1) {\r\n\t\t\t\tif (!name.startsWith('ts_')) {\r\n\t\t\t\t\tconsole.warn(`Vertex buffer ${name} was not bound because the attribute is not active.`)\r\n\t\t\t\t}\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.attributeLocations[name] = location\r\n\t\t\tgl.disableVertexAttribArray(location)\r\n\t\t\tlet value = attributes[name]\r\n\t\t\tif (value instanceof V3) {\r\n\t\t\t\t// TODO: figure out the types here...\r\n\t\t\t\tvalue = value.toArray() as any\r\n\t\t\t}\r\n\t\t\tif ('number' === typeof value) {\r\n\t\t\t\tgl.vertexAttrib1f(location, value)\r\n\t\t\t} else {\r\n\t\t\t\tgl.vertexAttrib4fv(location, value as number[])\r\n\t\t\t\t// switch ((value as number[]).length) {\r\n\t\t\t\t// \tcase 1:\r\n\t\t\t\t// \t\tgl.vertexAttrib1fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 2:\r\n\t\t\t\t// \t\tgl.vertexAttrib2fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 3:\r\n\t\t\t\t// \t\tgl.vertexAttrib3fv(location, value as number[])\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// \tcase 4:\r\n\t\t\t\t// \t\tbreak\r\n\t\t\t\t// }\r\n\t\t\t}\r\n\t\t\tthis.constantAttributes[name] = true\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the mesh geometry as indexed\r\n\t * triangles or indexed LINES. Set `mode` to `gl.LINES` (and either add indices to `LINES` or call\r\n\t * `computeWireframe()`) to draw the mesh in wireframe.\r\n\t *\r\n\t * @param mesh\r\n\t * @param mode Defaults to 'TRIANGLES'. Must be passed as string so the correct index buffer can be\r\n\t *     automatically drawn.\r\n\t * @param start int\r\n\t * @param count int\r\n\t */\r\n\tdraw(mesh: Mesh, mode: GL.DrawMode = WGL.TRIANGLES, start?: int, count?: int): this {\r\n\t\tassert(mesh.hasBeenCompiled, 'mesh.hasBeenCompiled')\r\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\r\n\t\tconst modeName: string = DRAW_MODE_NAMES[mode]\r\n\t\t// assert(mesh.indexBuffers[modeStr], `mesh.indexBuffers[${modeStr}] undefined`)\r\n\t\treturn this.drawBuffers(mesh.vertexBuffers, mesh.indexBuffers[modeName], mode, start, count)\r\n\t}\r\n\r\n\t/**\r\n\t * Sets all uniform matrix attributes, binds all relevant buffers, and draws the\r\n\t * indexed mesh geometry. The `vertexBuffers` argument is a map from attribute\r\n\t * names to `Buffer` objects of type `WGL.ARRAY_BUFFER`, `indexBuffer` is a `Buffer`\r\n\t * object of type `WGL.ELEMENT_ARRAY_BUFFER`, and `mode` is a WebGL primitive mode\r\n\t * like `WGL.TRIANGLES` or `WGL.LINES`. This method automatically creates and caches\r\n\t * vertex attribute pointers for attributes as needed.\r\n\t */\r\n\tdrawBuffers(\r\n\t\tvertexBuffers: { [attributeName: string]: Buffer },\r\n\t\tindexBuffer: Buffer | undefined,\r\n\t\tmode: GL.DrawMode = WGL.TRIANGLES,\r\n\t\tstart: int = 0,\r\n\t\tcount?: int,\r\n\t): this {\r\n\t\tconst gl = this.gl\r\n\t\tassert(undefined != DRAW_MODE_NAMES[mode])\r\n\t\tassertf(() => 1 <= Object.keys(vertexBuffers).length)\r\n\t\tObject.keys(vertexBuffers).forEach(key => assertInst(Buffer, vertexBuffers[key]))\r\n\r\n\t\t// Only varruct up the built-in matrices that are active in the shader\r\n\t\tconst on = this.activeMatrices\r\n\t\tconst modelViewMatrixInverse =\r\n\t\t\t(on['ts_ModelViewMatrixInverse'] || on['ts_NormalMatrix']) &&\r\n\t\t\t//&& this.modelViewMatrixVersion != gl.modelViewMatrixVersion\r\n\t\t\tgl.modelViewMatrix.inversed()\r\n\t\tconst projectionMatrixInverse =\r\n\t\t\ton['ts_ProjectionMatrixInverse'] &&\r\n\t\t\t//&& this.projectionMatrixVersion != gl.projectionMatrixVersion\r\n\t\t\tgl.projectionMatrix.inversed()\r\n\t\tconst modelViewProjectionMatrix =\r\n\t\t\t(on['ts_ModelViewProjectionMatrix'] || on['ts_ModelViewProjectionMatrixInverse']) &&\r\n\t\t\t//&& (this.projectionMatrixVersion != gl.projectionMatrixVersion || this.modelViewMatrixVersion !=\r\n\t\t\t// gl.modelViewMatrixVersion)\r\n\t\t\tgl.projectionMatrix.times(gl.modelViewMatrix)\r\n\r\n\t\tconst uni: { [matrixName: string]: M4 } = {} // Uniform Matrices\r\n\t\ton['ts_ModelViewMatrix'] &&\r\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\r\n\t\t\t(uni['ts_ModelViewMatrix'] = gl.modelViewMatrix)\r\n\t\ton['ts_ModelViewMatrixInverse'] && (uni['ts_ModelViewMatrixInverse'] = modelViewMatrixInverse as M4)\r\n\t\ton['ts_ProjectionMatrix'] &&\r\n\t\t\tthis.projectionMatrixVersion != gl.projectionMatrixVersion &&\r\n\t\t\t(uni['ts_ProjectionMatrix'] = gl.projectionMatrix)\r\n\t\tprojectionMatrixInverse && (uni['ts_ProjectionMatrixInverse'] = projectionMatrixInverse)\r\n\t\tmodelViewProjectionMatrix && (uni['ts_ModelViewProjectionMatrix'] = modelViewProjectionMatrix)\r\n\t\tmodelViewProjectionMatrix &&\r\n\t\t\ton['ts_ModelViewProjectionMatrixInverse'] &&\r\n\t\t\t(uni['ts_ModelViewProjectionMatrixInverse'] = modelViewProjectionMatrix.inversed())\r\n\t\ton['ts_NormalMatrix'] &&\r\n\t\t\tthis.modelViewMatrixVersion != gl.modelViewMatrixVersion &&\r\n\t\t\t(uni['ts_NormalMatrix'] = (modelViewMatrixInverse as M4).transposed())\r\n\t\tthis.uniforms(uni as any)\r\n\t\tthis.projectionMatrixVersion = gl.projectionMatrixVersion\r\n\t\tthis.modelViewMatrixVersion = gl.modelViewMatrixVersion\r\n\r\n\t\t// Create and enable attribute pointers as necessary.\r\n\t\tlet minVertexBufferLength = Infinity\r\n\t\tfor (const attribute in vertexBuffers) {\r\n\t\t\tconst buffer = vertexBuffers[attribute]\r\n\t\t\tassert(buffer.hasBeenCompiled)\r\n\t\t\tconst location = this.attributeLocations[attribute] || gl.getAttribLocation(this.program, attribute)\r\n\t\t\tif (location == -1 || !buffer.buffer) {\r\n\t\t\t\tif (!attribute.startsWith('ts_')) {\r\n\t\t\t\t\tconsole.warn(`Vertex buffer ${attribute} was not bound because the attribute is not active.`)\r\n\t\t\t\t}\r\n\t\t\t\tcontinue\r\n\t\t\t}\r\n\t\t\tthis.attributeLocations[attribute] = location\r\n\t\t\tgl.bindBuffer(WGL.ARRAY_BUFFER, buffer.buffer)\r\n\r\n\t\t\tgl.enableVertexAttribArray(location)\r\n\r\n\t\t\tgl.vertexAttribPointer(location, buffer.spacing, WGL.FLOAT, false, 0, 0)\r\n\r\n\t\t\tminVertexBufferLength = Math.min(minVertexBufferLength, buffer.count)\r\n\t\t}\r\n\r\n\t\t// Disable unused attribute pointers.\r\n\t\tfor (const attribute in this.attributeLocations) {\r\n\t\t\tif (!(attribute in vertexBuffers)) {\r\n\t\t\t\tgl.disableVertexAttribArray(this.attributeLocations[attribute])\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (NLA_DEBUG) {\r\n\t\t\tconst numAttribs = gl.getProgramParameter(this.program, gl.ACTIVE_ATTRIBUTES)\r\n\t\t\tfor (let i = 0; i < numAttribs; ++i) {\r\n\t\t\t\tconst buffer = gl.getVertexAttrib(i, gl.VERTEX_ATTRIB_ARRAY_BUFFER_BINDING)\r\n\t\t\t\tif (!buffer) {\r\n\t\t\t\t\tconst info = gl.getActiveAttrib(this.program, i)!\r\n\t\t\t\t\tif (!this.constantAttributes[info.name]) {\r\n\t\t\t\t\t\tconsole.warn(\r\n\t\t\t\t\t\t\t'No buffer is bound to attribute ' + info.name + ' and it was not set with .attributes()',\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// console.log('name:', info.name, 'type:', info.type, 'size:', info.size)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Draw the geometry.\r\n\t\tif (minVertexBufferLength) {\r\n\t\t\tif (undefined === count) {\r\n\t\t\t\tcount = indexBuffer ? indexBuffer.count : minVertexBufferLength\r\n\t\t\t}\r\n\t\t\tassert(\r\n\t\t\t\tDRAW_MODE_CHECKS[mode](count),\r\n\t\t\t\t'count ' +\r\n\t\t\t\t\tcount +\r\n\t\t\t\t\t\"doesn't fulfill requirement +\" +\r\n\t\t\t\t\tDRAW_MODE_CHECKS[mode].toString() +\r\n\t\t\t\t\t' for mode ' +\r\n\t\t\t\t\tDRAW_MODE_NAMES[mode],\r\n\t\t\t)\r\n\r\n\t\t\tif (indexBuffer) {\r\n\t\t\t\tassert(indexBuffer.hasBeenCompiled)\r\n\t\t\t\tassert(minVertexBufferLength > indexBuffer.maxValue!)\r\n\t\t\t\tassert(count % indexBuffer.spacing == 0)\r\n\t\t\t\tassert(start % indexBuffer.spacing == 0)\r\n\t\t\t\tif (start + count > indexBuffer.count) {\r\n\t\t\t\t\tthrow new Error(\r\n\t\t\t\t\t\t'Buffer not long enough for passed parameters start/length/buffer length ' +\r\n\t\t\t\t\t\t\tstart +\r\n\t\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\t\tcount +\r\n\t\t\t\t\t\t\t' ' +\r\n\t\t\t\t\t\t\tindexBuffer.count,\r\n\t\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\t\tgl.bindBuffer(WGL.ELEMENT_ARRAY_BUFFER, indexBuffer.buffer!)\r\n\t\t\t\t// start parameter has to be multiple of sizeof(WGL.UNSIGNED_SHORT)\r\n\t\t\t\tgl.drawElements(mode, count, indexBuffer.bindSize, indexBuffer.type.BYTES_PER_ELEMENT * start)\r\n\t\t\t} else {\r\n\t\t\t\tif (start + count > minVertexBufferLength) {\r\n\t\t\t\t\tthrow new Error('invalid')\r\n\t\t\t\t}\r\n\t\t\t\tgl.drawArrays(mode, start, count)\r\n\t\t\t}\r\n\t\t\tgl.drawCallCount++\r\n\t\t}\r\n\r\n\t\treturn this\r\n\t}\r\n}\r\n","import { assert, int } from 'ts3dutils'\r\n\r\nimport { currentGL, TSGLContext } from './index'\r\nimport GL = WebGLRenderingContextStrict\r\nimport GL2 = WebGL2RenderingContext\r\n\r\nexport interface TextureOptions {\r\n\twrap?: GL.TextureWrap // defaults to WGL.CLAMP_TO_EDGE, or set wrapS and wrapT individually.\r\n\twrapS?: GL.TextureWrap\r\n\twrapT?: GL.TextureWrap\r\n\tfilter?: GL.TextureMagFilter // defaults to WGL.LINEAR, or set minFilter and magFilter individually.\r\n\tminFilter?: GL.TextureMinFilter\r\n\tmagFilter?: GL.TextureMagFilter\r\n\tformat?: GL2.TextureFormat // defaults to WGL.RGBA.\r\n\tinternalFormat?: GL2.TextureInternalFormat\r\n\ttype?: GL.ReadPixelsType // defaults to WGL.UNSIGNED_BYTE.\r\n\tdata?: any\r\n}\r\n\r\nexport class Texture {\r\n\theight: int\r\n\twidth: int\r\n\ttexture: WebGLTexture\r\n\t// e.g. viewerGL.UNSIGNED_BYTE, viewerGL.FLOAT\r\n\tinternalFormat: GL2.TextureInternalFormat\r\n\tformat: GL2.TextureFormat\r\n\t// e.g. viewerGL.RGBA\r\n\ttype: GL.ReadPixelsType\r\n\r\n\t/**\r\n\t * Provides a simple wrapper around WebGL textures that supports render-to-texture.\r\n\t *\r\n\t * The arguments `width` and `height` give the size of the texture in texels.\r\n\t * WebGL texture dimensions must be powers of two unless `filter` is set to\r\n\t * either `WGL.NEAREST` or `WGL.LINEAR` and `wrap` is set to `WGL.CLAMP_TO_EDGE`\r\n\t * (which they are by default).\r\n\t *\r\n\t * Texture parameters can be passed in via the `options` argument.\r\n\t * Example usage:\r\n\t *\r\n\t *      let tex = new GL.Texture(256, 256, {\r\n\t *       magFilter: WGL.NEAREST,\r\n\t *       minFilter: WGL.LINEAR,\r\n\t *\r\n\t *       wrapS: WGL.REPEAT,\r\n\t *       wrapT: WGL.REPEAT,\r\n\t *\r\n\t *       format: WGL.RGB, // Defaults to WGL.RGBA\r\n\t *       type: WGL.FLOAT // Defaults to WGL.UNSIGNED_BYTE\r\n\t *     })\r\n\t *\r\n\t */\r\n\tconstructor(width: int, height: int, options: TextureOptions = {}, readonly gl = currentGL()) {\r\n\t\tthis.width = width\r\n\t\tthis.height = height\r\n\t\tthis.format = options.format || gl.RGBA\r\n\t\tthis.internalFormat = options.internalFormat || gl.RGBA\r\n\t\tthis.type = options.type || gl.UNSIGNED_BYTE\r\n\t\tconst magFilter = options.filter || options.magFilter || gl.LINEAR\r\n\t\tconst minFilter = options.filter || options.minFilter || gl.LINEAR\r\n\t\tif (this.type === gl.FLOAT) {\r\n\t\t\tif (gl.version != 2 && !gl.getExtension('OES_texture_float')) {\r\n\t\t\t\tthrow new Error('OES_texture_float is required but not supported')\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\r\n\t\t\t\t!gl.getExtension('OES_texture_float_linear')\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error('OES_texture_float_linear is required but not supported')\r\n\t\t\t}\r\n\t\t} else if (this.type === gl.HALF_FLOAT_OES) {\r\n\t\t\tif (!gl.getExtension('OES_texture_half_float')) {\r\n\t\t\t\tthrow new Error('OES_texture_half_float is required but not supported')\r\n\t\t\t}\r\n\t\t\tif (\r\n\t\t\t\t(minFilter !== gl.NEAREST || magFilter !== gl.NEAREST) &&\r\n\t\t\t\t!gl.getExtension('OES_texture_half_float_linear')\r\n\t\t\t) {\r\n\t\t\t\tthrow new Error('OES_texture_half_float_linear is required but not supported')\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tthis.texture = gl.createTexture()!\r\n\t\tgl.bindTexture(gl.TEXTURE_2D, this.texture)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, magFilter)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, minFilter)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, options.wrap || options.wrapS || gl.CLAMP_TO_EDGE)\r\n\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, options.wrap || options.wrapT || gl.CLAMP_TO_EDGE)\r\n\t\tgl.texImage2D(\r\n\t\t\tgl.TEXTURE_2D,\r\n\t\t\t0,\r\n\t\t\tthis.internalFormat as any,\r\n\t\t\twidth,\r\n\t\t\theight,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.type as any,\r\n\t\t\toptions.data,\r\n\t\t)\r\n\t}\r\n\r\n\tsetData(data: ArrayBufferView) {\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\r\n\t\tthis.gl.texImage2D(\r\n\t\t\tthis.gl.TEXTURE_2D,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.width,\r\n\t\t\tthis.height,\r\n\t\t\t0,\r\n\t\t\tthis.format as any,\r\n\t\t\tthis.type as any,\r\n\t\t\tdata as any,\r\n\t\t)\r\n\t}\r\n\r\n\tbind(unit: int) {\r\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, this.texture)\r\n\t}\r\n\r\n\tunbind(unit: int) {\r\n\t\tthis.gl.activeTexture((this.gl.TEXTURE0 + unit) as GL.TextureUnit)\r\n\t\tthis.gl.bindTexture(this.gl.TEXTURE_2D, null)\r\n\t}\r\n\r\n\tprivate framebuffer: WebGLFramebuffer | undefined\r\n\tstatic checkerBoardCanvas: HTMLCanvasElement\r\n\r\n\tdrawTo(render: (gl: TSGLContext) => void): void {\r\n\t\tconst gl = this.gl\r\n\t\tconst prevFramebuffer = gl.getParameter(gl.FRAMEBUFFER_BINDING)\r\n\t\tif (!this.framebuffer) {\r\n\t\t\t// create a renderbuffer for the depth component\r\n\t\t\tconst prevRenderbuffer = gl.getParameter(gl.RENDERBUFFER_BINDING)\r\n\t\t\tconst depthRenderbuffer = gl.createRenderbuffer()\r\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, depthRenderbuffer)\r\n\t\t\t// DEPTH_COMPONENT16 is the only depth format\r\n\t\t\tgl.renderbufferStorage(gl.RENDERBUFFER, gl.DEPTH_COMPONENT16, this.width, this.height)\r\n\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, prevRenderbuffer)\r\n\r\n\t\t\t// create a framebuffer to render to\r\n\t\t\tthis.framebuffer = gl.createFramebuffer()!\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\r\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, this.texture, 0)\r\n\t\t\tgl.framebufferRenderbuffer(gl.FRAMEBUFFER, gl.DEPTH_ATTACHMENT, gl.RENDERBUFFER, depthRenderbuffer)\r\n\t\t\tif (gl.checkFramebufferStatus(gl.FRAMEBUFFER) !== gl.FRAMEBUFFER_COMPLETE) {\r\n\t\t\t\tthrow new Error('Rendering to this texture is not supported (incomplete this.framebuffer)')\r\n\t\t\t}\r\n\t\t} else if (prevFramebuffer !== this.framebuffer) {\r\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer)\r\n\t\t}\r\n\r\n\t\tconst prevViewport = gl.getParameter(gl.VIEWPORT)\r\n\r\n\t\tgl.viewport(0, 0, this.width, this.height)\r\n\t\trender(gl)\r\n\r\n\t\t// restore previous state\r\n\t\tprevFramebuffer !== this.framebuffer && gl.bindFramebuffer(gl.FRAMEBUFFER, prevFramebuffer)\r\n\t\tgl.viewport(prevViewport[0], prevViewport[1], prevViewport[2], prevViewport[3])\r\n\t}\r\n\r\n\tswapWith(other: Texture): void {\r\n\t\tassert(this.gl == other.gl)\r\n\t\tlet temp\r\n\t\ttemp = other.texture\r\n\t\tother.texture = this.texture\r\n\t\tthis.texture = temp\r\n\r\n\t\ttemp = other.width\r\n\t\tother.width = this.width\r\n\t\tthis.width = temp\r\n\r\n\t\ttemp = other.height\r\n\t\tother.height = this.height\r\n\t\tthis.height = temp\r\n\t}\r\n\r\n\t/**\r\n\t * Return a new texture created from `imgElement`, an `<img>` tag.\r\n\t */\r\n\tstatic fromImage(\r\n\t\timgElement: HTMLImageElement | HTMLCanvasElement,\r\n\t\toptions: TextureOptions = {},\r\n\t\tgl: TSGLContext = currentGL(),\r\n\t): Texture {\r\n\t\tconst texture = new Texture(imgElement.width, imgElement.height, options, gl)\r\n\t\ttry {\r\n\t\t\tgl.texImage2D(\r\n\t\t\t\tgl.TEXTURE_2D,\r\n\t\t\t\t0,\r\n\t\t\t\ttexture.format as any,\r\n\t\t\t\ttexture.format as any,\r\n\t\t\t\ttexture.type as any,\r\n\t\t\t\timgElement,\r\n\t\t\t)\r\n\t\t} catch (e) {\r\n\t\t\tif (location.protocol == 'file:') {\r\n\t\t\t\tthrow new Error('imgElement not loaded for security reasons (serve this page over \"http://\" instead)')\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error(\r\n\t\t\t\t\t'imgElement not loaded for security reasons (imgElement must originate from the same ' +\r\n\t\t\t\t\t\t'domain as this page or use Cross-Origin Resource Sharing)',\r\n\t\t\t\t)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (options.minFilter && options.minFilter != gl.NEAREST && options.minFilter != gl.LINEAR) {\r\n\t\t\tgl.generateMipmap(gl.TEXTURE_2D)\r\n\t\t}\r\n\t\treturn texture\r\n\t}\r\n\r\n\t/**\r\n\t * Returns a checkerboard texture that will switch to the correct texture when it loads.\r\n\t */\r\n\tstatic fromURLSwitch(url: string, options?: TextureOptions, gl = currentGL()): Texture {\r\n\t\tTexture.checkerBoardCanvas =\r\n\t\t\tTexture.checkerBoardCanvas ||\r\n\t\t\t(function() {\r\n\t\t\t\tconst c = document.createElement('canvas').getContext('2d')\r\n\t\t\t\tif (!c) throw new Error('Could not create 2d canvas.')\r\n\t\t\t\tc.canvas.width = c.canvas.height = 128\r\n\t\t\t\tfor (let y = 0; y < c.canvas.height; y += 16) {\r\n\t\t\t\t\tfor (let x = 0; x < c.canvas.width; x += 16) {\r\n\t\t\t\t\t\t//noinspection JSBitwiseOperatorUsage\r\n\t\t\t\t\t\tc.fillStyle = (x ^ y) & 16 ? '#FFF' : '#DDD'\r\n\t\t\t\t\t\tc.fillRect(x, y, 16, 16)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn c.canvas\r\n\t\t\t})()\r\n\t\tconst texture = Texture.fromImage(Texture.checkerBoardCanvas, options)\r\n\t\tconst image = new Image()\r\n\t\timage.onload = () => Texture.fromImage(image, options, gl).swapWith(texture)\r\n\t\t// error event doesn't return a reason. Most likely a 404.\r\n\t\timage.onerror = () => {\r\n\t\t\tthrow new Error('Could not load image ' + image.src + '. 404?')\r\n\t\t}\r\n\t\timage.src = url\r\n\t\treturn texture\r\n\t}\r\n\r\n\tstatic fromURL(url: string, options?: TextureOptions, gl = currentGL()): Promise<Texture> {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tconst image = new Image()\r\n\t\t\timage.onload = () => resolve(Texture.fromImage(image, options, gl))\r\n\t\t\timage.onerror = ev => reject('Could not load image ' + image.src + '. 404?' + ev)\r\n\t\t\timage.src = url\r\n\t\t})\r\n\t}\r\n}\r\n","/*\r\n** Copyright (c) 2012 The Khronos Group Inc.\r\n**\r\n** Permission is hereby granted, free of charge, to any person obtaining a\r\n** copy of this software and/or associated documentation files (the\r\n** 'Materials'), to deal in the Materials without restriction, including\r\n** without limitation the rights to use, copy, modify, merge, publish,\r\n** distribute, sublicense, and/or sell copies of the Materials, and to\r\n** permit persons to whom the Materials are furnished to do so, subject to\r\n** the following conditions:\r\n**\r\n** The above copyright notice and this permission notice shall be included\r\n** in all copies or substantial portions of the Materials.\r\n**\r\n** THE MATERIALS ARE PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n** EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n** MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n** IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n** CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n** TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n** MATERIALS OR THE USE OR OTHER DEALINGS IN THE MATERIALS.\r\n*/\r\n\r\n// tslint:disable\r\nimport GL = WebGLRenderingContextStrict\r\n\r\n// Various functions for helping debug WebGL apps.\r\n\r\n/**\r\n * Wrapped logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction log(msg: string) {\r\n\tif (window.console && window.console.log) {\r\n\t\twindow.console.log(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Wrapped error logging function.\r\n * @param msg Message to log.\r\n */\r\nfunction error(msg: string) {\r\n\tif (window.console && window.console.error) {\r\n\t\twindow.console.error(msg)\r\n\t} else {\r\n\t\tlog(msg)\r\n\t}\r\n}\r\n\r\n/**\r\n * Which arguments are enums based on the number of arguments to the function.\r\n * So\r\n *    'texImage2D': {\r\n *       9: { 0:true, 2:true, 6:true, 7:true },\r\n *       6: { 0:true, 2:true, 3:true, 4:true },\r\n *    },\r\n *\r\n * means if there are 9 arguments then 6 and 7 are enums, if there are 6\r\n * arguments 3 and 4 are enums\r\n *\r\n * @type {!Object.<number, !Object.<number, string>}\r\n */\r\nconst glValidEnumContexts: {\r\n\t[funcName: string]: { [argCount: number]: { [argIndex: number]: boolean | { enumBitwiseOr: string[] } } }\r\n} = {\r\n\t// Generic setters and getters\r\n\r\n\tenable: { 1: { 0: true } },\r\n\tdisable: { 1: { 0: true } },\r\n\tgetParameter: { 1: { 0: true } },\r\n\r\n\t// Rendering\r\n\r\n\tdrawArrays: { 3: { 0: true } },\r\n\tdrawElements: { 4: { 0: true, 2: true } },\r\n\r\n\t// Shaders\r\n\r\n\tcreateShader: { 1: { 0: true } },\r\n\tgetShaderParameter: { 2: { 1: true } },\r\n\tgetProgramParameter: { 2: { 1: true } },\r\n\tgetShaderPrecisionFormat: { 2: { 0: true, 1: true } },\r\n\r\n\t// Vertex attributes\r\n\r\n\tgetVertexAttrib: { 2: { 1: true } },\r\n\tvertexAttribPointer: { 6: { 2: true } },\r\n\r\n\t// Textures\r\n\r\n\tbindTexture: { 2: { 0: true } },\r\n\tactiveTexture: { 1: { 0: true } },\r\n\tgetTexParameter: { 2: { 0: true, 1: true } },\r\n\ttexParameterf: { 3: { 0: true, 1: true } },\r\n\ttexParameteri: { 3: { 0: true, 1: true, 2: true } },\r\n\t// texImage2D and texSubImage2D are defined below with WebGL 2 entrypoints\r\n\tcopyTexImage2D: { 8: { 0: true, 2: true } },\r\n\tcopyTexSubImage2D: { 8: { 0: true } },\r\n\tgenerateMipmap: { 1: { 0: true } },\r\n\t// compressedTexImage2D and compressedTexSubImage2D are defined below with WebGL 2 entrypoints\r\n\r\n\t// Buffer objects\r\n\r\n\tbindBuffer: { 2: { 0: true } },\r\n\t// bufferData and bufferSubData are defined below with WebGL 2 entrypoints\r\n\tgetBufferParameter: { 2: { 0: true, 1: true } },\r\n\r\n\t// Renderbuffers and framebuffers\r\n\r\n\tpixelStorei: { 2: { 0: true, 1: true } },\r\n\t// readPixels is defined below with WebGL 2 entrypoints\r\n\tbindRenderbuffer: { 2: { 0: true } },\r\n\tbindFramebuffer: { 2: { 0: true } },\r\n\tcheckFramebufferStatus: { 1: { 0: true } },\r\n\tframebufferRenderbuffer: { 4: { 0: true, 1: true, 2: true } },\r\n\tframebufferTexture2D: { 5: { 0: true, 1: true, 2: true } },\r\n\tgetFramebufferAttachmentParameter: { 3: { 0: true, 1: true, 2: true } },\r\n\tgetRenderbufferParameter: { 2: { 0: true, 1: true } },\r\n\trenderbufferStorage: { 4: { 0: true, 1: true } },\r\n\r\n\t// Frame buffer operations (clear, blend, depth test, stencil)\r\n\r\n\tclear: { 1: { 0: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] } } },\r\n\tdepthFunc: { 1: { 0: true } },\r\n\tblendFunc: { 2: { 0: true, 1: true } },\r\n\tblendFuncSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\tblendEquation: { 1: { 0: true } },\r\n\tblendEquationSeparate: { 2: { 0: true, 1: true } },\r\n\tstencilFunc: { 3: { 0: true } },\r\n\tstencilFuncSeparate: { 4: { 0: true, 1: true } },\r\n\tstencilMaskSeparate: { 2: { 0: true } },\r\n\tstencilOp: { 3: { 0: true, 1: true, 2: true } },\r\n\tstencilOpSeparate: { 4: { 0: true, 1: true, 2: true, 3: true } },\r\n\r\n\t// Culling\r\n\r\n\tcullFace: { 1: { 0: true } },\r\n\tfrontFace: { 1: { 0: true } },\r\n\r\n\t// ANGLE_instanced_arrays extension\r\n\r\n\tdrawArraysInstancedANGLE: { 4: { 0: true } },\r\n\tdrawElementsInstancedANGLE: { 5: { 0: true, 2: true } },\r\n\r\n\t// EXT_blend_minmax extension\r\n\r\n\tblendEquationEXT: { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Buffer objects\r\n\r\n\tbufferData: {\r\n\t\t3: { 0: true, 2: true }, // WebGL 1\r\n\t\t4: { 0: true, 2: true }, // WebGL 2\r\n\t\t5: { 0: true, 2: true }, // WebGL 2\r\n\t},\r\n\tbufferSubData: {\r\n\t\t3: { 0: true }, // WebGL 1\r\n\t\t4: { 0: true }, // WebGL 2\r\n\t\t5: { 0: true }, // WebGL 2\r\n\t},\r\n\tcopyBufferSubData: { 5: { 0: true, 1: true } },\r\n\tgetBufferSubData: { 3: { 0: true }, 4: { 0: true }, 5: { 0: true } },\r\n\r\n\t// WebGL 2 Framebuffer objects\r\n\r\n\tblitFramebuffer: {\r\n\t\t10: { 8: { enumBitwiseOr: ['COLOR_BUFFER_BIT', 'DEPTH_BUFFER_BIT', 'STENCIL_BUFFER_BIT'] }, 9: true },\r\n\t},\r\n\tframebufferTextureLayer: { 5: { 0: true, 1: true } },\r\n\tinvalidateFramebuffer: { 2: { 0: true } },\r\n\tinvalidateSubFramebuffer: { 6: { 0: true } },\r\n\treadBuffer: { 1: { 0: true } },\r\n\r\n\t// WebGL 2 Renderbuffer objects\r\n\r\n\tgetInternalformatParameter: { 3: { 0: true, 1: true, 2: true } },\r\n\trenderbufferStorageMultisample: { 5: { 0: true, 2: true } },\r\n\r\n\t// WebGL 2 Texture objects\r\n\r\n\ttexStorage2D: { 5: { 0: true, 2: true } },\r\n\ttexStorage3D: { 6: { 0: true, 2: true } },\r\n\ttexImage2D: {\r\n\t\t9: { 0: true, 2: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t6: { 0: true, 2: true, 3: true, 4: true }, // WebGL 1\r\n\t\t10: { 0: true, 2: true, 6: true, 7: true }, // WebGL 2\r\n\t},\r\n\ttexImage3D: {\r\n\t\t10: { 0: true, 2: true, 7: true, 8: true },\r\n\t\t11: { 0: true, 2: true, 7: true, 8: true },\r\n\t},\r\n\ttexSubImage2D: {\r\n\t\t9: { 0: true, 6: true, 7: true }, // WebGL 1 & 2\r\n\t\t7: { 0: true, 4: true, 5: true }, // WebGL 1\r\n\t\t10: { 0: true, 6: true, 7: true }, // WebGL 2\r\n\t},\r\n\ttexSubImage3D: {\r\n\t\t11: { 0: true, 8: true, 9: true },\r\n\t\t12: { 0: true, 8: true, 9: true },\r\n\t},\r\n\tcopyTexSubImage3D: { 9: { 0: true } },\r\n\tcompressedTexImage2D: {\r\n\t\t7: { 0: true, 2: true }, // WebGL 1 & 2\r\n\t\t8: { 0: true, 2: true }, // WebGL 2\r\n\t\t9: { 0: true, 2: true }, // WebGL 2\r\n\t},\r\n\tcompressedTexImage3D: {\r\n\t\t8: { 0: true, 2: true },\r\n\t\t9: { 0: true, 2: true },\r\n\t\t10: { 0: true, 2: true },\r\n\t},\r\n\tcompressedTexSubImage2D: {\r\n\t\t8: { 0: true, 6: true }, // WebGL 1 & 2\r\n\t\t9: { 0: true, 6: true }, // WebGL 2\r\n\t\t10: { 0: true, 6: true }, // WebGL 2\r\n\t},\r\n\tcompressedTexSubImage3D: {\r\n\t\t10: { 0: true, 8: true },\r\n\t\t11: { 0: true, 8: true },\r\n\t\t12: { 0: true, 8: true },\r\n\t},\r\n\r\n\t// WebGL 2 Vertex attribs\r\n\r\n\tvertexAttribIPointer: { 5: { 2: true } },\r\n\r\n\t// WebGL 2 Writing to the drawing buffer\r\n\r\n\tdrawArraysInstanced: { 4: { 0: true } },\r\n\tdrawElementsInstanced: { 5: { 0: true, 2: true } },\r\n\tdrawRangeElements: { 6: { 0: true, 4: true } },\r\n\r\n\t// WebGL 2 Reading back pixels\r\n\r\n\treadPixels: {\r\n\t\t7: { 4: true, 5: true }, // WebGL 1 & 2\r\n\t\t8: { 4: true, 5: true }, // WebGL 2\r\n\t},\r\n\r\n\t// WebGL 2 Multiple Render Targets\r\n\r\n\tclearBufferfv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferiv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferuiv: { 3: { 0: true }, 4: { 0: true } },\r\n\tclearBufferfi: { 4: { 0: true } },\r\n\r\n\t// WebGL 2 Query objects\r\n\r\n\tbeginQuery: { 2: { 0: true } },\r\n\tendQuery: { 1: { 0: true } },\r\n\tgetQuery: { 2: { 0: true, 1: true } },\r\n\tgetQueryParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sampler objects\r\n\r\n\tsamplerParameteri: { 3: { 1: true, 2: true } },\r\n\tsamplerParameterf: { 3: { 1: true } },\r\n\tgetSamplerParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Sync objects\r\n\r\n\tfenceSync: { 2: { 0: true, 1: { enumBitwiseOr: [] } } },\r\n\tclientWaitSync: { 3: { 1: { enumBitwiseOr: ['SYNC_FLUSH_COMMANDS_BIT'] } } },\r\n\twaitSync: { 3: { 1: { enumBitwiseOr: [] } } },\r\n\tgetSyncParameter: { 2: { 1: true } },\r\n\r\n\t// WebGL 2 Transform Feedback\r\n\r\n\tbindTransformFeedback: { 2: { 0: true } },\r\n\tbeginTransformFeedback: { 1: { 0: true } },\r\n\ttransformFeedbackVaryings: { 3: { 2: true } },\r\n\r\n\t// WebGL2 Uniform Buffer Objects and Transform Feedback Buffers\r\n\r\n\tbindBufferBase: { 3: { 0: true } },\r\n\tbindBufferRange: { 5: { 0: true } },\r\n\tgetIndexedParameter: { 2: { 0: true } },\r\n\tgetActiveUniforms: { 3: { 2: true } },\r\n\tgetActiveUniformBlockParameter: { 3: { 2: true } },\r\n}\r\n\r\n/**\r\n * Map of numbers to names.\r\n * @type {Object}\r\n */\r\nlet glEnums: { [k: number]: string } = null as any\r\n\r\n/**\r\n * Map of names to numbers.\r\n * @type {Object}\r\n */\r\nlet enumStringToValue: { [k: string]: GL.GLenum<string> } = null as any\r\n\r\n/**\r\n * Initializes this module. Safe to call more than once.\r\n * @param ctx A WebGL context. If\r\n *    you have more than one context it doesn't matter which one\r\n *    you pass in, it is only used to pull out constants.\r\n */\r\nexport function init() {\r\n\tif (null === glEnums) {\r\n\t\tglEnums = {}\r\n\t\tenumStringToValue = {}\r\n\t\tconst c = (window as any).WebGL2RenderingContext || (window as any).WebGLRenderingContext\r\n\t\tif (!c) throw new Error('Neither WebGL2RenderingContext nor WebGLRenderingContext exists on window.')\r\n\t\tfor (const propertyName in c) {\r\n\t\t\tconst prop = c[propertyName]\r\n\t\t\tif ('number' === typeof prop) {\r\n\t\t\t\tglEnums[prop] = propertyName\r\n\t\t\t\tenumStringToValue[propertyName] = prop as any\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/**\r\n * Returns true or false if value matches any WebGL enum\r\n * @param value Value to check if it might be an enum.\r\n * @return True if value matches one of the WebGL defined enums\r\n */\r\nexport function mightBeEnum(value: number): boolean {\r\n\tinit()\r\n\treturn glEnums[value] !== undefined\r\n}\r\n\r\n/**\r\n * Gets an string version of an WebGL enum.\r\n *\r\n * Example:\r\n *   var str = WebGLDebugUtil.glEnumToString(ctx.getError())\r\n *\r\n * @param value Value to return an enum for\r\n * @return The string version of the enum.\r\n */\r\nexport function glEnumToString(value: GL.GLenum<string>): string {\r\n\tinit()\r\n\tvar name = glEnums[value as any]\r\n\treturn name !== undefined ? 'gl.' + name : '/*UNKNOWN WebGL ENUM*/ 0x' + (value as any).toString(16) + ''\r\n}\r\n\r\n/**\r\n * Converts the argument of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * Example:\r\n *   WebGLDebugUtil.init(ctx)\r\n *   var str = WebGLDebugUtil.glFunctionArgToString('bindTexture', 2, 0, gl.TEXTURE_2D)\r\n *\r\n * would return 'TEXTURE_2D'\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param numArgs the number of arguments passed to the function.\r\n * @param argumentIndex the index of the argument.\r\n * @param value The value of the argument.\r\n * @return The value as a string.\r\n */\r\nexport function glFunctionArgToString(\r\n\tfunctionName: string,\r\n\tnumArgs: number,\r\n\targumentIndex: number,\r\n\tvalue: any,\r\n): string {\r\n\tconst funcInfo = glValidEnumContexts[functionName]\r\n\tif (funcInfo !== undefined) {\r\n\t\tconst funcOverloadInfo = funcInfo[numArgs]\r\n\t\tif (funcOverloadInfo !== undefined) {\r\n\t\t\tconst argInfo = funcOverloadInfo[argumentIndex]\r\n\t\t\tif (argInfo) {\r\n\t\t\t\tif (typeof argInfo === 'object') {\r\n\t\t\t\t\tconst enums = argInfo.enumBitwiseOr\r\n\t\t\t\t\tconst orEnums = []\r\n\t\t\t\t\tlet orResult = 0\r\n\t\t\t\t\tfor (let i = 0; i < enums.length; ++i) {\r\n\t\t\t\t\t\tconst enumValue = enumStringToValue[enums[i]]\r\n\t\t\t\t\t\tif ((value & enumValue) !== 0) {\r\n\t\t\t\t\t\t\torResult |= enumValue\r\n\t\t\t\t\t\t\torEnums.push(glEnumToString(enumValue))\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (orResult === value) {\r\n\t\t\t\t\t\treturn orEnums.join(' | ')\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn glEnumToString(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tif (value === null) {\r\n\t\treturn 'null'\r\n\t} else if (value === undefined) {\r\n\t\treturn 'undefined'\r\n\t} else {\r\n\t\treturn value.toString()\r\n\t}\r\n}\r\n\r\n/**\r\n * Converts the arguments of a WebGL function to a string.\r\n * Attempts to convert enum arguments to strings.\r\n *\r\n * @param functionName the name of the WebGL function.\r\n * @param args The arguments.\r\n * @return The arguments as a string.\r\n */\r\nexport function glFunctionArgsToString(functionName: string, args: number[]): string {\r\n\t// apparently we can't do args.join(',')\r\n\tvar argStr = ''\r\n\tvar numArgs = args.length\r\n\tfor (var ii = 0; ii < numArgs; ++ii) {\r\n\t\targStr += (ii == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, ii, args[ii])\r\n\t}\r\n\treturn argStr\r\n}\r\n\r\nfunction makePropertyWrapper(wrapper: any, original: any, propertyName: string) {\r\n\t//log('wrap prop: ' + propertyName)\r\n\twrapper.__defineGetter__(propertyName, function() {\r\n\t\treturn original[propertyName]\r\n\t})\r\n\t// TODO(gmane): this needs to handle properties that take more than\r\n\t// one value?\r\n\twrapper.__defineSetter__(propertyName, function(value: any) {\r\n\t\t//log('set: ' + propertyName)\r\n\t\toriginal[propertyName] = value\r\n\t})\r\n}\r\n\r\n/**\r\n * Given a WebGL context returns a wrapped context that calls\r\n * gl.getError after every command and calls a function if the\r\n * result is not NO_ERROR.\r\n *\r\n * You can supply your own function if you want. For example, if you'd like\r\n * an exception thrown on any GL error you could do this\r\n *\r\n *    function throwOnGLError(err, funcName, args) {\r\n *      throw new Error(WebGLDebugUtils.glEnumToString(err) +\r\n *            ' was caused by call to ' + funcName)\r\n *    }\r\n *\r\n *    ctx = WebGLDebugUtils.makeDebugContext(\r\n *        canvas.getContext('webgl'), throwOnGLError)\r\n *\r\n * @param ctx The webgl context to wrap.\r\n * @param opt_onErrorFunc The function\r\n *     to call when gl.getError returns an error. If not specified the default\r\n *     function calls console.log with a message.\r\n * @param opt_onFunc The\r\n *     function to call when each webgl function is called. You\r\n *     can use this to log all calls for example.\r\n * @param opt_err_ctx The webgl context\r\n *        to call getError on if different than ctx.\r\n */\r\nexport function makeDebugContext(\r\n\tctx: WebGLRenderingContextStrict,\r\n\topt_onErrorFunc?: (err: GL.Error, funcName: string, args: any[]) => void,\r\n\topt_onFunc?: (funcName: string, args: any[]) => void,\r\n\topt_err_ctx: WebGLRenderingContextStrict = ctx,\r\n): WebGLRenderingContext {\r\n\tinit()\r\n\topt_onErrorFunc =\r\n\t\topt_onErrorFunc ||\r\n\t\tfunction(err, functionName, args) {\r\n\t\t\t// apparently we can't do args.join(',')\r\n\t\t\tvar argStr = ''\r\n\t\t\tvar numArgs = args.length\r\n\t\t\tfor (let i = 0; i < numArgs; ++i) {\r\n\t\t\t\targStr += (i == 0 ? '' : ', ') + glFunctionArgToString(functionName, numArgs, i, args[i])\r\n\t\t\t}\r\n\t\t\terror('WebGL error ' + glEnumToString(err) + ' in ' + functionName + '(' + argStr + ')')\r\n\t\t}\r\n\r\n\t// Holds booleans for each GL error so after we get the error ourselves\r\n\t// we can still return it to the client app.\r\n\tconst glErrorShadow: { [k: number]: boolean } = {}\r\n\r\n\t// Makes a function that calls a WebGL function and then calls getError.\r\n\tfunction makeErrorWrapper(ctx: WebGLRenderingContextStrict, functionName: string) {\r\n\t\treturn function(...args: any[]) {\r\n\t\t\tif (opt_onFunc) {\r\n\t\t\t\topt_onFunc(functionName, args)\r\n\t\t\t}\r\n\t\t\tconst result = (ctx as any)[functionName].apply(ctx, args)\r\n\t\t\tconst err = opt_err_ctx.getError()\r\n\t\t\tif (err != 0) {\r\n\t\t\t\tglErrorShadow[err] = true\r\n\t\t\t\topt_onErrorFunc!(err, functionName, args)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t}\r\n\t}\r\n\r\n\t// Make a an object that has a copy of every property of the WebGL context\r\n\t// but wraps all functions.\r\n\tconst wrapper: any = {}\r\n\tfor (let propertyName in ctx) {\r\n\t\tconst prop = ctx[propertyName as keyof WebGLRenderingContextStrict]\r\n\t\tif ('function' === typeof prop) {\r\n\t\t\tif (propertyName != 'getExtension') {\r\n\t\t\t\twrapper[propertyName] = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tlet wrapped = makeErrorWrapper(ctx, propertyName)\r\n\t\t\t\twrapper[propertyName as any] = function() {\r\n\t\t\t\t\tconst result = wrapped.apply(ctx, arguments)\r\n\t\t\t\t\tif (!result) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn makeDebugContext(result, opt_onErrorFunc, opt_onFunc, opt_err_ctx)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tmakePropertyWrapper(wrapper, ctx, propertyName)\r\n\t\t}\r\n\t}\r\n\r\n\t// Override the getError function with one that returns our saved results.\r\n\twrapper.getError = function() {\r\n\t\tfor (const err in glErrorShadow) {\r\n\t\t\tif (glErrorShadow.hasOwnProperty(err)) {\r\n\t\t\t\tif (glErrorShadow[err]) {\r\n\t\t\t\t\tglErrorShadow[err] = false\r\n\t\t\t\t\treturn parseInt(err)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn ctx.NO_ERROR\r\n\t}\r\n\r\n\treturn wrapper\r\n}\r\nexport function isWebGL2RenderingContext(o: any): o is WebGL2RenderingContext {\r\n\treturn !!o.createTransformFeedback\r\n}\r\n/**\r\n * Resets a context to the initial state.\r\n * @param ctx The webgl context to\r\n *     reset.\r\n */\r\nexport function resetToInitialState(ctx2: WebGL2RenderingContext | WebGLRenderingContextStrict) {\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.bindVertexArray(null)\r\n\t}\r\n\r\n\tconst numAttribs = ctx2.getParameter(ctx2.MAX_VERTEX_ATTRIBS)\r\n\tconst tmp = ctx2.createBuffer()\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, tmp)\r\n\tfor (let ii = 0; ii < numAttribs; ++ii) {\r\n\t\tctx2.disableVertexAttribArray(ii)\r\n\t\tctx2.vertexAttribPointer(ii, 4, ctx2.FLOAT, false, 0, 0)\r\n\t\tctx2.vertexAttrib1f(ii, 0)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.vertexAttribDivisor(ii, 0)\r\n\t\t}\r\n\t}\r\n\tctx2.deleteBuffer(tmp)\r\n\r\n\tconst numTextureUnits = ctx2.getParameter(ctx2.MAX_TEXTURE_IMAGE_UNITS)\r\n\tfor (let ii = 0; ii < numTextureUnits; ++ii) {\r\n\t\tctx2.activeTexture((ctx2.TEXTURE0 + ii) as GL.TextureUnit)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_CUBE_MAP, null)\r\n\t\tctx2.bindTexture(ctx2.TEXTURE_2D, null)\r\n\t\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_2D_ARRAY, null)\r\n\t\t\tctx2.bindTexture(ctx2.TEXTURE_3D, null)\r\n\t\t\tctx2.bindSampler(ii, null)\r\n\t\t}\r\n\t}\r\n\r\n\tctx2.activeTexture(ctx2.TEXTURE0)\r\n\tctx2.useProgram(null)\r\n\tctx2.bindBuffer(ctx2.ARRAY_BUFFER, null)\r\n\tctx2.bindBuffer(ctx2.ELEMENT_ARRAY_BUFFER, null)\r\n\tctx2.bindFramebuffer(ctx2.FRAMEBUFFER, null)\r\n\tctx2.bindRenderbuffer(ctx2.RENDERBUFFER, null)\r\n\tctx2.disable(ctx2.BLEND)\r\n\tctx2.disable(ctx2.CULL_FACE)\r\n\tctx2.disable(ctx2.DEPTH_TEST)\r\n\tctx2.disable(ctx2.DITHER)\r\n\tctx2.disable(ctx2.SCISSOR_TEST)\r\n\tctx2.blendColor(0, 0, 0, 0)\r\n\tctx2.blendEquation(ctx2.FUNC_ADD)\r\n\tctx2.blendFunc(ctx2.ONE, ctx2.ZERO)\r\n\tctx2.clearColor(0, 0, 0, 0)\r\n\tctx2.clearDepth(1)\r\n\tctx2.clearStencil(-1)\r\n\tctx2.colorMask(true, true, true, true)\r\n\tctx2.cullFace(ctx2.BACK)\r\n\tctx2.depthFunc(ctx2.LESS)\r\n\tctx2.depthMask(true)\r\n\tctx2.depthRange(0, 1)\r\n\tctx2.frontFace(ctx2.CCW)\r\n\tctx2.hint(ctx2.GENERATE_MIPMAP_HINT, ctx2.DONT_CARE)\r\n\tctx2.lineWidth(1)\r\n\tctx2.pixelStorei(ctx2.PACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_ALIGNMENT, 4)\r\n\tctx2.pixelStorei(ctx2.UNPACK_FLIP_Y_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false)\r\n\tctx2.pixelStorei(ctx2.UNPACK_COLORSPACE_CONVERSION_WEBGL, ctx2.BROWSER_DEFAULT_WEBGL)\r\n\tctx2.polygonOffset(0, 0)\r\n\tctx2.sampleCoverage(1, false)\r\n\tctx2.scissor(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.stencilFunc(ctx2.ALWAYS, 0, 0xffffffff)\r\n\tctx2.stencilMask(0xffffffff)\r\n\tctx2.stencilOp(ctx2.KEEP, ctx2.KEEP, ctx2.KEEP)\r\n\tctx2.viewport(0, 0, ctx2.canvas.width, ctx2.canvas.height)\r\n\tctx2.clear(ctx2.COLOR_BUFFER_BIT | ctx2.DEPTH_BUFFER_BIT | ctx2.STENCIL_BUFFER_BIT)\r\n\r\n\tif (isWebGL2RenderingContext(ctx2)) {\r\n\t\tctx2.drawBuffers([ctx2.BACK])\r\n\t\tctx2.readBuffer(ctx2.BACK)\r\n\t\tctx2.bindBuffer(ctx2.COPY_READ_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.COPY_WRITE_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_PACK_BUFFER, null)\r\n\t\tctx2.bindBuffer(ctx2.PIXEL_UNPACK_BUFFER, null)\r\n\t\tconst numTransformFeedbacks = ctx2.getParameter(ctx2.MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS)\r\n\t\tfor (let ii = 0; ii < numTransformFeedbacks; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.TRANSFORM_FEEDBACK_BUFFER, ii, null)\r\n\t\t}\r\n\t\tconst numUBOs = ctx2.getParameter(ctx2.MAX_UNIFORM_BUFFER_BINDINGS)\r\n\t\tfor (let ii = 0; ii < numUBOs; ++ii) {\r\n\t\t\tctx2.bindBufferBase(ctx2.UNIFORM_BUFFER, ii, null)\r\n\t\t}\r\n\t\tctx2.disable(ctx2.RASTERIZER_DISCARD)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_IMAGE_HEIGHT, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_IMAGES, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.UNPACK_SKIP_PIXELS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_ROW_LENGTH, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_ROWS, 0)\r\n\t\tctx2.pixelStorei(ctx2.PACK_SKIP_PIXELS, 0)\r\n\t\tctx2.hint(ctx2.FRAGMENT_SHADER_DERIVATIVE_HINT, ctx2.DONT_CARE)\r\n\t}\r\n\r\n\t// TODO: This should NOT be needed but Firefox fails with 'hint'\r\n\twhile (ctx2.getError()) {}\r\n}\r\n\r\n/**\r\n * Given a canvas element returns a wrapped canvas element that will\r\n * simulate lost context. The canvas returned adds the following functions.\r\n *\r\n * loseContext:\r\n *   simulates a lost context event.\r\n *\r\n * restoreContext:\r\n *   simulates the context being restored.\r\n *\r\n * lostContextInNCalls:\r\n *   loses the context after N gl calls.\r\n *\r\n * getNumCalls:\r\n *   tells you how many gl calls there have been so far.\r\n *\r\n * setRestoreTimeout:\r\n *   sets the number of milliseconds until the context is restored\r\n *   after it has been lost. Defaults to 0. Pass -1 to prevent\r\n *   automatic restoring.\r\n *\r\n * @param canvas The canvas element to wrap.\r\n */\r\nexport function makeLostContextSimulatingCanvas(canvas: HTMLCanvasElement) {\r\n\tconst canvas2 = canvas as any\r\n\tlet unwrappedContext_: any\r\n\tconst onLost_: WebGLContextEventListener[] = []\r\n\tconst onRestored_: WebGLContextEventListener[] = []\r\n\tlet wrappedContext_: any = {}\r\n\tlet contextId_ = 1\r\n\tlet contextLost_ = false\r\n\t// const resourceId_ = 0\r\n\tconst resourceDb_: WebGLObject[] = []\r\n\tlet numCallsToLoseContext_ = 0\r\n\tlet numCalls_ = 0\r\n\tlet canRestore_ = false\r\n\tlet restoreTimeout_ = 0\r\n\r\n\t// Holds booleans for each GL error so can simulate errors.\r\n\tconst glErrorShadow_: { [e: number]: boolean } = {}\r\n\r\n\tcanvas2.getContext = (function(f) {\r\n\t\treturn function() {\r\n\t\t\tconst ctx = f.apply(canvas2, arguments)\r\n\t\t\t// Did we get a context and is it a WebGL context?\r\n\t\t\t// @ts-ignore\r\n\t\t\tif (\r\n\t\t\t\tctx instanceof WebGLRenderingContext ||\r\n\t\t\t\t// TODO:?\r\n\t\t\t\t((window as any).WebGL2RenderingContext && ctx instanceof WebGL2RenderingContext)\r\n\t\t\t) {\r\n\t\t\t\tif (ctx != unwrappedContext_) {\r\n\t\t\t\t\tif (unwrappedContext_) {\r\n\t\t\t\t\t\tthrow new Error('got different context')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tunwrappedContext_ = ctx\r\n\t\t\t\t\twrappedContext_ = makeLostContextSimulatingContext(unwrappedContext_)\r\n\t\t\t\t}\r\n\t\t\t\treturn wrappedContext_\r\n\t\t\t}\r\n\t\t\treturn ctx\r\n\t\t}\r\n\t})(canvas2.getContext)\r\n\r\n\tfunction wrapEvent(listener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener }) {\r\n\t\tif (typeof listener == 'function') {\r\n\t\t\treturn listener\r\n\t\t} else {\r\n\t\t\treturn function(e: CustomWebGLContextEvent) {\r\n\t\t\t\tlistener.handleEvent(e)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction addOnContextLostListener(\r\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\r\n\t) {\r\n\t\tonLost_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction addOnContextRestoredListener(\r\n\t\tlistener: WebGLContextEventListener | { handleEvent: WebGLContextEventListener },\r\n\t) {\r\n\t\tonRestored_.push(wrapEvent(listener))\r\n\t}\r\n\r\n\tfunction wrapAddEventListener(canvas: HTMLCanvasElement) {\r\n\t\tconst f = canvas.addEventListener\r\n\t\tcanvas.addEventListener = function(type: string, listener: any) {\r\n\t\t\tswitch (type) {\r\n\t\t\t\tcase 'webglcontextlost':\r\n\t\t\t\t\taddOnContextLostListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tcase 'webglcontextrestored':\r\n\t\t\t\t\taddOnContextRestoredListener(listener)\r\n\t\t\t\t\tbreak\r\n\t\t\t\tdefault:\r\n\t\t\t\t\tf.apply(canvas, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\twrapAddEventListener(canvas2)\r\n\r\n\tcanvas2.loseContext = function() {\r\n\t\tif (!contextLost_) {\r\n\t\t\tcontextLost_ = true\r\n\t\t\tnumCallsToLoseContext_ = 0\r\n\t\t\t++contextId_\r\n\t\t\twhile (unwrappedContext_.getError()) clearErrors()\r\n\t\t\tglErrorShadow_[unwrappedContext_.CONTEXT_LOST_WEBGL] = true\r\n\t\t\tconst event = makeWebGLContextEvent('context lost')\r\n\t\t\tconst callbacks = onLost_.slice()\r\n\t\t\tsetTimeout(function() {\r\n\t\t\t\t//log('numCallbacks:' + callbacks.length)\r\n\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t//log('calling callback:' + ii)\r\n\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t}\r\n\t\t\t\tif (restoreTimeout_ >= 0) {\r\n\t\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\t\tcanvas2.restoreContext()\r\n\t\t\t\t\t}, restoreTimeout_)\r\n\t\t\t\t}\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.restoreContext = function() {\r\n\t\tif (contextLost_) {\r\n\t\t\tif (onRestored_.length) {\r\n\t\t\t\tsetTimeout(function() {\r\n\t\t\t\t\tif (!canRestore_) {\r\n\t\t\t\t\t\tthrow new Error('can not restore. webglcontestlost listener did not call event.preventDefault')\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfreeResources()\r\n\t\t\t\t\tresetToInitialState(unwrappedContext_)\r\n\t\t\t\t\tcontextLost_ = false\r\n\t\t\t\t\tnumCalls_ = 0\r\n\t\t\t\t\tcanRestore_ = false\r\n\t\t\t\t\tconst callbacks = onRestored_.slice()\r\n\t\t\t\t\tconst event = makeWebGLContextEvent('context restored')\r\n\t\t\t\t\tfor (let ii = 0; ii < callbacks.length; ++ii) {\r\n\t\t\t\t\t\tcallbacks[ii](event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcanvas2.loseContextInNCalls = function(numCalls: number) {\r\n\t\tif (contextLost_) {\r\n\t\t\tthrow new Error('You can not ask a lost context to be lost')\r\n\t\t}\r\n\t\tnumCallsToLoseContext_ = numCalls_ + numCalls\r\n\t}\r\n\r\n\tcanvas2.getNumCalls = function() {\r\n\t\treturn numCalls_\r\n\t}\r\n\r\n\tcanvas2.setRestoreTimeout = function(timeout: number) {\r\n\t\trestoreTimeout_ = timeout\r\n\t}\r\n\r\n\tfunction isWebGLObject(obj: any): obj is WebGLObject {\r\n\t\t//return false\r\n\t\treturn (\r\n\t\t\tobj instanceof WebGLBuffer ||\r\n\t\t\tobj instanceof WebGLFramebuffer ||\r\n\t\t\tobj instanceof WebGLProgram ||\r\n\t\t\tobj instanceof WebGLRenderbuffer ||\r\n\t\t\tobj instanceof WebGLShader ||\r\n\t\t\tobj instanceof WebGLTexture\r\n\t\t)\r\n\t}\r\n\r\n\tfunction checkResources(args: any[]) {\r\n\t\tfor (let i = 0; i < args.length; ++i) {\r\n\t\t\tconst arg = args[i]\r\n\t\t\tif (isWebGLObject(arg)) {\r\n\t\t\t\treturn (arg as any).__webglDebugContextLostId__ == contextId_\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn true\r\n\t}\r\n\r\n\tfunction clearErrors() {\r\n\t\tconst k = (Object.keys(glErrorShadow_) as any) as number[]\r\n\t\tfor (let i = 0; i < k.length; ++i) {\r\n\t\t\tdelete glErrorShadow_[k[i]]\r\n\t\t}\r\n\t}\r\n\r\n\tfunction loseContextIfTime() {\r\n\t\t++numCalls_\r\n\t\tif (!contextLost_) {\r\n\t\t\tif (numCallsToLoseContext_ == numCalls_) {\r\n\t\t\t\tcanvas2.loseContext()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// Makes a function that simulates WebGL when out of context.\r\n\tfunction makeLostContextFunctionWrapper(ctx: WebGLRenderingContext, functionName: string) {\r\n\t\tconst f = (ctx as any)[functionName]\r\n\t\treturn function() {\r\n\t\t\t// log('calling:' + functionName)\r\n\t\t\t// Only call the functions if the context is not lost.\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\t//if (!checkResources(arguments)) {\r\n\t\t\t\t//  glErrorShadow_[wrappedContext_.INVALID_OPERATION] = true\r\n\t\t\t\t//  return\r\n\t\t\t\t//}\r\n\t\t\t\tconst result = f.apply(ctx, arguments)\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction freeResources() {\r\n\t\tfor (let ii = 0; ii < resourceDb_.length; ++ii) {\r\n\t\t\tconst resource = resourceDb_[ii]\r\n\t\t\tif (resource instanceof WebGLBuffer) {\r\n\t\t\t\tunwrappedContext_.deleteBuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLFramebuffer) {\r\n\t\t\t\tunwrappedContext_.deleteFramebuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLProgram) {\r\n\t\t\t\tunwrappedContext_.deleteProgram(resource)\r\n\t\t\t} else if (resource instanceof WebGLRenderbuffer) {\r\n\t\t\t\tunwrappedContext_.deleteRenderbuffer(resource)\r\n\t\t\t} else if (resource instanceof WebGLShader) {\r\n\t\t\t\tunwrappedContext_.deleteShader(resource)\r\n\t\t\t} else if (resource instanceof WebGLTexture) {\r\n\t\t\t\tunwrappedContext_.deleteTexture(resource)\r\n\t\t\t} else if (isWebGL2RenderingContext) {\r\n\t\t\t\t// @ts-ignore\r\n\t\t\t\tif (resource instanceof WebGLQuery) {\r\n\t\t\t\t\tunwrappedContext_.deleteQuery(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSampler) {\r\n\t\t\t\t\tunwrappedContext_.deleteSampler(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLSync) {\r\n\t\t\t\t\tunwrappedContext_.deleteSync(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLTransformFeedback) {\r\n\t\t\t\t\tunwrappedContext_.deleteTransformFeedback(resource)\r\n\t\t\t\t\t// @ts-ignore\r\n\t\t\t\t} else if (resource instanceof WebGLVertexArrayObject) {\r\n\t\t\t\t\tunwrappedContext_.deleteVertexArray(resource)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tinterface CustomWebGLContextEvent {\r\n\t\tstatusMessage: string\r\n\t\tpreventDefault: () => void\r\n\t}\r\n\ttype WebGLContextEventListener = (e: CustomWebGLContextEvent) => void\r\n\tfunction makeWebGLContextEvent(statusMessage: string): CustomWebGLContextEvent {\r\n\t\treturn {\r\n\t\t\tstatusMessage: statusMessage,\r\n\t\t\tpreventDefault: function() {\r\n\t\t\t\tcanRestore_ = true\r\n\t\t\t},\r\n\t\t}\r\n\t}\r\n\r\n\treturn canvas2\r\n\r\n\tfunction makeLostContextSimulatingContext(ctx: WebGLRenderingContext) {\r\n\t\t// copy all functions and properties to wrapper\r\n\t\tfor (const propertyName in ctx) {\r\n\t\t\tif (typeof (ctx as any)[propertyName] == 'function') {\r\n\t\t\t\twrappedContext_[propertyName] = makeLostContextFunctionWrapper(ctx, propertyName)\r\n\t\t\t} else {\r\n\t\t\t\tmakePropertyWrapper(wrappedContext_, ctx, propertyName)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t// Wrap a few functions specially.\r\n\t\twrappedContext_.getError = function() {\r\n\t\t\tloseContextIfTime()\r\n\t\t\tif (!contextLost_) {\r\n\t\t\t\tlet err\r\n\t\t\t\twhile ((err = unwrappedContext_.getError())) {\r\n\t\t\t\t\tglErrorShadow_[err] = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor (const err in glErrorShadow_) {\r\n\t\t\t\tif (glErrorShadow_[err]) {\r\n\t\t\t\t\tdelete glErrorShadow_[err]\r\n\t\t\t\t\treturn err\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn wrappedContext_.NO_ERROR\r\n\t\t}\r\n\r\n\t\tconst creationFunctions = [\r\n\t\t\t'createBuffer',\r\n\t\t\t'createFramebuffer',\r\n\t\t\t'createProgram',\r\n\t\t\t'createRenderbuffer',\r\n\t\t\t'createShader',\r\n\t\t\t'createTexture',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tcreationFunctions.push(\r\n\t\t\t\t'createQuery',\r\n\t\t\t\t'createSampler',\r\n\t\t\t\t'fenceSync',\r\n\t\t\t\t'createTransformFeedback',\r\n\t\t\t\t'createVertexArray',\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let i = 0; i < creationFunctions.length; ++i) {\r\n\t\t\tconst functionName = creationFunctions[i]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tconst obj = f.apply(ctx, arguments)\r\n\t\t\t\t\tobj.__webglDebugContextLostId__ = contextId_\r\n\t\t\t\t\tresourceDb_.push(obj)\r\n\t\t\t\t\treturn obj\r\n\t\t\t\t}\r\n\t\t\t})((ctx as any)[functionName])\r\n\t\t}\r\n\r\n\t\tconst functionsThatShouldReturnNull = [\r\n\t\t\t'getActiveAttrib',\r\n\t\t\t'getActiveUniform',\r\n\t\t\t'getBufferParameter',\r\n\t\t\t'getContextAttributes',\r\n\t\t\t'getAttachedShaders',\r\n\t\t\t'getFramebufferAttachmentParameter',\r\n\t\t\t'getParameter',\r\n\t\t\t'getProgramParameter',\r\n\t\t\t'getProgramInfoLog',\r\n\t\t\t'getRenderbufferParameter',\r\n\t\t\t'getShaderParameter',\r\n\t\t\t'getShaderInfoLog',\r\n\t\t\t'getShaderSource',\r\n\t\t\t'getTexParameter',\r\n\t\t\t'getUniform',\r\n\t\t\t'getUniformLocation',\r\n\t\t\t'getVertexAttrib',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tfunctionsThatShouldReturnNull.push(\r\n\t\t\t\t'getInternalformatParameter',\r\n\t\t\t\t'getQuery',\r\n\t\t\t\t'getQueryParameter',\r\n\t\t\t\t'getSamplerParameter',\r\n\t\t\t\t'getSyncParameter',\r\n\t\t\t\t'getTransformFeedbackVarying',\r\n\t\t\t\t'getIndexedParameter',\r\n\t\t\t\t'getUniformIndices',\r\n\t\t\t\t'getActiveUniforms',\r\n\t\t\t\t'getActiveUniformBlockParameter',\r\n\t\t\t\t'getActiveUniformBlockName',\r\n\t\t\t)\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < functionsThatShouldReturnNull.length; ++ii) {\r\n\t\t\tconst functionName = functionsThatShouldReturnNull[ii]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn null\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\tconst isFunctions = [\r\n\t\t\t'isBuffer',\r\n\t\t\t'isEnabled',\r\n\t\t\t'isFramebuffer',\r\n\t\t\t'isProgram',\r\n\t\t\t'isRenderbuffer',\r\n\t\t\t'isShader',\r\n\t\t\t'isTexture',\r\n\t\t]\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\tisFunctions.push('isQuery', 'isSampler', 'isSync', 'isTransformFeedback', 'isVertexArray')\r\n\t\t}\r\n\t\tfor (let ii = 0; ii < isFunctions.length; ++ii) {\r\n\t\t\tconst functionName = isFunctions[ii]\r\n\t\t\twrappedContext_[functionName] = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_[functionName])\r\n\t\t}\r\n\r\n\t\twrappedContext_.checkFramebufferStatus = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn wrappedContext_.FRAMEBUFFER_UNSUPPORTED\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.checkFramebufferStatus)\r\n\r\n\t\twrappedContext_.getAttribLocation = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn -1\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.getAttribLocation)\r\n\r\n\t\twrappedContext_.getVertexAttribOffset = (function(f) {\r\n\t\t\treturn function() {\r\n\t\t\t\tloseContextIfTime()\r\n\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\treturn 0\r\n\t\t\t\t}\r\n\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t}\r\n\t\t})(wrappedContext_.getVertexAttribOffset)\r\n\r\n\t\twrappedContext_.isContextLost = function() {\r\n\t\t\treturn contextLost_\r\n\t\t}\r\n\r\n\t\tif (isWebGL2RenderingContext) {\r\n\t\t\twrappedContext_.getFragDataLocation = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn -1\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.getFragDataLocation)\r\n\r\n\t\t\twrappedContext_.clientWaitSync = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.WAIT_FAILED\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.clientWaitSync)\r\n\r\n\t\t\twrappedContext_.getUniformBlockIndex = (function(f) {\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\tloseContextIfTime()\r\n\t\t\t\t\tif (contextLost_) {\r\n\t\t\t\t\t\treturn wrappedContext_.INVALID_INDEX\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn f.apply(ctx, arguments)\r\n\t\t\t\t}\r\n\t\t\t})(wrappedContext_.getUniformBlockIndex)\r\n\t\t}\r\n\r\n\t\treturn wrappedContext_\r\n\t}\r\n}\r\n","\r\nattribute vec2 ts_TexCoord;\r\nattribute vec4 ts_Vertex;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nvarying vec2 coord;\r\nvoid main() {\r\n    coord = ts_TexCoord.xy;\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","// A fragment shader for rendering signed distance fields. Main use case: text.\r\n\r\nprecision mediump float;\r\n\r\n// the atlas texture\r\nuniform sampler2D u_texture;\r\n\r\n// the color the text should be rendered\r\nuniform vec4 u_color;\r\n\r\n// the zero distance value in the texture\r\nuniform float u_buffer;\r\n\r\n// control the bluriness of the output 0.05 is a good value\r\nuniform float u_gamma;\r\n\r\n// set to > 1.0 to just output the texture \r\nuniform float u_debug;\r\n\r\nvarying vec2 coord;\r\n\r\nvoid main() {\r\n    float dist = texture2D(u_texture, coord).r;\r\n    if (u_debug > 0.0) {\r\n        gl_FragColor = vec4(dist, dist, dist, 1);\r\n    } else {\r\n        float alpha = smoothstep(u_buffer - u_gamma, u_buffer + u_gamma, dist);\r\n        gl_FragColor = vec4(u_color.rgb, alpha * u_color.a);\r\n        if (gl_FragColor.a == 0.0) {\r\n            discard;\r\n        }\r\n    }\r\n}","import chroma from 'chroma.ts'\r\nimport { addOwnProperties, assert, DEG, int, M4, P3ZX, V, V3 } from 'ts3dutils'\r\nimport { glEnumToString } from './KhronosGroupWebGLDebug'\r\n\r\n// @ts-ignore\r\nimport posCoordVS from '../src/shaders/posCoordVS.glslx'\r\n// @ts-ignore\r\nimport sdfRenderFS from '../src/shaders/sdfRenderFS.glslx'\r\nimport { makeDebugContext, Mesh, Shader, Texture } from './index'\r\n\r\nimport GL = WebGLRenderingContextStrict\r\nexport type GL_COLOR = [number, number, number, number]\r\n/**\r\n * There's only one constant, use it for default values. Use chroma-js or similar for actual colors.\r\n */\r\nexport const GL_COLOR_BLACK: GL_COLOR = [0, 0, 0, 1]\r\n\r\nexport function currentGL(): TSGLContext {\r\n\treturn TSGLContextBase.gl\r\n}\r\n\r\nexport function isNumber(obj: any) {\r\n\tconst str = Object.prototype.toString.call(obj)\r\n\treturn str == '[object Number]' || str == '[object Boolean]'\r\n}\r\n\r\nexport type UniformType = V3 | M4 | number[] | boolean | number\r\nexport type TSGLContext = TSGLContextBase & (WebGLRenderingContextStrict | WebGL2RenderingContext)\r\nexport interface TSGLContextBase extends WebGLRenderingContextStrict {}\r\nexport class TSGLContextBase {\r\n\tmodelViewMatrix: M4 = M4.identity()\r\n\tprojectionMatrix: M4 = M4.identity()\r\n\tstatic readonly MODELVIEW: { __MATRIX_MODE_CONSTANT: any } = 0 as any\r\n\tstatic readonly PROJECTION: { __MATRIX_MODE_CONSTANT: any } = 1 as any\r\n\tMODELVIEW: typeof TSGLContextBase.MODELVIEW\r\n\tPROJECTION: typeof TSGLContextBase.PROJECTION\r\n\r\n\treadonly version: 1 | 2\r\n\r\n\tstatic HALF_FLOAT_OES: int = 0x8d61\r\n\tHALF_FLOAT_OES: int\r\n\r\n\tprivate tempMatrix = new M4()\r\n\tprivate resultMatrix = new M4()\r\n\tprivate modelViewStack: M4[] = []\r\n\tprivate projectionStack: M4[] = []\r\n\tprivate currentMatrixName: 'modelViewMatrix' | 'projectionMatrix'\r\n\tprivate stack: M4[]\r\n\r\n\tmeshes: { [name: string]: Mesh }\r\n\tshaders: { [name: string]: Shader }\r\n\tpublic drawCallCount: int = 0\r\n\tpublic projectionMatrixVersion: int = 0\r\n\tpublic modelViewMatrixVersion: int = 0\r\n\ttextCtx!: CanvasRenderingContext2D\r\n\tTEXT_TEXTURE_HEIGHT: string\r\n\tTEXT_TEXTURE_FONT: string\r\n\ttextMetrics: FontJsonMetrics\r\n\ttextAtlas: Texture\r\n\ttextRenderShader: Shader<any, any>\r\n\r\n\tprotected constructor(\r\n\t\tgl: TSGLContextBase,\r\n\t\tprivate immediate = {\r\n\t\t\tmesh: new Mesh().addVertexBuffer('coords', 'ts_TexCoord').addVertexBuffer('colors', 'ts_Color'),\r\n\t\t\tmode: -1 as GL.DrawMode | -1,\r\n\t\t\tcoord: [0, 0] as [number, number],\r\n\t\t\tcolor: [1, 1, 1, 1] as GL_COLOR,\r\n\t\t\tpointSize: 1,\r\n\t\t\tshader: Shader.create(\r\n\t\t\t\t`\r\n\t\t\tattribute vec4 ts_Color;\r\n\t\t\tattribute vec4 ts_Vertex;\r\n\t\t\tuniform mat4 ts_ModelViewProjectionMatrix;\r\n\t\t\tattribute vec2 ts_TexCoord;\r\n            uniform float pointSize;\r\n            varying vec4 color;\r\n            varying vec2 coord;\r\n            void main() {\r\n                color = ts_Color;\r\n                coord = ts_TexCoord;\r\n                gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n                gl_PointSize = pointSize;\r\n            }\r\n\t\t`,\r\n\t\t\t\t`\r\n\t\t\tprecision highp float;\r\n            uniform sampler2D texture;\r\n            uniform float pointSize;\r\n            // uniform bool useTexture;\r\n            varying vec4 color;\r\n            varying vec2 coord;\r\n            void main() {\r\n                gl_FragColor = color;\r\n                // if (useTexture) gl_FragColor *= texture2D(texture, coord.xy);\r\n            }\r\n        `,\r\n\t\t\t\tgl,\r\n\t\t\t),\r\n\t\t},\r\n\t) {\r\n\t\tthis.matrixMode(TSGLContextBase.MODELVIEW)\r\n\t}\r\n\r\n\t/// Implement the OpenGL modelview and projection matrix stacks, along with some other useful GLU matrix functions.\r\n\tmatrixMode(mode: { __MATRIX_MODE_CONSTANT: any }): void {\r\n\t\tswitch (mode) {\r\n\t\t\tcase this.MODELVIEW:\r\n\t\t\t\tthis.currentMatrixName = 'modelViewMatrix'\r\n\t\t\t\tthis.stack = this.modelViewStack\r\n\t\t\t\tbreak\r\n\t\t\tcase this.PROJECTION:\r\n\t\t\t\tthis.currentMatrixName = 'projectionMatrix'\r\n\t\t\t\tthis.stack = this.projectionStack\r\n\t\t\t\tbreak\r\n\t\t\tdefault:\r\n\t\t\t\tthrow new Error('invalid matrix mode ' + mode)\r\n\t\t}\r\n\t}\r\n\r\n\tloadIdentity(): void {\r\n\t\tM4.identity(this[this.currentMatrixName])\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tloadMatrix(m4: M4) {\r\n\t\tM4.copy(m4, this[this.currentMatrixName])\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tmultMatrix(m4: M4) {\r\n\t\tM4.multiply(this[this.currentMatrixName], m4, this.resultMatrix)\r\n\t\tconst temp = this.resultMatrix\r\n\t\tthis.resultMatrix = this[this.currentMatrixName]\r\n\t\tthis[this.currentMatrixName] = temp\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\tmirror(plane: { normal1: V3; w: number }) {\r\n\t\tthis.multMatrix(M4.mirror(plane))\r\n\t}\r\n\r\n\tperspective(fovDegrees: number, aspect: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.perspectiveRad(fovDegrees * DEG, aspect, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tfrustum(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.frustum(left, right, bottom, top, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tortho(left: number, right: number, bottom: number, top: number, near: number, far: number) {\r\n\t\tthis.multMatrix(M4.ortho(left, right, bottom, top, near, far, this.tempMatrix))\r\n\t}\r\n\r\n\tscale(x: number, y: number, z?: number): void\r\n\tscale(scale: number): void\r\n\tscale(v: V3): void\r\n\tscale(...args: any[]) {\r\n\t\tthis.multMatrix((M4.scale as any)(...args, this.tempMatrix))\r\n\t}\r\n\r\n\tmirroredX() {\r\n\t\tthis.multMatrix(M4.mirror(P3ZX))\r\n\t}\r\n\r\n\ttranslate(x: number, y?: number, z?: number): void\r\n\ttranslate(v: V3): void\r\n\ttranslate(x: any, y?: any, z?: any) {\r\n\t\tif (undefined !== y) {\r\n\t\t\tthis.multMatrix(M4.translate(x, y, z, this.tempMatrix))\r\n\t\t} else {\r\n\t\t\tthis.multMatrix(M4.translate(x, this.tempMatrix))\r\n\t\t}\r\n\t}\r\n\r\n\trotate(angleDegrees: number, x: number, y: number, z: number) {\r\n\t\tthis.multMatrix(M4.rotate(angleDegrees * DEG, { x, y, z }, this.tempMatrix))\r\n\t}\r\n\r\n\tlookAt(eye: V3, center: V3, up: V3) {\r\n\t\tthis.multMatrix(M4.lookAt(eye, center, up, this.tempMatrix))\r\n\t}\r\n\r\n\tpushMatrix() {\r\n\t\tthis.stack.push(M4.copy(this[this.currentMatrixName]))\r\n\t}\r\n\r\n\tpopMatrix() {\r\n\t\tconst pop = this.stack.pop()\r\n\t\tassert(undefined !== pop)\r\n\t\tthis[this.currentMatrixName] = pop as M4\r\n\t\tthis.currentMatrixName == 'projectionMatrix' ? this.projectionMatrixVersion++ : this.modelViewMatrixVersion++\r\n\t}\r\n\r\n\t/**\r\n\t * World coordinates (WC) to screen/window coordinates matrix\r\n\t */\r\n\twcToWindowMatrix() {\r\n\t\tconst viewport = this.getParameter(this.VIEWPORT)\r\n\t\tconst [x, y, w, h] = viewport\r\n\t\t// prettier-ignore\r\n\t\tconst viewportToScreenMatrix = new M4([\r\n\t\t\tw / 2, 0, 0, x + w / 2,\r\n\t\t\th / 2, 0, 0, y + h / 2,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1,\r\n\t\t])\r\n\t\treturn M4.product(viewportToScreenMatrix, this.projectionMatrix, this.modelViewMatrix)\r\n\t}\r\n\r\n\t/////////// IMMEDIATE MODE\r\n\t// ### Immediate mode\r\n\t//\r\n\t// Provide an implementation of OpenGL's deprecated immediate mode. This is\r\n\t// deprecated for a reason: constantly re-specifying the geometry is a bad\r\n\t// idea for performance. You should use a `GL.Mesh` instead, which specifies\r\n\t// the geometry once and caches it on the graphics card. Still, nothing\r\n\t// beats a quick `viewerGL.begin(WGL.POINTS); viewerGL.vertex(1, 2, 3); viewerGL.end();` for\r\n\t// debugging. This intentionally doesn't implement fixed-function lighting\r\n\t// because it's only meant for quick debugging tasks.\r\n\r\n\tpointSize(pointSize: number): void {\r\n\t\tthis.immediate.shader.uniforms({ pointSize: pointSize })\r\n\t}\r\n\r\n\tbegin(mode: GL.DrawMode) {\r\n\t\tif (this.immediate.mode != -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\r\n\t\tthis.immediate.mode = mode\r\n\t\tthis.immediate.mesh.colors = []\r\n\t\tthis.immediate.mesh.coords = []\r\n\t\tthis.immediate.mesh.vertices = []\r\n\t}\r\n\r\n\tcolor(cssColor: string): void\r\n\tcolor(r: number, g: number, b: number, a?: number): void\r\n\tcolor(hexInt: int): void\r\n\tcolor(glColor: GL_COLOR): void\r\n\tcolor(...args: any[]) {\r\n\t\tthis.immediate.color =\r\n\t\t\t1 == args.length && Array.isArray(args[0])\r\n\t\t\t\t? args[0]\r\n\t\t\t\t: 1 == args.length && 'number' == typeof args[0]\r\n\t\t\t\t\t? hexIntToGLColor(args[0])\r\n\t\t\t\t\t: 1 == args.length && 'string' == typeof args[0]\r\n\t\t\t\t\t\t? chroma.color(args[0]).gl()\r\n\t\t\t\t\t\t: [args[0], args[1], args[2], args[3] || 1]\r\n\t}\r\n\r\n\ttexCoord(s: number, t: number): void\r\n\ttexCoord(coords: [number, number]): void\r\n\ttexCoord(coords: { x: number; y: number }): void\r\n\ttexCoord(...args: any[]) {\r\n\t\tthis.immediate.coord = V.apply(undefined, args).toArray(2)\r\n\t}\r\n\r\n\tvertex(v: V3): void\r\n\tvertex(x: number, y: number, z: number): void\r\n\tvertex(...args: any[]) {\r\n\t\tthis.immediate.mesh.colors.push(this.immediate.color)\r\n\t\tthis.immediate.mesh.coords.push(this.immediate.coord)\r\n\t\tthis.immediate.mesh.vertices.push(V.apply(undefined, args))\r\n\t}\r\n\r\n\tend(): void {\r\n\t\tif (this.immediate.mode == -1) throw new Error('mismatched viewerGL.begin() and viewerGL.end() calls')\r\n\t\tthis.immediate.mesh.compile()\r\n\t\tthis.immediate.shader\r\n\t\t\t.uniforms({\r\n\t\t\t\tuseTexture: !!TSGLContextBase.gl.getParameter(this.TEXTURE_BINDING_2D),\r\n\t\t\t})\r\n\t\t\t.drawBuffers(this.immediate.mesh.vertexBuffers, undefined, this.immediate.mode)\r\n\t\tthis.immediate.mode = -1\r\n\t}\r\n\r\n\t////////// MISCELLANEOUS METHODS\r\n\tstatic gl: TSGLContextBase\r\n\r\n\tmakeCurrent() {\r\n\t\tTSGLContextBase.gl = this\r\n\t}\r\n\r\n\t/**\r\n\t * Starts an animation loop.\r\n\t */\r\n\tanimate(callback: (this: TSGLContextBase, domHighResTimeStamp: number, timeSinceLast: number) => void): () => void {\r\n\t\tconst requestAnimationFrame: typeof window.requestAnimationFrame =\r\n\t\t\twindow.requestAnimationFrame ||\r\n\t\t\t(window as any).mozRequestAnimationFrame ||\r\n\t\t\twindow.webkitRequestAnimationFrame ||\r\n\t\t\tfunction(callback: FrameRequestCallback) {\r\n\t\t\t\tsetTimeout(() => callback(performance.now()), 1000 / 60)\r\n\t\t\t}\r\n\t\tlet time = performance.now(),\r\n\t\t\tkeepUpdating = true\r\n\t\tconst update = (now: number) => {\r\n\t\t\tif (keepUpdating) {\r\n\t\t\t\tcallback.call(this, now, now - time)\r\n\t\t\t\ttime = now\r\n\t\t\t\trequestAnimationFrame(update)\r\n\t\t\t}\r\n\t\t}\r\n\t\trequestAnimationFrame(update)\r\n\t\treturn () => {\r\n\t\t\tkeepUpdating = false\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Provide an easy way to get a fullscreen app running, including an\r\n\t * automatic 3D perspective projection matrix by default. This should be\r\n\t * called once.\r\n\t *\r\n\t * Just fullscreen, no automatic camera:\r\n\t *\r\n\t *     viewerGL.fullscreen({ camera: false })\r\n\t *\r\n\t * Adjusting field of view, near plane distance, and far plane distance:\r\n\t *\r\n\t *     viewerGL.fullscreen({ fov: 45, near: 0.1, far: 1000 })\r\n\t *\r\n\t * Adding padding from the edge of the window:\r\n\t *\r\n\t *     viewerGL.fullscreen({ paddingLeft: 250, paddingBottom: 60 })\r\n\t */\r\n\tfullscreen(\r\n\t\toptions: {\r\n\t\t\tpaddingTop?: number\r\n\t\t\tpaddingLeft?: number\r\n\t\t\tpaddingRight?: number\r\n\t\t\tpaddingBottom?: number\r\n\t\t\tcamera?: boolean\r\n\t\t\tfov?: number\r\n\t\t\tnear?: number\r\n\t\t\tfar?: number\r\n\t\t} = {},\r\n\t) {\r\n\t\tconst top = options.paddingTop || 0\r\n\t\tconst left = options.paddingLeft || 0\r\n\t\tconst right = options.paddingRight || 0\r\n\t\tconst bottom = options.paddingBottom || 0\r\n\t\tif (!document.body) {\r\n\t\t\tthrow new Error(\r\n\t\t\t\t\"document.body doesn't exist yet (call viewerGL.fullscreen() from \" +\r\n\t\t\t\t\t'window.onload() or from inside the <body> tag)',\r\n\t\t\t)\r\n\t\t}\r\n\t\tdocument.body.appendChild(this.canvas)\r\n\t\tdocument.body.style.overflow = 'hidden'\r\n\t\tthis.canvas.style.position = 'absolute'\r\n\t\tthis.canvas.style.left = left + 'px'\r\n\t\tthis.canvas.style.top = top + 'px'\r\n\t\tthis.canvas.style.width = window.innerWidth - left - right + 'px'\r\n\t\tthis.canvas.style.bottom = window.innerHeight - top - bottom + 'px'\r\n\r\n\t\tconst gl = this\r\n\r\n\t\tfunction windowOnResize() {\r\n\t\t\tgl.canvas.width = (window.innerWidth - left - right) * window.devicePixelRatio\r\n\t\t\tgl.canvas.height = (window.innerHeight - top - bottom) * window.devicePixelRatio\r\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\r\n\t\t\tif (options.camera) {\r\n\t\t\t\tgl.matrixMode(TSGLContextBase.PROJECTION)\r\n\t\t\t\tgl.loadIdentity()\r\n\t\t\t\tgl.perspective(\r\n\t\t\t\t\toptions.fov || 45,\r\n\t\t\t\t\tgl.canvas.width / gl.canvas.height,\r\n\t\t\t\t\toptions.near || 0.1,\r\n\t\t\t\t\toptions.far || 1000,\r\n\t\t\t\t)\r\n\t\t\t\tgl.matrixMode(TSGLContextBase.MODELVIEW)\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\twindow.addEventListener('resize', windowOnResize)\r\n\t\twindowOnResize()\r\n\t\treturn this\r\n\t}\r\n\tgetMouseLine(e: MouseEvent): { anchor: V3; dir: V3 }\r\n\tgetMouseLine(canvasPosX: number, canvasPosY: number): { anchor: V3; dir: V3 }\r\n\tgetMouseLine(canvasPosXOrE: number | MouseEvent, canvasPosY?: number): { anchor: V3; dir: V3 } {\r\n\t\tif (canvasPosXOrE instanceof MouseEvent) {\r\n\t\t\treturn this.getMouseLine(canvasPosXOrE.offsetX, canvasPosXOrE.offsetY)\r\n\t\t}\r\n\t\tconst ndc1 = V(\r\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\r\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\r\n\t\t\t0,\r\n\t\t)\r\n\t\tconst ndc2 = V(\r\n\t\t\t(canvasPosXOrE * 2) / this.canvas.offsetWidth - 1,\r\n\t\t\t(-canvasPosY! * 2) / this.canvas.offsetHeight + 1,\r\n\t\t\t1,\r\n\t\t)\r\n\t\tconst inverseProjectionMatrix = this.projectionMatrix.inversed()\r\n\t\tconst anchor = inverseProjectionMatrix.transformPoint(ndc1)\r\n\t\tconst dir = inverseProjectionMatrix.transformPoint(ndc2).minus(anchor)\r\n\t\treturn { anchor, dir }\r\n\t}\r\n\r\n\tviewportFill() {\r\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\r\n\t}\r\n\r\n\tasync setupTextRendering(pngURL: string, jsonURL: string) {\r\n\t\tthis.textRenderShader = Shader.create(posCoordVS, sdfRenderFS)\r\n\t\t;[this.textAtlas, this.textMetrics] = await Promise.all([\r\n\t\t\tTexture.fromURL(pngURL, {\r\n\t\t\t\tformat: this.LUMINANCE,\r\n\t\t\t\tinternalFormat: this.LUMINANCE,\r\n\t\t\t\ttype: this.UNSIGNED_BYTE,\r\n\t\t\t}),\r\n\t\t\tfetch(jsonURL).then(r => r.json()),\r\n\t\t])\r\n\t\t// const cs = this.textMetrics.chars\r\n\t\t// const maxY = Object.keys(cs).reduce((a, b) => Math.max(a, cs[b][3]), 0)\r\n\t\t// const minY = Object.keys(cs).reduce((a, b) => Math.min(a, cs[b][3] - cs[b][1]), 0)\r\n\t\t// console.log(maxY, minY)\r\n\t}\r\n\r\n\tcachedSDFMeshes: {\r\n\t\t[str: string]: Mesh & { TRIANGLES: int[]; coords: number[]; width: number; lineCount: int }\r\n\t} = {}\r\n\r\n\tgetSDFMeshForString(str: string) {\r\n\t\tassert(this.textMetrics)\r\n\t\treturn (\r\n\t\t\tthis.cachedSDFMeshes[str] ||\r\n\t\t\t(this.cachedSDFMeshes[str] = createTextMesh(this.textMetrics, this.textAtlas, str))\r\n\t\t)\r\n\t}\r\n\r\n\trenderText(\r\n\t\tstring: string,\r\n\t\tcolor: GL_COLOR,\r\n\t\tsize = 1,\r\n\t\txAlign: 'left' | 'center' | 'right' = 'left',\r\n\t\tbaseline: 'top' | 'middle' | 'alphabetic' | 'bottom' = 'bottom',\r\n\t\tgamma = 0.05,\r\n\t\tlineHeight = 1.2,\r\n\t) {\r\n\t\tconst strMesh = this.getSDFMeshForString(string)\r\n\t\tthis.pushMatrix()\r\n\t\tthis.scale(size)\r\n\t\tconst xTranslate = { left: 0, center: -0.5, right: -1 }\r\n\t\tconst yTranslate = {\r\n\t\t\ttop: -this.textMetrics.ascender / this.textMetrics.size,\r\n\t\t\tmiddle: (-this.textMetrics.ascender - this.textMetrics.descender) / 2 / this.textMetrics.size,\r\n\t\t\talphabetic: 0,\r\n\t\t\tbottom: -this.textMetrics.descender / this.textMetrics.size,\r\n\t\t}\r\n\t\t// console.log('yTranslate[baseline]', yTranslate[baseline])\r\n\t\tthis.translate(xTranslate[xAlign] * strMesh.width, yTranslate[baseline], 0)\r\n\t\tthis.multMatrix(M4.forSys(V3.X, V3.Y, new V3(0, -lineHeight, 0)))\r\n\t\tthis.textAtlas.bind(0)\r\n\t\tthis.textRenderShader\r\n\t\t\t.uniforms({ texture: 0, u_color: color, u_debug: 0, u_gamma: gamma, u_buffer: 192 / 256 })\r\n\t\t\t.draw(strMesh)\r\n\t\tthis.popMatrix()\r\n\r\n\t\t// gl.uniform1f(shader.u_debug, debug ? 1 : 0)\r\n\r\n\t\t// gl.uniform4fv(shader.u_color, [1, 1, 1, 1])\r\n\t\t// gl.uniform1f(shader.u_buffer, buffer)\r\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\r\n\r\n\t\t// gl.uniform4fv(shader.u_color, [0, 0, 0, 1])\r\n\t\t// gl.uniform1f(shader.u_buffer, 192 / 256)\r\n\t\t// gl.uniform1f(shader.u_gamma, (gamma * 1.4142) / scale)\r\n\t\t// gl.drawArrays(gl.TRIANGLES, 0, vertexBuffer.numItems)\r\n\t}\r\n\r\n\tstatic create(\r\n\t\toptions: Partial<GL.WebGLContextAttributes & { canvas: HTMLCanvasElement; throwOnError: boolean }> = {},\r\n\t): TSGLContext {\r\n\t\tconst canvas = options.canvas || document.createElement('canvas')\r\n\t\tif (!options.canvas) {\r\n\t\t\tcanvas.width = 800\r\n\t\t\tcanvas.height = 600\r\n\t\t}\r\n\t\tif (!('alpha' in options)) options.alpha = false\r\n\t\tlet newGL: any = undefined\r\n\t\ttry {\r\n\t\t\tnewGL = canvas.getContext('webgl2', options)\r\n\t\t\tnewGL && (newGL.version = 2)\r\n\t\t\tif (!newGL) {\r\n\t\t\t\tnewGL = canvas.getContext('webgl', options) || canvas.getContext('experimental-webgl', options)\r\n\t\t\t\tnewGL && (newGL.version = 1)\r\n\t\t\t}\r\n\t\t\tconsole.log('getting context')\r\n\t\t} catch (e) {\r\n\t\t\tconsole.log(e, 'Failed to get context')\r\n\t\t}\r\n\t\tif (!newGL) throw new Error('WebGL not supported')\r\n\t\tif (options.throwOnError) {\r\n\t\t\tnewGL = makeDebugContext(newGL, (err, funcName) => {\r\n\t\t\t\tthrow new Error(glEnumToString(err) + ' was caused by ' + funcName)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\tTSGLContextBase.gl = newGL\r\n\t\taddOwnProperties(newGL, TSGLContextBase.prototype)\r\n\t\taddOwnProperties(newGL, new TSGLContextBase(newGL))\r\n\t\t//addEventListeners(newGL)\r\n\t\treturn newGL\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the canvas render resolution (canvas.width and canvas.height) to match the display. I.e. it takes into\r\n\t * account window.devicePixelRatio.\r\n\t * @param maxPixelRatio A limit for the pixelRatio. Useful for very high DPI devices such as mobile devices.\r\n\t */\r\n\tfixCanvasRes(maxPixelRatio = Infinity) {\r\n\t\tthis.canvas.width = this.canvas.clientWidth * Math.min(window.devicePixelRatio, maxPixelRatio)\r\n\t\tthis.canvas.height = this.canvas.clientHeight * Math.min(window.devicePixelRatio, maxPixelRatio)\r\n\t\tthis.viewport(0, 0, this.canvas.width, this.canvas.height)\r\n\t}\r\n}\r\nexport namespace TSGLContext {\r\n\t/**\r\n\t * `create()` creates a new WebGL context and augments it with more methods. The alpha channel is disabled\r\n\t * by default because it usually causes unintended transparencies in the canvas.\r\n\t */\r\n\texport const create = TSGLContextBase.create\r\n}\r\n\r\n// enum WGL_ERROR {\r\n// \tNO_ERROR = WGL.NO_ERROR,\r\n// \tINVALID_ENUM = WGL.INVALID_ENUM,\r\n// \tINVALID_VALUE = WGL.INVALID_VALUE,\r\n// \tINVALID_OPERATION = WGL.INVALID_OPERATION,\r\n// \tINVALID_FRAMEBUFFER_OPERATION = WGL.INVALID_FRAMEBUFFER_OPERATION,\r\n// \tOUT_OF_MEMORY = WGL.OUT_OF_MEMORY,\r\n// \tCONTEXT_LOST_WEBGL = WGL.CONTEXT_LOST_WEBGL,\r\n// }\r\n\r\nTSGLContextBase.prototype.MODELVIEW = TSGLContextBase.MODELVIEW\r\nTSGLContextBase.prototype.PROJECTION = TSGLContextBase.PROJECTION\r\nTSGLContextBase.prototype.HALF_FLOAT_OES = TSGLContextBase.HALF_FLOAT_OES\r\n\r\n/**\r\n *\r\n * Push two triangles:\r\n * ```\r\n c - d\r\n | \\ |\r\n a - b\r\n ```\r\n */\r\nexport function pushQuad(triangles: int[], flipped: boolean, a: int, b: int, c: int, d: int) {\r\n\t// prettier-ignore\r\n\tif (flipped) {\r\n\t\ttriangles.push(\r\n\t\t\ta, c, b,\r\n\t\t\tb, c, d)\r\n\t} else {\r\n\t\ttriangles.push(\r\n\t\t\ta, b, c,\r\n\t\t\tb, d, c)\r\n\t}\r\n}\r\n\r\nfunction hexIntToGLColor(color: int): GL_COLOR {\r\n\treturn [(color >> 16) / 255.0, ((color >> 8) & 0xff) / 255.0, (color & 0xff) / 255.0, 1.0]\r\n}\r\n\r\nexport interface FontJsonMetrics {\r\n\tfamily: string\r\n\tstyle: string\r\n\r\n\t// buffer refers to the width of the margin around glyph bounding boxes with distance values\r\n\tbuffer: int\r\n\tsize: number\r\n\r\n\t// [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY]\r\n\t// see https://www.freetype.org/freetype2/docs/tutorial/step2.html\r\n\tchars: { [char: string]: [number, number, number, number, number, number, number] }\r\n\r\n\tdescender: number\r\n\tascender: number\r\n}\r\n// function measureText(metrics: FontJsonMetrics, text: string, size: number) {\r\n// \tconst dimensions = {\r\n// \t\tadvance: 0,\r\n// \t}\r\n\r\n// \tconst scale = size / metrics.size\r\n// \tfor (let i = 0; i < text.length; i++) {\r\n// \t\tconst horiAdvance = metrics.chars[text[i]][4]\r\n// \t\tdimensions.advance += horiAdvance * scale\r\n// \t}\r\n\r\n// \treturn dimensions\r\n// }\r\n\r\n// gl.getExtension('OES_standard_derivatives')\r\n\r\n// gl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE)\r\n\r\n// gl.enable(gl.BLEND)\r\n\r\n// const texture = gl.createTexture()\r\n\r\n// const vertexBuffer = gl.createBuffer()\r\n// const textureBuffer = gl.createBuffer()\r\n\r\nfunction createTextMesh(fontMetrics: FontJsonMetrics, fontTextureAtlas: Texture, str: string, lineHeight = 1) {\r\n\tconst mesh = new Mesh().addIndexBuffer('TRIANGLES').addVertexBuffer('coords', 'ts_TexCoord')\r\n\r\n\tlet cursorX = 0\r\n\tlet cursorY = 0\r\n\r\n\tfunction drawGlyph(chr: string) {\r\n\t\tconst metric = fontMetrics.chars[chr]\r\n\t\tif (!metric) return\r\n\r\n\t\tconst [width, height, horiBearingX, horiBearingY, horiAdvance, posX, posY] = metric\r\n\t\tconst { size, buffer } = fontMetrics\r\n\t\tconst quadStartIndex = mesh.vertices.length\r\n\r\n\t\t// buffer = margin on texture\r\n\t\tif (width > 0 && height > 0) {\r\n\t\t\t// Add a quad (= two triangles) per glyph.\r\n\t\t\tconst left = (cursorX + horiBearingX - buffer) / size\r\n\t\t\tconst right = (cursorX + horiBearingX + width + buffer) / size\r\n\t\t\tconst bottom = (horiBearingY - height - buffer) / size\r\n\t\t\tconst top = (horiBearingY + buffer) / size\r\n\t\t\tmesh.vertices.push(\r\n\t\t\t\tnew V3(left, bottom, cursorY / size),\r\n\t\t\t\tnew V3(right, bottom, cursorY / size),\r\n\t\t\t\tnew V3(left, top, cursorY / size),\r\n\t\t\t\tnew V3(right, top, cursorY / size),\r\n\t\t\t)\r\n\r\n\t\t\tconst coordsLeft = posX / fontTextureAtlas.width\r\n\t\t\tconst coordsRight = (posX + width + 2 * buffer) / fontTextureAtlas.width\r\n\t\t\tconst coordsBottom = (posY + height + 2 * buffer) / fontTextureAtlas.height\r\n\t\t\tconst coordsTop = posY / fontTextureAtlas.height\r\n\t\t\tmesh.coords.push(\r\n\t\t\t\t[coordsLeft, coordsBottom],\r\n\t\t\t\t[coordsRight, coordsBottom],\r\n\t\t\t\t[coordsLeft, coordsTop],\r\n\t\t\t\t[coordsRight, coordsTop],\r\n\t\t\t)\r\n\t\t\t// mesh.coords.push([0, 0], [0, 1], [1, 0], [1, 1])\r\n\r\n\t\t\tpushQuad(mesh.TRIANGLES, false, quadStartIndex, quadStartIndex + 1, quadStartIndex + 2, quadStartIndex + 3)\r\n\t\t}\r\n\r\n\t\t// pen.x += Math.ceil(horiAdvance * scale);\r\n\t\tcursorX += horiAdvance\r\n\t}\r\n\r\n\tfor (let i = 0; i < str.length; i++) {\r\n\t\tconst chr = str[i]\r\n\t\tif ('\\n' == chr) {\r\n\t\t\tcursorX = 0\r\n\t\t\tcursorY += lineHeight * fontMetrics.size\r\n\t\t} else {\r\n\t\t\tdrawGlyph(chr)\r\n\t\t}\r\n\t}\r\n\r\n\treturn Object.assign(mesh.compile(), { width: cursorX / fontMetrics.size, lineCount: cursorY + 1 })\r\n}\r\n","precision mediump float;\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nattribute vec4 ts_Vertex;\r\nvoid main() {\r\n    gl_Position = ts_ModelViewProjectionMatrix * ts_Vertex;\r\n}","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as the `TypeError` message for \"Functions\" methods. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map'),\n    nativeCreate = getNative(Object, 'create');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n}\n\n/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  return this.has(key) && delete this.__data__[key];\n}\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n}\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  return true;\n}\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries ? entries.length : 0;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  return getMapData(this, key)['delete'](key);\n}\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  getMapData(this, key).set(key, value);\n  return this;\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = (isFunction(value) || isHostObject(value)) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\n/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to process.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result);\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Assign cache to `_.memoize`.\nmemoize.Cache = MapCache;\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\nmodule.exports = memoize;\n","precision mediump float;\r\nuniform vec4 color;\r\nvoid main() {\r\n    gl_FragColor = color;\r\n}","precision mediump float;\r\n\r\nuniform mat4 ts_ModelViewProjectionMatrix;\r\nuniform mat3 ts_NormalMatrix;\r\nuniform float f;\r\n\r\nattribute vec3 ts_Normal;\r\nattribute vec4 ts_Vertex;\r\nattribute vec4 ts_Vertex2;\r\nattribute vec4 ts_Color;\r\n\r\nvarying vec3 normal;\r\nvarying vec4 color;\r\n\r\nvoid main() {\r\n    vec4 v = mix(ts_Vertex, ts_Vertex2, f);\r\n\tgl_Position = ts_ModelViewProjectionMatrix * v;\r\n\tnormal = ts_NormalMatrix * ts_Normal;\r\n\tcolor = ts_Color;\r\n}","precision mediump float;\r\nvarying vec4 color;\r\nvoid main() {\r\n    gl_FragColor = color;\r\n}","/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\n\tfunction classNames () {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg) && arg.length) {\n\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\tif (inner) {\n\t\t\t\t\tclasses.push(inner);\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n"],"names":["floatHashCode","CustomMap","PI","abs","V","KEYWORD_REGEXP","scales","Buffer","currentGL","WGL","Mesh","pushQuad","Shader","Texture","TSGLContextBase","time","TSGLContext","global","Map","eq","toSource"],"mappings":"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AAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACtE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAGhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACtE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAA;YACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAClE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAGhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAClE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACpE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAG/D,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACtE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC;kBACrE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAA;YAClE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,G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CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC/D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAC/D,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAChE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEhE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACjE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACjE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YAEnE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;YACpE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,GAAG,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"}